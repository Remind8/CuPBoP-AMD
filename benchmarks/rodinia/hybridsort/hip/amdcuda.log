===================================================
Changing directory to: /nethome/jchen706/coding/code2/amdcuda/benchmarks/rodinia/hybridsort/hip
Working directory: /nethome/jchen706/coding/code2/amdcuda/benchmarks/rodinia/hybridsort/hip
===================================================

===================================================
Running command: /nethome/jchen706/prefix/opt/llvm/bin/clang++ mergesort_kernel.cu -c -O0 --cuda-path=/nethome/jchen706/cuda-11.5 --cuda-gpu-arch=sm_35 -L/nethome/jchen706/cuda-11.5/lib64 -lcudart_static -ldl -lrt -pthread -save-temps -fPIC
Working directory: /nethome/jchen706/coding/code2/amdcuda/benchmarks/rodinia/hybridsort/hip


Program exited with code: 0
===================================================

===================================================
Gathering bitcode libraries
* Built-in Bitcode hip.bc at /nethome/jchen706/prefix/opt/amdgcn/bitcode/hip.bc
* Built-in Bitcode ocml.bc at /nethome/jchen706/prefix/opt/amdgcn/bitcode/ocml.bc
* Built-in Bitcode ockl.bc at /nethome/jchen706/prefix/opt/amdgcn/bitcode/ockl.bc
* Built-in Bitcode oclc_daz_opt_off.bc at /nethome/jchen706/prefix/opt/amdgcn/bitcode/oclc_daz_opt_off.bc
* Built-in Bitcode oclc_unsafe_math_off.bc at /nethome/jchen706/prefix/opt/amdgcn/bitcode/oclc_unsafe_math_off.bc
* Built-in Bitcode oclc_finite_only_off.bc at /nethome/jchen706/prefix/opt/amdgcn/bitcode/oclc_finite_only_off.bc
* Built-in Bitcode oclc_correctly_rounded_sqrt_on.bc at /nethome/jchen706/prefix/opt/amdgcn/bitcode/oclc_correctly_rounded_sqrt_on.bc
* Built-in Bitcode oclc_wavefrontsize64_on.bc at /nethome/jchen706/prefix/opt/amdgcn/bitcode/oclc_wavefrontsize64_on.bc
* Built-in Bitcode oclc_isa_version_90a.bc at /nethome/jchen706/prefix/opt/amdgcn/bitcode/oclc_isa_version_90a.bc
* Built-in Bitcode oclc_abi_version_400.bc at /nethome/jchen706/prefix/opt/amdgcn/bitcode/oclc_abi_version_400.bc
* Linked Bitcode cudaamd-gridblock-size.ll at /nethome/jchen706/coding/code2/amdcuda/bitcode/cudaamd-gridblock-size.ll
* Linked Bitcode cudaamd-math.ll at /nethome/jchen706/coding/code2/amdcuda/bitcode/cudaamd-math.ll
* Linked Bitcode cuda2gcn.ll at /nethome/jchen706/coding/code2/amdcuda/bitcode/cuda2gcn.ll
* Linked Bitcode atomic.ll at /nethome/jchen706/coding/code2/amdcuda/bitcode/atomic.ll
* Linked Bitcode textureInt2DReadMode.ll at /nethome/jchen706/coding/code2/amdcuda/bitcode/textureInt2DReadMode.ll
* Linked Bitcode textureFloat1DReadMode.ll at /nethome/jchen706/coding/code2/amdcuda/bitcode/textureFloat1DReadMode.ll
* Linked Bitcode textureFloat4_1DReadMode.ll at /nethome/jchen706/coding/code2/amdcuda/bitcode/textureFloat4_1DReadMode.ll
* Linked Bitcode cupbop-amd-bitcode.bc at /nethome/jchen706/coding/code2/amdcuda/build/cupbop-amd-bitcode.bc
* Linked Bitcode opencl.bc at /nethome/jchen706/prefix/opt/amdgcn/bitcode/opencl.bc
* Linked Bitcode ockl.bc at /nethome/jchen706/prefix/opt/amdgcn/bitcode/ockl.bc
* Linked Bitcode ocml.bc at /nethome/jchen706/prefix/opt/amdgcn/bitcode/ocml.bc
* Linked Bitcode oclc_abi_version_400.bc at /nethome/jchen706/prefix/opt/amdgcn/bitcode/oclc_abi_version_400.bc
* Linked Bitcode oclc_finite_only_off.bc at /nethome/jchen706/prefix/opt/amdgcn/bitcode/oclc_finite_only_off.bc
* Linked Bitcode oclc_unsafe_math_on.bc at /nethome/jchen706/prefix/opt/amdgcn/bitcode/oclc_unsafe_math_on.bc
* Linked Bitcode oclc_daz_opt_on.bc at /nethome/jchen706/prefix/opt/amdgcn/bitcode/oclc_daz_opt_on.bc
* Linked Bitcode oclc_correctly_rounded_sqrt_on.bc at /nethome/jchen706/prefix/opt/amdgcn/bitcode/oclc_correctly_rounded_sqrt_on.bc
* Linked Bitcode oclc_isa_version_90a.bc at /nethome/jchen706/prefix/opt/amdgcn/bitcode/oclc_isa_version_90a.bc
* Linked Bitcode oclc_wavefrontsize64_on.bc at /nethome/jchen706/prefix/opt/amdgcn/bitcode/oclc_wavefrontsize64_on.bc
===================================================

===================================================
Locating compiled IRs
Found host IR at /nethome/jchen706/coding/code2/amdcuda/benchmarks/rodinia/hybridsort/hip/mergesort_kernel-host-x86_64-unknown-linux-gnu.bc
[*] Found device IR at /nethome/jchen706/coding/code2/amdcuda/benchmarks/rodinia/hybridsort/hip/mergesort_kernel-cuda-nvptx64-nvidia-cuda-sm_35.bc
===================================================

===================================================
Running command: /nethome/jchen706/coding/code2/amdcuda/build/compilation/kernelTranslator /nethome/jchen706/coding/code2/amdcuda/benchmarks/rodinia/hybridsort/hip/mergesort_kernel-cuda-nvptx64-nvidia-cuda-sm_35.bc
Working directory: /nethome/jchen706/coding/code2/amdcuda/benchmarks/rodinia/hybridsort/hip

Called replace_intrinsics on _Z8sortElem6float4
Running vprintf pass on function _Z8sortElem6float4
math fn pass
Called replace_intrinsics on _Z9getLowest6float4S_
Running vprintf pass on function _Z9getLowest6float4S_
Called function: llvm.memcpy.p0.p0.i64
math fn pass
Called replace_intrinsics on _Z10getHighest6float4S_
Running vprintf pass on function _Z10getHighest6float4S_
Called function: llvm.memcpy.p0.p0.i64
math fn pass
Identified a new cuda kernel _Z14mergeSortFirstP6float4i
Called replace_intrinsics on _Z14mergeSortFirstP6float4i
Running vprintf pass on function _Z14mergeSortFirstP6float4i
Called function: _ZN25__cuda_builtin_blockIdx_t17__fetch_builtin_xEv
Called function: _ZN25__cuda_builtin_blockDim_t17__fetch_builtin_xEv
Called function: _ZN26__cuda_builtin_threadIdx_t17__fetch_builtin_xEv
Called function: llvm.nvvm.texsurf.handle.internal.p1
Called function: _ZN25__cuda_builtin_blockDim_t17__fetch_builtin_xEv
Called function: _ZN26__cuda_builtin_threadIdx_t17__fetch_builtin_xEv
Called function: _ZL10tex1DfetchI6float4EN17__nv_tex_rmet_retIT_E4typeE7textureIS2_Li1EL19cudaTextureReadMode0EEi
Called function: llvm.memcpy.p0.p0.i64
Called function: _Z8sortElem6float4
Called function: _ZN25__cuda_builtin_blockDim_t17__fetch_builtin_xEv
Called function: _ZN26__cuda_builtin_threadIdx_t17__fetch_builtin_xEv
Called function: llvm.memcpy.p0.p0.i64
math fn pass
Called replace_intrinsics on _ZN25__cuda_builtin_blockIdx_t17__fetch_builtin_xEv
Found new intrinsics to replace...
Running vprintf pass on function _ZN25__cuda_builtin_blockIdx_t17__fetch_builtin_xEv
Called function: llvm.amdgcn.workgroup.id.x
math fn pass
Called replace_intrinsics on _ZN25__cuda_builtin_blockDim_t17__fetch_builtin_xEv
Found new intrinsics to replace...
Running vprintf pass on function _ZN25__cuda_builtin_blockDim_t17__fetch_builtin_xEv
Called function: cudaamd.nvvm.read.ptx.sreg.ntid.x
math fn pass
Called replace_intrinsics on _ZN26__cuda_builtin_threadIdx_t17__fetch_builtin_xEv
Found new intrinsics to replace...
Running vprintf pass on function _ZN26__cuda_builtin_threadIdx_t17__fetch_builtin_xEv
Called function: llvm.amdgcn.workitem.id.x
math fn pass
Called replace_intrinsics on _ZL10tex1DfetchI6float4EN17__nv_tex_rmet_retIT_E4typeE7textureIS2_Li1EL19cudaTextureReadMode0EEi
Running vprintf pass on function _ZL10tex1DfetchI6float4EN17__nv_tex_rmet_retIT_E4typeE7textureIS2_Li1EL19cudaTextureReadMode0EEi
Called function: _ZN12_GLOBAL__N_110__cuda_tex11__tex_fetchINS0_5__TagILi95EEE6float47textureIS4_Li1EL19cudaTextureReadMode0EEJiEEEvPT0_T1_DpT2_
math fn pass
Identified a new cuda kernel _Z13mergeSortPassP6float4ii
Called replace_intrinsics on _Z13mergeSortPassP6float4ii
Running vprintf pass on function _Z13mergeSortPassP6float4ii
Called function: _ZN25__cuda_builtin_blockIdx_t17__fetch_builtin_xEv
Called function: _ZN25__cuda_builtin_blockDim_t17__fetch_builtin_xEv
Called function: _ZN26__cuda_builtin_threadIdx_t17__fetch_builtin_xEv
Called function: llvm.nvvm.texsurf.handle.internal.p1
Called function: _ZL10tex1DfetchI6float4EN17__nv_tex_rmet_retIT_E4typeE7textureIS2_Li1EL19cudaTextureReadMode0EEi
Called function: llvm.memcpy.p0.p0.i64
Called function: llvm.nvvm.texsurf.handle.internal.p1
Called function: _ZL10tex1DfetchI6float4EN17__nv_tex_rmet_retIT_E4typeE7textureIS2_Li1EL19cudaTextureReadMode0EEi
Called function: llvm.memcpy.p0.p0.i64
Called function: llvm.nvvm.texsurf.handle.internal.p1
Called function: _ZL10tex1DfetchI6float4EN17__nv_tex_rmet_retIT_E4typeE7textureIS2_Li1EL19cudaTextureReadMode0EEi
Called function: llvm.memcpy.p0.p0.i64
Called function: llvm.nvvm.texsurf.handle.internal.p1
Called function: _ZL10tex1DfetchI6float4EN17__nv_tex_rmet_retIT_E4typeE7textureIS2_Li1EL19cudaTextureReadMode0EEi
Called function: llvm.nvvm.texsurf.handle.internal.p1
Called function: _ZL10tex1DfetchI6float4EN17__nv_tex_rmet_retIT_E4typeE7textureIS2_Li1EL19cudaTextureReadMode0EEi
Called function: llvm.memcpy.p0.p0.i64
Called function: llvm.memcpy.p0.p0.i64
Called function: _Z9getLowest6float4S_
Called function: llvm.memcpy.p0.p0.i64
Called function: llvm.memcpy.p0.p0.i64
Called function: _Z10getHighest6float4S_
Called function: llvm.memcpy.p0.p0.i64
Called function: _Z8sortElem6float4
Called function: llvm.memcpy.p0.p0.i64
Called function: llvm.memcpy.p0.p0.i64
Called function: _Z8sortElem6float4
Called function: llvm.memcpy.p0.p0.i64
Called function: llvm.memcpy.p0.p0.i64
Called function: llvm.memcpy.p0.p0.i64
Called function: llvm.memcpy.p0.p0.i64
Called function: llvm.memcpy.p0.p0.i64
Called function: llvm.memcpy.p0.p0.i64
Called function: llvm.memcpy.p0.p0.i64
math fn pass
Identified a new cuda kernel _Z9mergepackPfS_
Called replace_intrinsics on _Z9mergepackPfS_
Running vprintf pass on function _Z9mergepackPfS_
Called function: _ZN25__cuda_builtin_blockIdx_t17__fetch_builtin_xEv
Called function: _ZN25__cuda_builtin_blockDim_t17__fetch_builtin_xEv
Called function: _ZN26__cuda_builtin_threadIdx_t17__fetch_builtin_xEv
Called function: _ZN25__cuda_builtin_blockIdx_t17__fetch_builtin_yEv
math fn pass
Called replace_intrinsics on _ZN25__cuda_builtin_blockIdx_t17__fetch_builtin_yEv
Found new intrinsics to replace...
Running vprintf pass on function _ZN25__cuda_builtin_blockIdx_t17__fetch_builtin_yEv
Called function: llvm.amdgcn.workgroup.id.y
math fn pass
Called replace_intrinsics on _ZN12_GLOBAL__N_110__cuda_tex11__tex_fetchINS0_5__TagILi95EEE6float47textureIS4_Li1EL19cudaTextureReadMode0EEJiEEEvPT0_T1_DpT2_
Running vprintf pass on function _ZN12_GLOBAL__N_110__cuda_tex11__tex_fetchINS0_5__TagILi95EEE6float47textureIS4_Li1EL19cudaTextureReadMode0EEJiEEEvPT0_T1_DpT2_
Called function: _ZN12_GLOBAL__N_110__cuda_tex19__tex_handle_to_objI7textureI6float4Li1EL19cudaTextureReadMode0EEEEyT_
Called function: _ZN12_GLOBAL__N_110__cuda_tex14__tex_fetch_v4INS0_5__TagILi95EEEE5__runI6float4EET_yi
Called function: _ZN12_GLOBAL__N_110__cuda_tex9__convertI6float4S2_E5__runILi4EEES2_S2_
Called function: llvm.memcpy.p0.p0.i64
math fn pass
Called replace_intrinsics on _ZN12_GLOBAL__N_110__cuda_tex9__convertI6float4S2_E5__runILi4EEES2_S2_
Running vprintf pass on function _ZN12_GLOBAL__N_110__cuda_tex9__convertI6float4S2_E5__runILi4EEES2_S2_
math fn pass
Called replace_intrinsics on _ZN12_GLOBAL__N_110__cuda_tex14__tex_fetch_v4INS0_5__TagILi95EEEE5__runI6float4EET_yi
Running vprintf pass on function _ZN12_GLOBAL__N_110__cuda_tex14__tex_fetch_v4INS0_5__TagILi95EEEE5__runI6float4EET_yi
math fn pass
Called replace_intrinsics on _ZN12_GLOBAL__N_110__cuda_tex19__tex_handle_to_objI7textureI6float4Li1EL19cudaTextureReadMode0EEEEyT_
Running vprintf pass on function _ZN12_GLOBAL__N_110__cuda_tex19__tex_handle_to_objI7textureI6float4Li1EL19cudaTextureReadMode0EEEEyT_
math fn pass
Running Shared Memory Process on Module 
Constant Memory Variable: constStartAddr
Constant Memory Variable: finalStartAddr
Constant Memory Variable: nullElems
Process Device Side Vector Function Type _Z8sortElem6float4
Process Device Side Vector Function Type _Z9getLowest6float4S_
Process Device Side Vector Function Type _Z10getHighest6float4S_
  %4 = getelementptr inbounds %struct.HIP_vector_type, ptr %3, i32 0, i32 0
  %5 = getelementptr inbounds %struct.HIP_vector_base, ptr %4, i32 0, i32 0
  %6 = getelementptr inbounds %union.anon, ptr %5, i32 0, i32 0
  %7 = getelementptr inbounds %struct.HIP_vector_base, ptr %6, i32 0, i32 0
  %13 = getelementptr inbounds %struct.float4, ptr %3, i32 0, i32 0
  %17 = getelementptr inbounds %struct.float4, ptr %3, i32 0, i32 1
  %23 = getelementptr inbounds %struct.float4, ptr %3, i32 0, i32 1
  %28 = getelementptr inbounds %struct.float4, ptr %3, i32 0, i32 0
  %34 = getelementptr inbounds %struct.float4, ptr %11, i32 0, i32 0
  %37 = getelementptr inbounds %struct.float4, ptr %3, i32 0, i32 1
  %41 = getelementptr inbounds %struct.float4, ptr %3, i32 0, i32 0
  %47 = getelementptr inbounds %struct.float4, ptr %3, i32 0, i32 1
  %52 = getelementptr inbounds %struct.float4, ptr %3, i32 0, i32 0
  %58 = getelementptr inbounds %struct.float4, ptr %11, i32 0, i32 1
  %61 = getelementptr inbounds %struct.float4, ptr %3, i32 0, i32 2
  %65 = getelementptr inbounds %struct.float4, ptr %3, i32 0, i32 3
  %71 = getelementptr inbounds %struct.float4, ptr %3, i32 0, i32 3
  %76 = getelementptr inbounds %struct.float4, ptr %3, i32 0, i32 2
  %82 = getelementptr inbounds %struct.float4, ptr %11, i32 0, i32 2
  %85 = getelementptr inbounds %struct.float4, ptr %3, i32 0, i32 3
  %89 = getelementptr inbounds %struct.float4, ptr %3, i32 0, i32 2
  %95 = getelementptr inbounds %struct.float4, ptr %3, i32 0, i32 3
  %100 = getelementptr inbounds %struct.float4, ptr %3, i32 0, i32 2
  %106 = getelementptr inbounds %struct.float4, ptr %11, i32 0, i32 3
  %109 = getelementptr inbounds %struct.float4, ptr %11, i32 0, i32 0
  %113 = getelementptr inbounds %struct.float4, ptr %11, i32 0, i32 2
  %119 = getelementptr inbounds %struct.float4, ptr %11, i32 0, i32 2
  %124 = getelementptr inbounds %struct.float4, ptr %11, i32 0, i32 0
  %130 = getelementptr inbounds %struct.float4, ptr %3, i32 0, i32 0
  %133 = getelementptr inbounds %struct.float4, ptr %11, i32 0, i32 1
  %137 = getelementptr inbounds %struct.float4, ptr %11, i32 0, i32 3
  %143 = getelementptr inbounds %struct.float4, ptr %11, i32 0, i32 3
  %148 = getelementptr inbounds %struct.float4, ptr %11, i32 0, i32 1
  %154 = getelementptr inbounds %struct.float4, ptr %3, i32 0, i32 1
  %157 = getelementptr inbounds %struct.float4, ptr %11, i32 0, i32 2
  %161 = getelementptr inbounds %struct.float4, ptr %11, i32 0, i32 0
  %167 = getelementptr inbounds %struct.float4, ptr %11, i32 0, i32 2
  %172 = getelementptr inbounds %struct.float4, ptr %11, i32 0, i32 0
  %178 = getelementptr inbounds %struct.float4, ptr %3, i32 0, i32 2
  %181 = getelementptr inbounds %struct.float4, ptr %11, i32 0, i32 3
  %185 = getelementptr inbounds %struct.float4, ptr %11, i32 0, i32 1
  %191 = getelementptr inbounds %struct.float4, ptr %11, i32 0, i32 3
  %196 = getelementptr inbounds %struct.float4, ptr %11, i32 0, i32 1
  %202 = getelementptr inbounds %struct.float4, ptr %3, i32 0, i32 3
  %205 = getelementptr inbounds %struct.float4, ptr %3, i32 0, i32 0
  %209 = getelementptr inbounds %struct.float4, ptr %11, i32 0, i32 0
  %212 = getelementptr inbounds %struct.float4, ptr %3, i32 0, i32 1
  %216 = getelementptr inbounds %struct.float4, ptr %3, i32 0, i32 2
  %222 = getelementptr inbounds %struct.float4, ptr %3, i32 0, i32 2
  %227 = getelementptr inbounds %struct.float4, ptr %3, i32 0, i32 1
  %233 = getelementptr inbounds %struct.float4, ptr %11, i32 0, i32 1
  %236 = getelementptr inbounds %struct.float4, ptr %3, i32 0, i32 2
  %240 = getelementptr inbounds %struct.float4, ptr %3, i32 0, i32 1
  %246 = getelementptr inbounds %struct.float4, ptr %3, i32 0, i32 2
  %251 = getelementptr inbounds %struct.float4, ptr %3, i32 0, i32 1
  %257 = getelementptr inbounds %struct.float4, ptr %11, i32 0, i32 2
  %260 = getelementptr inbounds %struct.float4, ptr %3, i32 0, i32 3
  %264 = getelementptr inbounds %struct.float4, ptr %11, i32 0, i32 3
  %5 = getelementptr inbounds %struct.HIP_vector_type, ptr %4, i32 0, i32 0
  %6 = getelementptr inbounds %struct.HIP_vector_base, ptr %5, i32 0, i32 0
  %7 = getelementptr inbounds %union.anon, ptr %6, i32 0, i32 0
  %8 = getelementptr inbounds %struct.HIP_vector_base, ptr %7, i32 0, i32 0
  %12 = getelementptr inbounds %struct.HIP_vector_type, ptr %11, i32 0, i32 0
  %13 = getelementptr inbounds %struct.HIP_vector_base, ptr %12, i32 0, i32 0
  %14 = getelementptr inbounds %union.anon, ptr %13, i32 0, i32 0
  %15 = getelementptr inbounds %struct.HIP_vector_base, ptr %14, i32 0, i32 0
  %21 = getelementptr inbounds %struct.float4, ptr %4, i32 0, i32 0
  %25 = getelementptr inbounds %struct.float4, ptr %11, i32 0, i32 3
  %31 = getelementptr inbounds %struct.float4, ptr %4, i32 0, i32 0
  %36 = getelementptr inbounds %struct.float4, ptr %11, i32 0, i32 3
  %42 = getelementptr inbounds %struct.float4, ptr %4, i32 0, i32 0
  %45 = getelementptr inbounds %struct.float4, ptr %4, i32 0, i32 1
  %49 = getelementptr inbounds %struct.float4, ptr %11, i32 0, i32 2
  %55 = getelementptr inbounds %struct.float4, ptr %4, i32 0, i32 1
  %60 = getelementptr inbounds %struct.float4, ptr %11, i32 0, i32 2
  %66 = getelementptr inbounds %struct.float4, ptr %4, i32 0, i32 1
  %69 = getelementptr inbounds %struct.float4, ptr %4, i32 0, i32 2
  %73 = getelementptr inbounds %struct.float4, ptr %11, i32 0, i32 1
  %79 = getelementptr inbounds %struct.float4, ptr %4, i32 0, i32 2
  %84 = getelementptr inbounds %struct.float4, ptr %11, i32 0, i32 1
  %90 = getelementptr inbounds %struct.float4, ptr %4, i32 0, i32 2
  %93 = getelementptr inbounds %struct.float4, ptr %4, i32 0, i32 3
  %97 = getelementptr inbounds %struct.float4, ptr %11, i32 0, i32 0
  %103 = getelementptr inbounds %struct.float4, ptr %4, i32 0, i32 3
  %108 = getelementptr inbounds %struct.float4, ptr %11, i32 0, i32 0
  %114 = getelementptr inbounds %struct.float4, ptr %4, i32 0, i32 3
  %5 = getelementptr inbounds %struct.HIP_vector_type, ptr %4, i32 0, i32 0
  %6 = getelementptr inbounds %struct.HIP_vector_base, ptr %5, i32 0, i32 0
  %7 = getelementptr inbounds %union.anon, ptr %6, i32 0, i32 0
  %8 = getelementptr inbounds %struct.HIP_vector_base, ptr %7, i32 0, i32 0
  %12 = getelementptr inbounds %struct.HIP_vector_type, ptr %11, i32 0, i32 0
  %13 = getelementptr inbounds %struct.HIP_vector_base, ptr %12, i32 0, i32 0
  %14 = getelementptr inbounds %union.anon, ptr %13, i32 0, i32 0
  %15 = getelementptr inbounds %struct.HIP_vector_base, ptr %14, i32 0, i32 0
  %21 = getelementptr inbounds %struct.float4, ptr %4, i32 0, i32 3
  %25 = getelementptr inbounds %struct.float4, ptr %11, i32 0, i32 0
  %31 = getelementptr inbounds %struct.float4, ptr %4, i32 0, i32 3
  %36 = getelementptr inbounds %struct.float4, ptr %11, i32 0, i32 0
  %42 = getelementptr inbounds %struct.float4, ptr %11, i32 0, i32 0
  %45 = getelementptr inbounds %struct.float4, ptr %4, i32 0, i32 2
  %49 = getelementptr inbounds %struct.float4, ptr %11, i32 0, i32 1
  %55 = getelementptr inbounds %struct.float4, ptr %4, i32 0, i32 2
  %60 = getelementptr inbounds %struct.float4, ptr %11, i32 0, i32 1
  %66 = getelementptr inbounds %struct.float4, ptr %11, i32 0, i32 1
  %69 = getelementptr inbounds %struct.float4, ptr %4, i32 0, i32 1
  %73 = getelementptr inbounds %struct.float4, ptr %11, i32 0, i32 2
  %79 = getelementptr inbounds %struct.float4, ptr %4, i32 0, i32 1
  %84 = getelementptr inbounds %struct.float4, ptr %11, i32 0, i32 2
  %90 = getelementptr inbounds %struct.float4, ptr %11, i32 0, i32 2
  %93 = getelementptr inbounds %struct.float4, ptr %4, i32 0, i32 0
  %97 = getelementptr inbounds %struct.float4, ptr %11, i32 0, i32 3
  %103 = getelementptr inbounds %struct.float4, ptr %4, i32 0, i32 0
  %108 = getelementptr inbounds %struct.float4, ptr %11, i32 0, i32 3
  %114 = getelementptr inbounds %struct.float4, ptr %11, i32 0, i32 3tex
txt
Function: _Z14mergeSortFirstP6float4i

 First   %3 = alloca ptr, align 8, addrspace(5) 
  %3 = alloca ptr, align 8, addrspace(5) I 
  %4 = addrspacecast ptr addrspace(5) %3 to ptr I 
  %5 = alloca i32, align 4, addrspace(5) I 
  %6 = addrspacecast ptr addrspace(5) %5 to ptr I 
  %7 = alloca i32, align 4, addrspace(5) I 
  %8 = addrspacecast ptr addrspace(5) %7 to ptr I 
  %9 = alloca %struct.float4, align 16, addrspace(5) I 
  %10 = addrspacecast ptr addrspace(5) %9 to ptr I 
  %11 = alloca i64, align 4, addrspace(5) I 
  %12 = addrspacecast ptr addrspace(5) %11 to ptr I 
  %13 = alloca %struct.float4, align 16, addrspace(5) I 
  %14 = addrspacecast ptr addrspace(5) %13 to ptr I 
  %15 = alloca %struct.float4, align 16, addrspace(5) I 
  %16 = addrspacecast ptr addrspace(5) %15 to ptr I 
  %17 = addrspacecast ptr addrspace(1) %0 to ptr I 
  store ptr %17, ptr %4, align 8 I 
  store i32 %1, ptr %6, align 4 I 
  %18 = call noundef i32 @_ZN25__cuda_builtin_blockIdx_t17__fetch_builtin_xEv() #7 I 
heree
_ZN25__cuda_builtin_blockIdx_t17__fetch_builtin_xEv
  store i32 %18, ptr %8, align 4 I 
  %19 = load i32, ptr %8, align 4 I 
  %20 = call noundef i32 @_ZN25__cuda_builtin_blockDim_t17__fetch_builtin_xEv() #7 I 
heree
_ZN25__cuda_builtin_blockDim_t17__fetch_builtin_xEv
  %21 = mul i32 %19, %20 I 
  %22 = call noundef i32 @_ZN26__cuda_builtin_threadIdx_t17__fetch_builtin_xEv() #7 I 
heree
_ZN26__cuda_builtin_threadIdx_t17__fetch_builtin_xEv
  %23 = add i32 %21, %22 I 
  %24 = load i32, ptr %6, align 4 I 
  %25 = sdiv i32 %24, 4 I 
  %26 = icmp ult i32 %23, %25 I 
  br i1 %26, label %27, label %61 I 
  %28 = call i64 @llvm.nvvm.texsurf.handle.internal.p1(ptr addrspace(1) @tex) I 
heree
llvm.nvvm.texsurf.handle.internal.p1
 1 
@tex = addrspace(1) externally_initialized global %struct.texture undef
 foound 
  store i64 %31, ptr %14, align 4 I 
  %32 = load i32, ptr %10, align 4 I 
  %33 = call noundef i32 @_ZN25__cuda_builtin_blockDim_t17__fetch_builtin_xEv() #7 I 
heree
_ZN25__cuda_builtin_blockDim_t17__fetch_builtin_xEv
  %34 = mul i32 %32, %33 I 
  %35 = call noundef i32 @_ZN26__cuda_builtin_threadIdx_t17__fetch_builtin_xEv() #7 I 
heree
_ZN26__cuda_builtin_threadIdx_t17__fetch_builtin_xEv
  %36 = add i32 %34, %35 I 
  %37 = load i64, ptr %14, align 4 I 
  %38 = call %struct.float4 @_ZL10tex1DfetchI6float4EN17__nv_tex_rmet_retIT_E4typeE7textureIS2_Li1EL19cudaTextureReadMode0EEi(i64 %37, i32 noundef %36) #7 I 
heree
_ZL10tex1DfetchI6float4EN17__nv_tex_rmet_retIT_E4typeE7textureIS2_Li1EL19cudaTextureReadMode0EEi
 fetch here 
  %38 = call %struct.float4 @_ZL10tex1DfetchI6float4EN17__nv_tex_rmet_retIT_E4typeE7textureIS2_Li1EL19cudaTextureReadMode0EEi(i64 %37, i32 noundef %36) #7
%struct.float4 = type { float, float, float, float }
  %37 = load %struct.textureReference, ptr %30, align 8 
0x18b83a0
  %45 = extractvalue %struct.HIP_vector_type %41, 0
  %45 = getelementptr inbounds %struct.float4, ptr %14, i32 0, i32 0 need remove 
  %46 = extractvalue %struct.HIP_vector_type %41, 0 need remove 
  store float %46, ptr %43, align 16 need remove 
  %47 = getelementptr inbounds %struct.float4, ptr %14, i32 0, i32 1 need remove 
  %48 = extractvalue %struct.HIP_vector_type %41, 1 need remove 
  store float %48, ptr %47, align 4 need remove 
  %49 = getelementptr inbounds %struct.float4, ptr %14, i32 0, i32 2 need remove 
  %50 = extractvalue %struct.HIP_vector_type %41, 2 need remove 
  store float %50, ptr %49, align 8 need remove 
  %51 = getelementptr inbounds %struct.float4, ptr %14, i32 0, i32 3 need remove 
  %52 = extractvalue %struct.HIP_vector_type %41, 3 need remove 
  store float %52, ptr %51, align 4 need remove 
; Function Attrs: convergent mustprogress noinline norecurse nounwind optnone
define amdgpu_kernel void @_Z14mergeSortFirstP6float4i(ptr addrspace(1) noundef %0, i32 noundef %1) #1 {
  %3 = alloca %struct.texture, align 8, addrspace(5)
  %4 = addrspacecast ptr addrspace(5) %3 to ptr
  %5 = alloca %struct.HIP_vector_type, align 16, addrspace(5)
  %6 = addrspacecast ptr addrspace(5) %5 to ptr
  %7 = alloca ptr, align 8, addrspace(5)
  %8 = addrspacecast ptr addrspace(5) %7 to ptr
  %9 = alloca i32, align 4, addrspace(5)
  %10 = addrspacecast ptr addrspace(5) %9 to ptr
  %11 = alloca i32, align 4, addrspace(5)
  %12 = addrspacecast ptr addrspace(5) %11 to ptr
  %13 = alloca %struct.float4, align 16, addrspace(5)
  %14 = addrspacecast ptr addrspace(5) %13 to ptr
  %15 = alloca i64, align 4, addrspace(5)
  %16 = addrspacecast ptr addrspace(5) %15 to ptr
  %17 = alloca %struct.float4, align 16, addrspace(5)
  %18 = addrspacecast ptr addrspace(5) %17 to ptr
  %19 = alloca %struct.float4, align 16, addrspace(5)
  %20 = addrspacecast ptr addrspace(5) %19 to ptr
  %21 = addrspacecast ptr addrspace(1) %0 to ptr
  store ptr %21, ptr %8, align 8
  store i32 %1, ptr %10, align 4
  %22 = call noundef i32 @_ZN25__cuda_builtin_blockIdx_t17__fetch_builtin_xEv() #7
  store i32 %22, ptr %12, align 4
  %23 = load i32, ptr %12, align 4
  %24 = call noundef i32 @_ZN25__cuda_builtin_blockDim_t17__fetch_builtin_xEv() #7
  %25 = mul i32 %23, %24
  %26 = call noundef i32 @_ZN26__cuda_builtin_threadIdx_t17__fetch_builtin_xEv() #7
  %27 = add i32 %25, %26
  %28 = load i32, ptr %10, align 4
  %29 = sdiv i32 %28, 4
  %30 = icmp ult i32 %27, %29
  br i1 %30, label %31, label %70

31:                                               ; preds = %2
  call void @llvm.memcpy.p0.p0.i64(ptr %4, ptr addrspacecast (ptr addrspace(1) @tex to ptr), i64 88, i1 false)
  %32 = getelementptr inbounds %struct.textureReference, ptr %4, i32 0, i32 0
  %33 = call i64 @llvm.nvvm.texsurf.handle.internal.p1(ptr addrspace(1) @tex)
  store i64 %33, ptr %16, align 4
  %34 = load i32, ptr %12, align 4
  %35 = call noundef i32 @_ZN25__cuda_builtin_blockDim_t17__fetch_builtin_xEv() #7
  %36 = mul i32 %34, %35
  %37 = call noundef i32 @_ZN26__cuda_builtin_threadIdx_t17__fetch_builtin_xEv() #7
  %38 = add i32 %36, %37
  %39 = load %struct.textureReference, ptr %32, align 8
  %40 = load i64, ptr %16, align 4
  %41 = call %struct.HIP_vector_type @_ZL10tex1DfetchI15HIP_vector_typeIfLj4EEL18hipTextureReadMode0EEN13__hip_tex_retIT_XT0_EbE4typeE7textureIS4_Li1EXT0_EEi(%struct.textureReference %39, i32 %38)
  %42 = call %struct.float4 @_ZL10tex1DfetchI6float4EN17__nv_tex_rmet_retIT_E4typeE7textureIS2_Li1EL19cudaTextureReadMode0EEi(%struct.textureReference %39, i32 noundef %38) #7
  %43 = getelementptr inbounds %struct.HIP_vector_type, ptr %6, i32 0, i32 0
  %44 = extractvalue %struct.HIP_vector_type %41, 0
  store %struct.HIP_vector_base %44, ptr %43, align 16
  %45 = getelementptr inbounds %struct.float4, ptr %14, i32 0, i32 0
  %46 = extractvalue %struct.HIP_vector_type %41, 0
  store float %46, ptr %43, align 16
  %47 = getelementptr inbounds %struct.float4, ptr %14, i32 0, i32 1
  %48 = extractvalue %struct.HIP_vector_type %41, 1
  store float %48, ptr %47, align 4
  %49 = getelementptr inbounds %struct.float4, ptr %14, i32 0, i32 2
  %50 = extractvalue %struct.HIP_vector_type %41, 2
  store float %50, ptr %49, align 8
  %51 = getelementptr inbounds %struct.float4, ptr %14, i32 0, i32 3
  %52 = extractvalue %struct.HIP_vector_type %41, 3
  store float %52, ptr %51, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %20, ptr align 16 %14, i64 16, i1 false)
  %53 = call %struct.float4 @_Z8sortElem6float4(ptr noundef byval(%struct.float4) align 16 %20) #7
  %54 = getelementptr inbounds %struct.float4, ptr %18, i32 0, i32 0
  %55 = extractvalue %struct.float4 %53, 0
  store float %55, ptr %54, align 16
  %56 = getelementptr inbounds %struct.float4, ptr %18, i32 0, i32 1
  %57 = extractvalue %struct.float4 %53, 1
  store float %57, ptr %56, align 4
  %58 = getelementptr inbounds %struct.float4, ptr %18, i32 0, i32 2
  %59 = extractvalue %struct.float4 %53, 2
  store float %59, ptr %58, align 8
  %60 = getelementptr inbounds %struct.float4, ptr %18, i32 0, i32 3
  %61 = extractvalue %struct.float4 %53, 3
  store float %61, ptr %60, align 4
  %62 = load ptr, ptr %8, align 8
  %63 = load i32, ptr %12, align 4
  %64 = call noundef i32 @_ZN25__cuda_builtin_blockDim_t17__fetch_builtin_xEv() #7
  %65 = mul i32 %63, %64
  %66 = call noundef i32 @_ZN26__cuda_builtin_threadIdx_t17__fetch_builtin_xEv() #7
  %67 = add i32 %65, %66
  %68 = zext i32 %67 to i64
  %69 = getelementptr inbounds %struct.float4, ptr %62, i64 %68
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %69, ptr align 16 %18, i64 16, i1 false)
  br label %70

70:                                               ; preds = %31, %2
  ret void
}

 finish two 
  %43 = getelementptr inbounds %struct.HIP_vector_type, ptr %6, i32 0, i32 0 I 
 getelementptr here 
 abc 
  %43 = getelementptr inbounds %struct.HIP_vector_type, ptr %6, i32 0, i32 0
 abc 
 out ptr 
  %44 = extractvalue %struct.HIP_vector_type %41, 0 I 
  store %struct.HIP_vector_base %44, ptr %43, align 16 I 
  %45 = getelementptr inbounds %struct.float4, ptr %14, i32 0, i32 0 I 
 getelementptr here 
  %46 = extractvalue %struct.HIP_vector_type %41, 0 I 
  store float %46, ptr %43, align 16 I 
  %47 = getelementptr inbounds %struct.float4, ptr %14, i32 0, i32 1 I 
 getelementptr here 
  %48 = extractvalue %struct.HIP_vector_type %41, 1 I 
  store float %48, ptr %47, align 4 I 
  %49 = getelementptr inbounds %struct.float4, ptr %14, i32 0, i32 2 I 
 getelementptr here 
  %50 = extractvalue %struct.HIP_vector_type %41, 2 I 
  store float %50, ptr %49, align 8 I 
  %51 = getelementptr inbounds %struct.float4, ptr %14, i32 0, i32 3 I 
 getelementptr here 
  %52 = extractvalue %struct.HIP_vector_type %41, 3 I 
  store float %52, ptr %51, align 4 I 
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %20, ptr align 16 %14, i64 16, i1 false) I 
heree
llvm.memcpy.p0.p0.i64
 999 
 there 12 
  %55 = call %struct.float4 @_Z8sortElem6float4(ptr noundef byval(%struct.float4) align 16 %22) #7 I 
heree

  %56 = getelementptr inbounds %struct.float4, ptr %20, i32 0, i32 0 I 
 getelementptr here 
 abc 
  %56 = getelementptr inbounds %struct.float4, ptr %20, i32 0, i32 0
 abc 
 888888 
  %57 = extractvalue %struct.float4 %55, 0
 out ptr 
  %57 = extractvalue %struct.float4 %55, 0 I 
  store float %57, ptr %56, align 16 I 
  %58 = getelementptr inbounds %struct.float4, ptr %20, i32 0, i32 1 I 
 getelementptr here 
 abc 
  %58 = getelementptr inbounds %struct.float4, ptr %20, i32 0, i32 1
 abc 
 888888 
  %59 = extractvalue %struct.float4 %55, 1
 out ptr 
  %59 = extractvalue %struct.float4 %55, 1 I 
  store float %59, ptr %58, align 4 I 
  %60 = getelementptr inbounds %struct.float4, ptr %20, i32 0, i32 2 I 
 getelementptr here 
 abc 
  %60 = getelementptr inbounds %struct.float4, ptr %20, i32 0, i32 2
 abc 
 888888 
  %61 = extractvalue %struct.float4 %55, 2
 out ptr 
  %61 = extractvalue %struct.float4 %55, 2 I 
  store float %61, ptr %60, align 8 I 
  %62 = getelementptr inbounds %struct.float4, ptr %20, i32 0, i32 3 I 
 getelementptr here 
 abc 
  %62 = getelementptr inbounds %struct.float4, ptr %20, i32 0, i32 3
 abc 
 888888 
  %63 = extractvalue %struct.float4 %55, 3
 out ptr 
  %63 = extractvalue %struct.float4 %55, 3 I 
  store float %63, ptr %62, align 4 I 
  %64 = load ptr, ptr %8, align 8 I 
  %65 = load i32, ptr %12, align 4 I 
  %66 = call noundef i32 @_ZN25__cuda_builtin_blockDim_t17__fetch_builtin_xEv() #7 I 
heree
_ZN25__cuda_builtin_blockDim_t17__fetch_builtin_xEv
  %67 = mul i32 %65, %66 I 
  %68 = call noundef i32 @_ZN26__cuda_builtin_threadIdx_t17__fetch_builtin_xEv() #7 I 
heree
_ZN26__cuda_builtin_threadIdx_t17__fetch_builtin_xEv
  %69 = add i32 %67, %68 I 
  %70 = zext i32 %69 to i64 I 
  %71 = getelementptr inbounds %struct.float4, ptr %64, i64 %70 I 
 getelementptr here 
 abc 
  %71 = getelementptr inbounds %struct.float4, ptr %64, i64 %70
 abc 
 888888 
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %71, ptr align 16 %20, i64 16, i1 false)
  %20 = addrspacecast ptr addrspace(5) %19 to ptr
; Function Attrs: convergent mustprogress noinline norecurse nounwind optnone
define amdgpu_kernel void @_Z14mergeSortFirstP6float4i(ptr addrspace(1) noundef %0, i32 noundef %1) #1 {
  %3 = alloca %struct.texture, align 8, addrspace(5)
  %4 = addrspacecast ptr addrspace(5) %3 to ptr
  %5 = alloca %struct.HIP_vector_type, align 16, addrspace(5)
  %6 = addrspacecast ptr addrspace(5) %5 to ptr
  %7 = alloca ptr, align 8, addrspace(5)
  %8 = addrspacecast ptr addrspace(5) %7 to ptr
  %9 = alloca i32, align 4, addrspace(5)
  %10 = addrspacecast ptr addrspace(5) %9 to ptr
  %11 = alloca i32, align 4, addrspace(5)
  %12 = addrspacecast ptr addrspace(5) %11 to ptr
  %13 = alloca %struct.float4, align 16, addrspace(5)
  %14 = alloca %struct.HIP_vector_type, align 16, addrspace(5)
  %15 = addrspacecast ptr addrspace(5) %14 to ptr
  %16 = addrspacecast ptr addrspace(5) %13 to ptr
  %17 = alloca i64, align 4, addrspace(5)
  %18 = addrspacecast ptr addrspace(5) %17 to ptr
  %19 = alloca %struct.float4, align 16, addrspace(5)
  %20 = addrspacecast ptr addrspace(5) %19 to ptr
  %21 = alloca %struct.float4, align 16, addrspace(5)
  %22 = addrspacecast ptr addrspace(5) %21 to ptr
  %23 = addrspacecast ptr addrspace(1) %0 to ptr
  store ptr %23, ptr %8, align 8
  store i32 %1, ptr %10, align 4
  %24 = call noundef i32 @_ZN25__cuda_builtin_blockIdx_t17__fetch_builtin_xEv() #7
  store i32 %24, ptr %12, align 4
  %25 = load i32, ptr %12, align 4
  %26 = call noundef i32 @_ZN25__cuda_builtin_blockDim_t17__fetch_builtin_xEv() #7
  %27 = mul i32 %25, %26
  %28 = call noundef i32 @_ZN26__cuda_builtin_threadIdx_t17__fetch_builtin_xEv() #7
  %29 = add i32 %27, %28
  %30 = load i32, ptr %10, align 4
  %31 = sdiv i32 %30, 4
  %32 = icmp ult i32 %29, %31
  br i1 %32, label %33, label %73

33:                                               ; preds = %2
  call void @llvm.memcpy.p0.p0.i64(ptr %4, ptr addrspacecast (ptr addrspace(1) @tex to ptr), i64 88, i1 false)
  %34 = getelementptr inbounds %struct.textureReference, ptr %4, i32 0, i32 0
  %35 = call i64 @llvm.nvvm.texsurf.handle.internal.p1(ptr addrspace(1) @tex)
  store i64 %35, ptr %18, align 4
  %36 = load i32, ptr %12, align 4
  %37 = call noundef i32 @_ZN25__cuda_builtin_blockDim_t17__fetch_builtin_xEv() #7
  %38 = mul i32 %36, %37
  %39 = call noundef i32 @_ZN26__cuda_builtin_threadIdx_t17__fetch_builtin_xEv() #7
  %40 = add i32 %38, %39
  %41 = load %struct.textureReference, ptr %34, align 8
  %42 = load i64, ptr %18, align 4
  %43 = call %struct.HIP_vector_type @_ZL10tex1DfetchI15HIP_vector_typeIfLj4EEL18hipTextureReadMode0EEN13__hip_tex_retIT_XT0_EbE4typeE7textureIS4_Li1EXT0_EEi(%struct.textureReference %41, i32 %40)
  %44 = call %struct.float4 @_ZL10tex1DfetchI6float4EN17__nv_tex_rmet_retIT_E4typeE7textureIS2_Li1EL19cudaTextureReadMode0EEi(%struct.textureReference %41, i32 noundef %40) #7
  %45 = getelementptr inbounds %struct.HIP_vector_type, ptr %6, i32 0, i32 0
  %46 = extractvalue %struct.HIP_vector_type %43, 0
  store %struct.HIP_vector_base %46, ptr %45, align 16
  %47 = getelementptr inbounds %struct.float4, ptr %15, i32 0, i32 0
  %48 = extractvalue %struct.HIP_vector_type %43, 0
  store float %48, ptr %45, align 16
  %49 = getelementptr inbounds %struct.float4, ptr %15, i32 0, i32 1
  %50 = extractvalue %struct.HIP_vector_type %43, 1
  store float %50, ptr %49, align 4
  %51 = getelementptr inbounds %struct.float4, ptr %15, i32 0, i32 2
  %52 = extractvalue %struct.HIP_vector_type %43, 2
  store float %52, ptr %51, align 8
  %53 = getelementptr inbounds %struct.float4, ptr %15, i32 0, i32 3
  %54 = extractvalue %struct.HIP_vector_type %43, 3
  store float %54, ptr %53, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %22, ptr align 16 %15, i64 16, i1 false)
  %55 = call %struct.float4 @_Z8sortElem6float4(ptr noundef byval(%struct.float4) align 16 %22) #7
  %56 = getelementptr inbounds %struct.float4, ptr %20, i32 0, i32 0
  %57 = extractvalue %struct.float4 %55, 0
  store float %57, ptr %56, align 16
  %58 = getelementptr inbounds %struct.float4, ptr %20, i32 0, i32 1
  %59 = extractvalue %struct.float4 %55, 1
  store float %59, ptr %58, align 4
  %60 = getelementptr inbounds %struct.float4, ptr %20, i32 0, i32 2
  %61 = extractvalue %struct.float4 %55, 2
  store float %61, ptr %60, align 8
  %62 = getelementptr inbounds %struct.float4, ptr %20, i32 0, i32 3
  %63 = extractvalue %struct.float4 %55, 3
  store float %63, ptr %62, align 4
  %64 = load ptr, ptr %8, align 8
  %65 = load i32, ptr %12, align 4
  %66 = call noundef i32 @_ZN25__cuda_builtin_blockDim_t17__fetch_builtin_xEv() #7
  %67 = mul i32 %65, %66
  %68 = call noundef i32 @_ZN26__cuda_builtin_threadIdx_t17__fetch_builtin_xEv() #7
  %69 = add i32 %67, %68
  %70 = zext i32 %69 to i64
  %71 = getelementptr inbounds %struct.HIP_vector_type, ptr %64, i64 %70
  %72 = getelementptr inbounds %struct.float4, ptr %64, i64 %70
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %71, ptr align 16 %20, i64 16, i1 false)
  br label %73

73:                                               ; preds = %33, %2
  ret void
}

 out ptr 
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %71, ptr align 16 %20, i64 16, i1 false) I 
heree
llvm.memcpy.p0.p0.i64
 999 
 there 12 
  br label %75 I 
  ret voidFunction: _Z13mergeSortPassP6float4ii
 I 
 First   %4 = alloca ptr, align 8, addrspace(5) 
  %4 = alloca ptr, align 8, addrspace(5) I 
  %5 = addrspacecast ptr addrspace(5) %4 to ptr I 
  %6 = alloca i32, align 4, addrspace(5) I 
  %7 = addrspacecast ptr addrspace(5) %6 to ptr I 
  %8 = alloca i32, align 4, addrspace(5) I 
  %9 = addrspacecast ptr addrspace(5) %8 to ptr I 
  %10 = alloca i32, align 4, addrspace(5) I 
  %11 = addrspacecast ptr addrspace(5) %10 to ptr I 
  %12 = alloca i32, align 4, addrspace(5) I 
  %13 = addrspacecast ptr addrspace(5) %12 to ptr I 
  %14 = alloca i32, align 4, addrspace(5) I 
  %15 = addrspacecast ptr addrspace(5) %14 to ptr I 
  %16 = alloca i32, align 4, addrspace(5) I 
  %17 = addrspacecast ptr addrspace(5) %16 to ptr I 
  %18 = alloca i32, align 4, addrspace(5) I 
  %19 = addrspacecast ptr addrspace(5) %18 to ptr I 
  %20 = alloca ptr, align 8, addrspace(5) I 
  %21 = addrspacecast ptr addrspace(5) %20 to ptr I 
  %22 = alloca i32, align 4, addrspace(5) I 
  %23 = addrspacecast ptr addrspace(5) %22 to ptr I 
  %24 = alloca %struct.float4, align 16, addrspace(5) I 
  %25 = addrspacecast ptr addrspace(5) %24 to ptr I 
  %26 = alloca i64, align 4, addrspace(5) I 
  %27 = addrspacecast ptr addrspace(5) %26 to ptr I 
  %28 = alloca i32, align 4, addrspace(5) I 
  %29 = addrspacecast ptr addrspace(5) %28 to ptr I 
  %30 = alloca i32, align 4, addrspace(5) I 
  %31 = addrspacecast ptr addrspace(5) %30 to ptr I 
  %32 = alloca i32, align 4, addrspace(5) I 
  %33 = addrspacecast ptr addrspace(5) %32 to ptr I 
  %34 = alloca %struct.float4, align 16, addrspace(5) I 
  %35 = addrspacecast ptr addrspace(5) %34 to ptr I 
  %36 = alloca %struct.float4, align 16, addrspace(5) I 
  %37 = addrspacecast ptr addrspace(5) %36 to ptr I 
  %38 = alloca %struct.float4, align 16, addrspace(5) I 
  %39 = addrspacecast ptr addrspace(5) %38 to ptr I 
  %40 = alloca i64, align 4, addrspace(5) I 
  %41 = addrspacecast ptr addrspace(5) %40 to ptr I 
  %42 = alloca %struct.float4, align 16, addrspace(5) I 
  %43 = addrspacecast ptr addrspace(5) %42 to ptr I 
  %44 = alloca i64, align 4, addrspace(5) I 
  %45 = addrspacecast ptr addrspace(5) %44 to ptr I 
  %46 = alloca %struct.float4, align 16, addrspace(5) I 
  %47 = addrspacecast ptr addrspace(5) %46 to ptr I 
  %48 = alloca i64, align 4, addrspace(5) I 
  %49 = addrspacecast ptr addrspace(5) %48 to ptr I 
  %50 = alloca %struct.float4, align 16, addrspace(5) I 
  %51 = addrspacecast ptr addrspace(5) %50 to ptr I 
  %52 = alloca i64, align 4, addrspace(5) I 
  %53 = addrspacecast ptr addrspace(5) %52 to ptr I 
  %54 = alloca %struct.float4, align 16, addrspace(5) I 
  %55 = addrspacecast ptr addrspace(5) %54 to ptr I 
  %56 = alloca %struct.float4, align 16, addrspace(5) I 
  %57 = addrspacecast ptr addrspace(5) %56 to ptr I 
  %58 = alloca %struct.float4, align 16, addrspace(5) I 
  %59 = addrspacecast ptr addrspace(5) %58 to ptr I 
  %60 = alloca %struct.float4, align 16, addrspace(5) I 
  %61 = addrspacecast ptr addrspace(5) %60 to ptr I 
  %62 = alloca %struct.float4, align 16, addrspace(5) I 
  %63 = addrspacecast ptr addrspace(5) %62 to ptr I 
  %64 = alloca %struct.float4, align 16, addrspace(5) I 
  %65 = addrspacecast ptr addrspace(5) %64 to ptr I 
  %66 = alloca %struct.float4, align 16, addrspace(5) I 
  %67 = addrspacecast ptr addrspace(5) %66 to ptr I 
  %68 = alloca %struct.float4, align 16, addrspace(5) I 
  %69 = addrspacecast ptr addrspace(5) %68 to ptr I 
  %70 = alloca %struct.float4, align 16, addrspace(5) I 
  %71 = addrspacecast ptr addrspace(5) %70 to ptr I 
  %72 = alloca %struct.float4, align 16, addrspace(5) I 
  %73 = addrspacecast ptr addrspace(5) %72 to ptr I 
  %74 = alloca i8, align 1, addrspace(5) I 
  %75 = addrspacecast ptr addrspace(5) %74 to ptr I 
  %76 = alloca i8, align 1, addrspace(5) I 
  %77 = addrspacecast ptr addrspace(5) %76 to ptr I 
  %78 = addrspacecast ptr addrspace(1) %0 to ptr I 
  store ptr %78, ptr %5, align 8 I 
  store i32 %1, ptr %7, align 4 I 
  store i32 %2, ptr %9, align 4 I 
  %79 = call noundef i32 @_ZN25__cuda_builtin_blockIdx_t17__fetch_builtin_xEv() #7 I 
heree
_ZN25__cuda_builtin_blockIdx_t17__fetch_builtin_xEv
  %80 = call noundef i32 @_ZN25__cuda_builtin_blockDim_t17__fetch_builtin_xEv() #7 I 
heree
_ZN25__cuda_builtin_blockDim_t17__fetch_builtin_xEv
  %81 = mul i32 %79, %80 I 
  %82 = call noundef i32 @_ZN26__cuda_builtin_threadIdx_t17__fetch_builtin_xEv() #7 I 
heree
_ZN26__cuda_builtin_threadIdx_t17__fetch_builtin_xEv
  %83 = add i32 %81, %82 I 
  store i32 %83, ptr %11, align 4 I 
  %84 = load i32, ptr %11, align 4 I 
  %85 = load i32, ptr %9, align 4 I 
  %86 = sdiv i32 %84, %85 I 
  store i32 %86, ptr %13, align 4 I 
  %87 = load i32, ptr %13, align 4 I 
  %88 = icmp sge i32 %87, 1024 I 
  br i1 %88, label %89, label %90 I 
  br label %325 I 
  %91 = load i32, ptr %11, align 4 I 
  %92 = load i32, ptr %13, align 4 I 
  %93 = load i32, ptr %9, align 4 I 
  %94 = mul nsw i32 %92, %93 I 
  %95 = sub nsw i32 %91, %94 I 
  store i32 %95, ptr %15, align 4 I 
  %96 = load i32, ptr %13, align 4 I 
  %97 = sext i32 %96 to i64 I 
  %98 = getelementptr inbounds [1025 x i32], ptr addrspacecast (ptr addrspace(4) @constStartAddr to ptr), i64 0, i64 %97 I 
 getelementptr here 
 abc 
  %98 = getelementptr inbounds [1025 x i32], ptr addrspacecast (ptr addrspace(4) @constStartAddr to ptr), i64 0, i64 %97
 abc 
 out ptr 
  %99 = load i32, ptr %98, align 4 I 
  %100 = load i32, ptr %15, align 4 I 
  %101 = load i32, ptr %7, align 4 I 
  %102 = mul nsw i32 %100, %101 I 
  %103 = add nsw i32 %99, %102 I 
  store i32 %103, ptr %17, align 4 I 
  %104 = load i32, ptr %17, align 4 I 
  %105 = load i32, ptr %7, align 4 I 
  %106 = sdiv i32 %105, 2 I 
  %107 = add nsw i32 %104, %106 I 
  store i32 %107, ptr %19, align 4 I 
  %108 = load ptr, ptr %5, align 8 I 
  %109 = load i32, ptr %17, align 4 I 
  %110 = sext i32 %109 to i64 I 
  %111 = getelementptr inbounds %struct.float4, ptr %108, i64 %110 I 
 getelementptr here 
 abc 
  %111 = getelementptr inbounds %struct.float4, ptr %108, i64 %110
 abc 
 888888 
  store ptr %111, ptr %21, align 8
 out ptr 
  store ptr %111, ptr %21, align 8 I 
  %112 = load i32, ptr %17, align 4 I 
  %113 = load i32, ptr %13, align 4 I 
  %114 = add nsw i32 %113, 1 I 
  %115 = sext i32 %114 to i64 I 
  %116 = getelementptr inbounds [1025 x i32], ptr addrspacecast (ptr addrspace(4) @constStartAddr to ptr), i64 0, i64 %115 I 
 getelementptr here 
 abc 
  %116 = getelementptr inbounds [1025 x i32], ptr addrspacecast (ptr addrspace(4) @constStartAddr to ptr), i64 0, i64 %115
 abc 
 out ptr 
  %117 = load i32, ptr %116, align 4 I 
  %118 = icmp sge i32 %112, %117 I 
  br i1 %118, label %119, label %120 I 
  br label %325 I 
  %121 = load i32, ptr %19, align 4 I 
  %122 = load i32, ptr %13, align 4 I 
  %123 = add nsw i32 %122, 1 I 
  %124 = sext i32 %123 to i64 I 
  %125 = getelementptr inbounds [1025 x i32], ptr addrspacecast (ptr addrspace(4) @constStartAddr to ptr), i64 0, i64 %124 I 
 getelementptr here 
 abc 
  %125 = getelementptr inbounds [1025 x i32], ptr addrspacecast (ptr addrspace(4) @constStartAddr to ptr), i64 0, i64 %124
 abc 
 out ptr 
  %126 = load i32, ptr %125, align 4 I 
  %127 = icmp sge i32 %121, %126 I 
  br i1 %127, label %128, label %162 I 
  store i32 0, ptr %23, align 4 I 
  br label %129 I 
  %130 = load i32, ptr %23, align 4 I 
  %131 = load i32, ptr %13, align 4 I 
  %132 = add nsw i32 %131, 1 I 
  %133 = sext i32 %132 to i64 I 
  %134 = getelementptr inbounds [1025 x i32], ptr addrspacecast (ptr addrspace(4) @constStartAddr to ptr), i64 0, i64 %133 I 
 getelementptr here 
 abc 
  %134 = getelementptr inbounds [1025 x i32], ptr addrspacecast (ptr addrspace(4) @constStartAddr to ptr), i64 0, i64 %133
 abc 
 out ptr 
  %135 = load i32, ptr %134, align 4 I 
  %136 = load i32, ptr %17, align 4 I 
  %137 = sub nsw i32 %135, %136 I 
  %138 = icmp slt i32 %130, %137 I 
  br i1 %138, label %139, label %161 I 
  %140 = call i64 @llvm.nvvm.texsurf.handle.internal.p1(ptr addrspace(1) @tex) I 
heree
llvm.nvvm.texsurf.handle.internal.p1
 1 
@tex = addrspace(1) externally_initialized global %struct.texture undef
 foound 
  store i64 %143, ptr %29, align 4 I 
  %144 = load i32, ptr %19, align 4 I 
  %145 = load i32, ptr %25, align 4 I 
  %146 = add nsw i32 %144, %145 I 
  %147 = load i64, ptr %29, align 4 I 
  %148 = call %struct.float4 @_ZL10tex1DfetchI6float4EN17__nv_tex_rmet_retIT_E4typeE7textureIS2_Li1EL19cudaTextureReadMode0EEi(i64 %147, i32 noundef %146) #7 I 
heree
_ZL10tex1DfetchI6float4EN17__nv_tex_rmet_retIT_E4typeE7textureIS2_Li1EL19cudaTextureReadMode0EEi
 fetch here 
  %148 = call %struct.float4 @_ZL10tex1DfetchI6float4EN17__nv_tex_rmet_retIT_E4typeE7textureIS2_Li1EL19cudaTextureReadMode0EEi(i64 %147, i32 noundef %146) #7
%struct.float4 = type { float, float, float, float }
  %147 = load %struct.textureReference, ptr %142, align 8 
0x1902d20
  %155 = extractvalue %struct.HIP_vector_type %151, 0
  %155 = getelementptr inbounds %struct.float4, ptr %29, i32 0, i32 0 need remove 
  %156 = extractvalue %struct.HIP_vector_type %151, 0 need remove 
  store float %156, ptr %153, align 16 need remove 
  %157 = getelementptr inbounds %struct.float4, ptr %29, i32 0, i32 1 need remove 
  %158 = extractvalue %struct.HIP_vector_type %151, 1 need remove 
  store float %158, ptr %157, align 4 need remove 
  %159 = getelementptr inbounds %struct.float4, ptr %29, i32 0, i32 2 need remove 
  %160 = extractvalue %struct.HIP_vector_type %151, 2 need remove 
  store float %160, ptr %159, align 8 need remove 
  %161 = getelementptr inbounds %struct.float4, ptr %29, i32 0, i32 3 need remove 
  %162 = extractvalue %struct.HIP_vector_type %151, 3 need remove 
  store float %162, ptr %161, align 4 need remove 
; Function Attrs: convergent mustprogress noinline norecurse nounwind optnone
define amdgpu_kernel void @_Z13mergeSortPassP6float4ii(ptr addrspace(1) noundef %0, i32 noundef %1, i32 noundef %2) #1 {
  %4 = alloca %struct.texture, align 8, addrspace(5)
  %5 = addrspacecast ptr addrspace(5) %4 to ptr
  %6 = alloca %struct.HIP_vector_type, align 16, addrspace(5)
  %7 = addrspacecast ptr addrspace(5) %6 to ptr
  %8 = alloca ptr, align 8, addrspace(5)
  %9 = addrspacecast ptr addrspace(5) %8 to ptr
  %10 = alloca i32, align 4, addrspace(5)
  %11 = addrspacecast ptr addrspace(5) %10 to ptr
  %12 = alloca i32, align 4, addrspace(5)
  %13 = addrspacecast ptr addrspace(5) %12 to ptr
  %14 = alloca i32, align 4, addrspace(5)
  %15 = addrspacecast ptr addrspace(5) %14 to ptr
  %16 = alloca i32, align 4, addrspace(5)
  %17 = addrspacecast ptr addrspace(5) %16 to ptr
  %18 = alloca i32, align 4, addrspace(5)
  %19 = addrspacecast ptr addrspace(5) %18 to ptr
  %20 = alloca i32, align 4, addrspace(5)
  %21 = addrspacecast ptr addrspace(5) %20 to ptr
  %22 = alloca i32, align 4, addrspace(5)
  %23 = addrspacecast ptr addrspace(5) %22 to ptr
  %24 = alloca ptr, align 8, addrspace(5)
  %25 = addrspacecast ptr addrspace(5) %24 to ptr
  %26 = alloca i32, align 4, addrspace(5)
  %27 = addrspacecast ptr addrspace(5) %26 to ptr
  %28 = alloca %struct.float4, align 16, addrspace(5)
  %29 = addrspacecast ptr addrspace(5) %28 to ptr
  %30 = alloca i64, align 4, addrspace(5)
  %31 = addrspacecast ptr addrspace(5) %30 to ptr
  %32 = alloca i32, align 4, addrspace(5)
  %33 = addrspacecast ptr addrspace(5) %32 to ptr
  %34 = alloca i32, align 4, addrspace(5)
  %35 = addrspacecast ptr addrspace(5) %34 to ptr
  %36 = alloca i32, align 4, addrspace(5)
  %37 = addrspacecast ptr addrspace(5) %36 to ptr
  %38 = alloca %struct.float4, align 16, addrspace(5)
  %39 = addrspacecast ptr addrspace(5) %38 to ptr
  %40 = alloca %struct.float4, align 16, addrspace(5)
  %41 = addrspacecast ptr addrspace(5) %40 to ptr
  %42 = alloca %struct.float4, align 16, addrspace(5)
  %43 = addrspacecast ptr addrspace(5) %42 to ptr
  %44 = alloca i64, align 4, addrspace(5)
  %45 = addrspacecast ptr addrspace(5) %44 to ptr
  %46 = alloca %struct.float4, align 16, addrspace(5)
  %47 = addrspacecast ptr addrspace(5) %46 to ptr
  %48 = alloca i64, align 4, addrspace(5)
  %49 = addrspacecast ptr addrspace(5) %48 to ptr
  %50 = alloca %struct.float4, align 16, addrspace(5)
  %51 = addrspacecast ptr addrspace(5) %50 to ptr
  %52 = alloca i64, align 4, addrspace(5)
  %53 = addrspacecast ptr addrspace(5) %52 to ptr
  %54 = alloca %struct.float4, align 16, addrspace(5)
  %55 = addrspacecast ptr addrspace(5) %54 to ptr
  %56 = alloca i64, align 4, addrspace(5)
  %57 = addrspacecast ptr addrspace(5) %56 to ptr
  %58 = alloca %struct.float4, align 16, addrspace(5)
  %59 = addrspacecast ptr addrspace(5) %58 to ptr
  %60 = alloca %struct.float4, align 16, addrspace(5)
  %61 = addrspacecast ptr addrspace(5) %60 to ptr
  %62 = alloca %struct.float4, align 16, addrspace(5)
  %63 = addrspacecast ptr addrspace(5) %62 to ptr
  %64 = alloca %struct.float4, align 16, addrspace(5)
  %65 = addrspacecast ptr addrspace(5) %64 to ptr
  %66 = alloca %struct.float4, align 16, addrspace(5)
  %67 = addrspacecast ptr addrspace(5) %66 to ptr
  %68 = alloca %struct.float4, align 16, addrspace(5)
  %69 = addrspacecast ptr addrspace(5) %68 to ptr
  %70 = alloca %struct.float4, align 16, addrspace(5)
  %71 = addrspacecast ptr addrspace(5) %70 to ptr
  %72 = alloca %struct.float4, align 16, addrspace(5)
  %73 = addrspacecast ptr addrspace(5) %72 to ptr
  %74 = alloca %struct.float4, align 16, addrspace(5)
  %75 = addrspacecast ptr addrspace(5) %74 to ptr
  %76 = alloca %struct.float4, align 16, addrspace(5)
  %77 = addrspacecast ptr addrspace(5) %76 to ptr
  %78 = alloca i8, align 1, addrspace(5)
  %79 = addrspacecast ptr addrspace(5) %78 to ptr
  %80 = alloca i8, align 1, addrspace(5)
  %81 = addrspacecast ptr addrspace(5) %80 to ptr
  %82 = addrspacecast ptr addrspace(1) %0 to ptr
  store ptr %82, ptr %9, align 8
  store i32 %1, ptr %11, align 4
  store i32 %2, ptr %13, align 4
  %83 = call noundef i32 @_ZN25__cuda_builtin_blockIdx_t17__fetch_builtin_xEv() #7
  %84 = call noundef i32 @_ZN25__cuda_builtin_blockDim_t17__fetch_builtin_xEv() #7
  %85 = mul i32 %83, %84
  %86 = call noundef i32 @_ZN26__cuda_builtin_threadIdx_t17__fetch_builtin_xEv() #7
  %87 = add i32 %85, %86
  store i32 %87, ptr %15, align 4
  %88 = load i32, ptr %15, align 4
  %89 = load i32, ptr %13, align 4
  %90 = sdiv i32 %88, %89
  store i32 %90, ptr %17, align 4
  %91 = load i32, ptr %17, align 4
  %92 = icmp sge i32 %91, 1024
  br i1 %92, label %93, label %94

93:                                               ; preds = %3
  br label %334

94:                                               ; preds = %3
  %95 = load i32, ptr %15, align 4
  %96 = load i32, ptr %17, align 4
  %97 = load i32, ptr %13, align 4
  %98 = mul nsw i32 %96, %97
  %99 = sub nsw i32 %95, %98
  store i32 %99, ptr %19, align 4
  %100 = load i32, ptr %17, align 4
  %101 = sext i32 %100 to i64
  %102 = getelementptr inbounds [1025 x i32], ptr addrspacecast (ptr addrspace(4) @constStartAddr to ptr), i64 0, i64 %101
  %103 = load i32, ptr %102, align 4
  %104 = load i32, ptr %19, align 4
  %105 = load i32, ptr %11, align 4
  %106 = mul nsw i32 %104, %105
  %107 = add nsw i32 %103, %106
  store i32 %107, ptr %21, align 4
  %108 = load i32, ptr %21, align 4
  %109 = load i32, ptr %11, align 4
  %110 = sdiv i32 %109, 2
  %111 = add nsw i32 %108, %110
  store i32 %111, ptr %23, align 4
  %112 = load ptr, ptr %9, align 8
  %113 = load i32, ptr %21, align 4
  %114 = sext i32 %113 to i64
  %115 = getelementptr inbounds %struct.float4, ptr %112, i64 %114
  store ptr %115, ptr %25, align 8
  %116 = load i32, ptr %21, align 4
  %117 = load i32, ptr %17, align 4
  %118 = add nsw i32 %117, 1
  %119 = sext i32 %118 to i64
  %120 = getelementptr inbounds [1025 x i32], ptr addrspacecast (ptr addrspace(4) @constStartAddr to ptr), i64 0, i64 %119
  %121 = load i32, ptr %120, align 4
  %122 = icmp sge i32 %116, %121
  br i1 %122, label %123, label %124

123:                                              ; preds = %94
  br label %334

124:                                              ; preds = %94
  %125 = load i32, ptr %23, align 4
  %126 = load i32, ptr %17, align 4
  %127 = add nsw i32 %126, 1
  %128 = sext i32 %127 to i64
  %129 = getelementptr inbounds [1025 x i32], ptr addrspacecast (ptr addrspace(4) @constStartAddr to ptr), i64 0, i64 %128
  %130 = load i32, ptr %129, align 4
  %131 = icmp sge i32 %125, %130
  br i1 %131, label %132, label %171

132:                                              ; preds = %124
  store i32 0, ptr %27, align 4
  br label %133

133:                                              ; preds = %167, %132
  %134 = load i32, ptr %27, align 4
  %135 = load i32, ptr %17, align 4
  %136 = add nsw i32 %135, 1
  %137 = sext i32 %136 to i64
  %138 = getelementptr inbounds [1025 x i32], ptr addrspacecast (ptr addrspace(4) @constStartAddr to ptr), i64 0, i64 %137
  %139 = load i32, ptr %138, align 4
  %140 = load i32, ptr %21, align 4
  %141 = sub nsw i32 %139, %140
  %142 = icmp slt i32 %134, %141
  br i1 %142, label %143, label %170

143:                                              ; preds = %133
  call void @llvm.memcpy.p0.p0.i64(ptr %5, ptr addrspacecast (ptr addrspace(1) @tex to ptr), i64 88, i1 false)
  %144 = getelementptr inbounds %struct.textureReference, ptr %5, i32 0, i32 0
  %145 = call i64 @llvm.nvvm.texsurf.handle.internal.p1(ptr addrspace(1) @tex)
  store i64 %145, ptr %31, align 4
  %146 = load i32, ptr %21, align 4
  %147 = load i32, ptr %27, align 4
  %148 = add nsw i32 %146, %147
  %149 = load %struct.textureReference, ptr %144, align 8
  %150 = load i64, ptr %31, align 4
  %151 = call %struct.HIP_vector_type @_ZL10tex1DfetchI15HIP_vector_typeIfLj4EEL18hipTextureReadMode0EEN13__hip_tex_retIT_XT0_EbE4typeE7textureIS4_Li1EXT0_EEi(%struct.textureReference %149, i32 %148)
  %152 = call %struct.float4 @_ZL10tex1DfetchI6float4EN17__nv_tex_rmet_retIT_E4typeE7textureIS2_Li1EL19cudaTextureReadMode0EEi(%struct.textureReference %149, i32 noundef %148) #7
  %153 = getelementptr inbounds %struct.HIP_vector_type, ptr %7, i32 0, i32 0
  %154 = extractvalue %struct.HIP_vector_type %151, 0
  store %struct.HIP_vector_base %154, ptr %153, align 16
  %155 = getelementptr inbounds %struct.float4, ptr %29, i32 0, i32 0
  %156 = extractvalue %struct.HIP_vector_type %151, 0
  store float %156, ptr %153, align 16
  %157 = getelementptr inbounds %struct.float4, ptr %29, i32 0, i32 1
  %158 = extractvalue %struct.HIP_vector_type %151, 1
  store float %158, ptr %157, align 4
  %159 = getelementptr inbounds %struct.float4, ptr %29, i32 0, i32 2
  %160 = extractvalue %struct.HIP_vector_type %151, 2
  store float %160, ptr %159, align 8
  %161 = getelementptr inbounds %struct.float4, ptr %29, i32 0, i32 3
  %162 = extractvalue %struct.HIP_vector_type %151, 3
  store float %162, ptr %161, align 4
  %163 = load ptr, ptr %25, align 8
  %164 = load i32, ptr %27, align 4
  %165 = sext i32 %164 to i64
  %166 = getelementptr inbounds %struct.float4, ptr %163, i64 %165
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %166, ptr align 16 %29, i64 16, i1 false)
  br label %167

167:                                              ; preds = %143
  %168 = load i32, ptr %27, align 4
  %169 = add nsw i32 %168, 1
  store i32 %169, ptr %27, align 4
  br label %133, !llvm.loop !12

170:                                              ; preds = %133
  br label %334

171:                                              ; preds = %124
  store i32 0, ptr %33, align 4
  store i32 0, ptr %35, align 4
  store i32 0, ptr %37, align 4
  %172 = call i64 @llvm.nvvm.texsurf.handle.internal.p1(ptr addrspace(1) @tex)
  store i64 %172, ptr %45, align 4
  %173 = load i32, ptr %21, align 4
  %174 = load i32, ptr %33, align 4
  %175 = add nsw i32 %173, %174
  %176 = load i64, ptr %45, align 4
  %177 = call %struct.float4 @_ZL10tex1DfetchI6float4EN17__nv_tex_rmet_retIT_E4typeE7textureIS2_Li1EL19cudaTextureReadMode0EEi(i64 %176, i32 noundef %175) #7
  %178 = getelementptr inbounds %struct.float4, ptr %43, i32 0, i32 0
  %179 = extractvalue %struct.float4 %177, 0
  store float %179, ptr %178, align 16
  %180 = getelementptr inbounds %struct.float4, ptr %43, i32 0, i32 1
  %181 = extractvalue %struct.float4 %177, 1
  store float %181, ptr %180, align 4
  %182 = getelementptr inbounds %struct.float4, ptr %43, i32 0, i32 2
  %183 = extractvalue %struct.float4 %177, 2
  store float %183, ptr %182, align 8
  %184 = getelementptr inbounds %struct.float4, ptr %43, i32 0, i32 3
  %185 = extractvalue %struct.float4 %177, 3
  store float %185, ptr %184, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %39, ptr align 16 %43, i64 16, i1 false)
  %186 = call i64 @llvm.nvvm.texsurf.handle.internal.p1(ptr addrspace(1) @tex)
  store i64 %186, ptr %49, align 4
  %187 = load i32, ptr %23, align 4
  %188 = load i32, ptr %35, align 4
  %189 = add nsw i32 %187, %188
  %190 = load i64, ptr %49, align 4
  %191 = call %struct.float4 @_ZL10tex1DfetchI6float4EN17__nv_tex_rmet_retIT_E4typeE7textureIS2_Li1EL19cudaTextureReadMode0EEi(i64 %190, i32 noundef %189) #7
  %192 = getelementptr inbounds %struct.float4, ptr %47, i32 0, i32 0
  %193 = extractvalue %struct.float4 %191, 0
  store float %193, ptr %192, align 16
  %194 = getelementptr inbounds %struct.float4, ptr %47, i32 0, i32 1
  %195 = extractvalue %struct.float4 %191, 1
  store float %195, ptr %194, align 4
  %196 = getelementptr inbounds %struct.float4, ptr %47, i32 0, i32 2
  %197 = extractvalue %struct.float4 %191, 2
  store float %197, ptr %196, align 8
  %198 = getelementptr inbounds %struct.float4, ptr %47, i32 0, i32 3
  %199 = extractvalue %struct.float4 %191, 3
  store float %199, ptr %198, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %41, ptr align 16 %47, i64 16, i1 false)
  br label %200

200:                                              ; preds = %171, %327
  %201 = call i64 @llvm.nvvm.texsurf.handle.internal.p1(ptr addrspace(1) @tex)
  store i64 %201, ptr %53, align 4
  %202 = load i32, ptr %21, align 4
  %203 = load i32, ptr %33, align 4
  %204 = add nsw i32 %202, %203
  %205 = add nsw i32 %204, 1
  %206 = load i64, ptr %53, align 4
  %207 = call %struct.float4 @_ZL10tex1DfetchI6float4EN17__nv_tex_rmet_retIT_E4typeE7textureIS2_Li1EL19cudaTextureReadMode0EEi(i64 %206, i32 noundef %205) #7
  %208 = getelementptr inbounds %struct.float4, ptr %51, i32 0, i32 0
  %209 = extractvalue %struct.float4 %207, 0
  store float %209, ptr %208, align 16
  %210 = getelementptr inbounds %struct.float4, ptr %51, i32 0, i32 1
  %211 = extractvalue %struct.float4 %207, 1
  store float %211, ptr %210, align 4
  %212 = getelementptr inbounds %struct.float4, ptr %51, i32 0, i32 2
  %213 = extractvalue %struct.float4 %207, 2
  store float %213, ptr %212, align 8
  %214 = getelementptr inbounds %struct.float4, ptr %51, i32 0, i32 3
  %215 = extractvalue %struct.float4 %207, 3
  store float %215, ptr %214, align 4
  %216 = call i64 @llvm.nvvm.texsurf.handle.internal.p1(ptr addrspace(1) @tex)
  store i64 %216, ptr %57, align 4
  %217 = load i32, ptr %23, align 4
  %218 = load i32, ptr %35, align 4
  %219 = add nsw i32 %217, %218
  %220 = add nsw i32 %219, 1
  %221 = load i64, ptr %57, align 4
  %222 = call %struct.float4 @_ZL10tex1DfetchI6float4EN17__nv_tex_rmet_retIT_E4typeE7textureIS2_Li1EL19cudaTextureReadMode0EEi(i64 %221, i32 noundef %220) #7
  %223 = getelementptr inbounds %struct.float4, ptr %55, i32 0, i32 0
  %224 = extractvalue %struct.float4 %222, 0
  store float %224, ptr %223, align 16
  %225 = getelementptr inbounds %struct.float4, ptr %55, i32 0, i32 1
  %226 = extractvalue %struct.float4 %222, 1
  store float %226, ptr %225, align 4
  %227 = getelementptr inbounds %struct.float4, ptr %55, i32 0, i32 2
  %228 = extractvalue %struct.float4 %222, 2
  store float %228, ptr %227, align 8
  %229 = getelementptr inbounds %struct.float4, ptr %55, i32 0, i32 3
  %230 = extractvalue %struct.float4 %222, 3
  store float %230, ptr %229, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %61, ptr align 16 %39, i64 16, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %63, ptr align 16 %41, i64 16, i1 false)
  %231 = call %struct.float4 @_Z9getLowest6float4S_(ptr noundef byval(%struct.float4) align 16 %61, ptr noundef byval(%struct.float4) align 16 %63) #7
  %232 = getelementptr inbounds %struct.float4, ptr %59, i32 0, i32 0
  %233 = extractvalue %struct.float4 %231, 0
  store float %233, ptr %232, align 16
  %234 = getelementptr inbounds %struct.float4, ptr %59, i32 0, i32 1
  %235 = extractvalue %struct.float4 %231, 1
  store float %235, ptr %234, align 4
  %236 = getelementptr inbounds %struct.float4, ptr %59, i32 0, i32 2
  %237 = extractvalue %struct.float4 %231, 2
  store float %237, ptr %236, align 8
  %238 = getelementptr inbounds %struct.float4, ptr %59, i32 0, i32 3
  %239 = extractvalue %struct.float4 %231, 3
  store float %239, ptr %238, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %67, ptr align 16 %39, i64 16, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %69, ptr align 16 %41, i64 16, i1 false)
  %240 = call %struct.float4 @_Z10getHighest6float4S_(ptr noundef byval(%struct.float4) align 16 %67, ptr noundef byval(%struct.float4) align 16 %69) #7
  %241 = getelementptr inbounds %struct.float4, ptr %65, i32 0, i32 0
  %242 = extractvalue %struct.float4 %240, 0
  store float %242, ptr %241, align 16
  %243 = getelementptr inbounds %struct.float4, ptr %65, i32 0, i32 1
  %244 = extractvalue %struct.float4 %240, 1
  store float %244, ptr %243, align 4
  %245 = getelementptr inbounds %struct.float4, ptr %65, i32 0, i32 2
  %246 = extractvalue %struct.float4 %240, 2
  store float %246, ptr %245, align 8
  %247 = getelementptr inbounds %struct.float4, ptr %65, i32 0, i32 3
  %248 = extractvalue %struct.float4 %240, 3
  store float %248, ptr %247, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %73, ptr align 16 %59, i64 16, i1 false)
  %249 = call %struct.float4 @_Z8sortElem6float4(ptr noundef byval(%struct.float4) align 16 %73) #7
  %250 = getelementptr inbounds %struct.float4, ptr %71, i32 0, i32 0
  %251 = extractvalue %struct.float4 %249, 0
  store float %251, ptr %250, align 16
  %252 = getelementptr inbounds %struct.float4, ptr %71, i32 0, i32 1
  %253 = extractvalue %struct.float4 %249, 1
  store float %253, ptr %252, align 4
  %254 = getelementptr inbounds %struct.float4, ptr %71, i32 0, i32 2
  %255 = extractvalue %struct.float4 %249, 2
  store float %255, ptr %254, align 8
  %256 = getelementptr inbounds %struct.float4, ptr %71, i32 0, i32 3
  %257 = extractvalue %struct.float4 %249, 3
  store float %257, ptr %256, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %39, ptr align 16 %71, i64 16, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %77, ptr align 16 %65, i64 16, i1 false)
  %258 = call %struct.float4 @_Z8sortElem6float4(ptr noundef byval(%struct.float4) align 16 %77) #7
  %259 = getelementptr inbounds %struct.float4, ptr %75, i32 0, i32 0
  %260 = extractvalue %struct.float4 %258, 0
  store float %260, ptr %259, align 16
  %261 = getelementptr inbounds %struct.float4, ptr %75, i32 0, i32 1
  %262 = extractvalue %struct.float4 %258, 1
  store float %262, ptr %261, align 4
  %263 = getelementptr inbounds %struct.float4, ptr %75, i32 0, i32 2
  %264 = extractvalue %struct.float4 %258, 2
  store float %264, ptr %263, align 8
  %265 = getelementptr inbounds %struct.float4, ptr %75, i32 0, i32 3
  %266 = extractvalue %struct.float4 %258, 3
  store float %266, ptr %265, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %41, ptr align 16 %75, i64 16, i1 false)
  %267 = load ptr, ptr %25, align 8
  %268 = load i32, ptr %37, align 4
  %269 = add nsw i32 %268, 1
  store i32 %269, ptr %37, align 4
  %270 = sext i32 %268 to i64
  %271 = getelementptr inbounds %struct.float4, ptr %267, i64 %270
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %271, ptr align 16 %39, i64 16, i1 false)
  %272 = load i32, ptr %33, align 4
  %273 = add nsw i32 %272, 1
  %274 = load i32, ptr %11, align 4
  %275 = sdiv i32 %274, 2
  %276 = icmp slt i32 %273, %275
  %277 = zext i1 %276 to i8
  store i8 %277, ptr %79, align 1
  %278 = load i32, ptr %35, align 4
  %279 = add nsw i32 %278, 1
  %280 = load i32, ptr %11, align 4
  %281 = sdiv i32 %280, 2
  %282 = icmp slt i32 %279, %281
  br i1 %282, label %283, label %294

283:                                              ; preds = %200
  %284 = load i32, ptr %23, align 4
  %285 = load i32, ptr %35, align 4
  %286 = add nsw i32 %284, %285
  %287 = add nsw i32 %286, 1
  %288 = load i32, ptr %17, align 4
  %289 = add nsw i32 %288, 1
  %290 = sext i32 %289 to i64
  %291 = getelementptr inbounds [1025 x i32], ptr addrspacecast (ptr addrspace(4) @constStartAddr to ptr), i64 0, i64 %290
  %292 = load i32, ptr %291, align 4
  %293 = icmp slt i32 %287, %292
  br label %294

294:                                              ; preds = %283, %200
  %295 = phi i1 [ false, %200 ], [ %293, %283 ]
  %296 = zext i1 %295 to i8
  store i8 %296, ptr %81, align 1
  %297 = load i8, ptr %79, align 1
  %298 = trunc i8 %297 to i1
  br i1 %298, label %299, label %319

299:                                              ; preds = %294
  %300 = load i8, ptr %81, align 1
  %301 = trunc i8 %300 to i1
  br i1 %301, label %302, label %315

302:                                              ; preds = %299
  %303 = getelementptr inbounds %struct.float4, ptr %51, i32 0, i32 0
  %304 = load float, ptr %303, align 16
  %305 = getelementptr inbounds %struct.float4, ptr %55, i32 0, i32 0
  %306 = load float, ptr %305, align 16
  %307 = fcmp contract olt float %304, %306
  br i1 %307, label %308, label %311

308:                                              ; preds = %302
  %309 = load i32, ptr %33, align 4
  %310 = add nsw i32 %309, 1
  store i32 %310, ptr %33, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %39, ptr align 16 %51, i64 16, i1 false)
  br label %314

311:                                              ; preds = %302
  %312 = load i32, ptr %35, align 4
  %313 = add nsw i32 %312, 1
  store i32 %313, ptr %35, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %39, ptr align 16 %55, i64 16, i1 false)
  br label %314

314:                                              ; preds = %311, %308
  br label %318

315:                                              ; preds = %299
  %316 = load i32, ptr %33, align 4
  %317 = add nsw i32 %316, 1
  store i32 %317, ptr %33, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %39, ptr align 16 %51, i64 16, i1 false)
  br label %318

318:                                              ; preds = %315, %314
  br label %327

319:                                              ; preds = %294
  %320 = load i8, ptr %81, align 1
  %321 = trunc i8 %320 to i1
  br i1 %321, label %322, label %325

322:                                              ; preds = %319
  %323 = load i32, ptr %35, align 4
  %324 = add nsw i32 %323, 1
  store i32 %324, ptr %35, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %39, ptr align 16 %55, i64 16, i1 false)
  br label %326

325:                                              ; preds = %319
  br label %328

326:                                              ; preds = %322
  br label %327

327:                                              ; preds = %326, %318
  br label %200, !llvm.loop !14

328:                                              ; preds = %325
  %329 = load ptr, ptr %25, align 8
  %330 = load i32, ptr %37, align 4
  %331 = add nsw i32 %330, 1
  store i32 %331, ptr %37, align 4
  %332 = sext i32 %330 to i64
  %333 = getelementptr inbounds %struct.float4, ptr %329, i64 %332
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %333, ptr align 16 %41, i64 16, i1 false)
  br label %334

334:                                              ; preds = %328, %170, %123, %93
  ret void
}

 finish two 
  %153 = getelementptr inbounds %struct.HIP_vector_type, ptr %7, i32 0, i32 0 I 
 getelementptr here 
 abc 
  %153 = getelementptr inbounds %struct.HIP_vector_type, ptr %7, i32 0, i32 0
 abc 
 out ptr 
  %154 = extractvalue %struct.HIP_vector_type %151, 0 I 
  store %struct.HIP_vector_base %154, ptr %153, align 16 I 
  %155 = getelementptr inbounds %struct.float4, ptr %29, i32 0, i32 0 I 
 getelementptr here 
  %156 = extractvalue %struct.HIP_vector_type %151, 0 I 
  store float %156, ptr %153, align 16 I 
  %157 = getelementptr inbounds %struct.float4, ptr %29, i32 0, i32 1 I 
 getelementptr here 
  %158 = extractvalue %struct.HIP_vector_type %151, 1 I 
  store float %158, ptr %157, align 4 I 
  %159 = getelementptr inbounds %struct.float4, ptr %29, i32 0, i32 2 I 
 getelementptr here 
  %160 = extractvalue %struct.HIP_vector_type %151, 2 I 
  store float %160, ptr %159, align 8 I 
  %161 = getelementptr inbounds %struct.float4, ptr %29, i32 0, i32 3 I 
 getelementptr here 
  %162 = extractvalue %struct.HIP_vector_type %151, 3 I 
  store float %162, ptr %161, align 4 I 
  %163 = load ptr, ptr %25, align 8 I 
  %164 = load i32, ptr %27, align 4 I 
  %165 = sext i32 %164 to i64 I 
  %166 = getelementptr inbounds %struct.float4, ptr %163, i64 %165 I 
 getelementptr here 
 abc 
  %166 = getelementptr inbounds %struct.float4, ptr %163, i64 %165
 abc 
 888888 
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %166, ptr align 16 %29, i64 16, i1 false)
  %29 = addrspacecast ptr addrspace(5) %28 to ptr
 out ptr 
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %166, ptr align 16 %29, i64 16, i1 false) I 
heree
llvm.memcpy.p0.p0.i64
 999 
 there 12 
  br label %171 I 
  %172 = load i32, ptr %27, align 4 I 
  %173 = add nsw i32 %172, 1 I 
  store i32 %173, ptr %27, align 4 I 
  br label %135, !llvm.loop !12 I 
  br label %338 I 
  store i32 0, ptr %35, align 4 I 
  store i32 0, ptr %37, align 4 I 
  store i32 0, ptr %39, align 4 I 
  %176 = call i64 @llvm.nvvm.texsurf.handle.internal.p1(ptr addrspace(1) @tex) I 
heree
llvm.nvvm.texsurf.handle.internal.p1
 1 
@tex = addrspace(1) externally_initialized global %struct.texture undef
 foound 
  store i64 %179, ptr %49, align 4 I 
  %180 = load i32, ptr %23, align 4 I 
  %181 = load i32, ptr %37, align 4 I 
  %182 = add nsw i32 %180, %181 I 
  %183 = load i64, ptr %49, align 4 I 
  %184 = call %struct.float4 @_ZL10tex1DfetchI6float4EN17__nv_tex_rmet_retIT_E4typeE7textureIS2_Li1EL19cudaTextureReadMode0EEi(i64 %183, i32 noundef %182) #7 I 
heree
_ZL10tex1DfetchI6float4EN17__nv_tex_rmet_retIT_E4typeE7textureIS2_Li1EL19cudaTextureReadMode0EEi
 fetch here 
  %184 = call %struct.float4 @_ZL10tex1DfetchI6float4EN17__nv_tex_rmet_retIT_E4typeE7textureIS2_Li1EL19cudaTextureReadMode0EEi(i64 %183, i32 noundef %182) #7
%struct.float4 = type { float, float, float, float }
  %183 = load %struct.textureReference, ptr %178, align 8 
0x19032a0
  %191 = extractvalue %struct.HIP_vector_type %187, 0
  %191 = getelementptr inbounds %struct.float4, ptr %49, i32 0, i32 0 need remove 
  %192 = extractvalue %struct.HIP_vector_type %187, 0 need remove 
  store float %192, ptr %189, align 16 need remove 
  %193 = getelementptr inbounds %struct.float4, ptr %49, i32 0, i32 1 need remove 
  %194 = extractvalue %struct.HIP_vector_type %187, 1 need remove 
  store float %194, ptr %193, align 4 need remove 
  %195 = getelementptr inbounds %struct.float4, ptr %49, i32 0, i32 2 need remove 
  %196 = extractvalue %struct.HIP_vector_type %187, 2 need remove 
  store float %196, ptr %195, align 8 need remove 
  %197 = getelementptr inbounds %struct.float4, ptr %49, i32 0, i32 3 need remove 
  %198 = extractvalue %struct.HIP_vector_type %187, 3 need remove 
  store float %198, ptr %197, align 4 need remove 
; Function Attrs: convergent mustprogress noinline norecurse nounwind optnone
define amdgpu_kernel void @_Z13mergeSortPassP6float4ii(ptr addrspace(1) noundef %0, i32 noundef %1, i32 noundef %2) #1 {
  %4 = alloca %struct.texture, align 8, addrspace(5)
  %5 = addrspacecast ptr addrspace(5) %4 to ptr
  %6 = alloca %struct.HIP_vector_type, align 16, addrspace(5)
  %7 = addrspacecast ptr addrspace(5) %6 to ptr
  %8 = alloca %struct.texture, align 8, addrspace(5)
  %9 = addrspacecast ptr addrspace(5) %8 to ptr
  %10 = alloca %struct.HIP_vector_type, align 16, addrspace(5)
  %11 = addrspacecast ptr addrspace(5) %10 to ptr
  %12 = alloca ptr, align 8, addrspace(5)
  %13 = addrspacecast ptr addrspace(5) %12 to ptr
  %14 = alloca i32, align 4, addrspace(5)
  %15 = addrspacecast ptr addrspace(5) %14 to ptr
  %16 = alloca i32, align 4, addrspace(5)
  %17 = addrspacecast ptr addrspace(5) %16 to ptr
  %18 = alloca i32, align 4, addrspace(5)
  %19 = addrspacecast ptr addrspace(5) %18 to ptr
  %20 = alloca i32, align 4, addrspace(5)
  %21 = addrspacecast ptr addrspace(5) %20 to ptr
  %22 = alloca i32, align 4, addrspace(5)
  %23 = addrspacecast ptr addrspace(5) %22 to ptr
  %24 = alloca i32, align 4, addrspace(5)
  %25 = addrspacecast ptr addrspace(5) %24 to ptr
  %26 = alloca i32, align 4, addrspace(5)
  %27 = addrspacecast ptr addrspace(5) %26 to ptr
  %28 = alloca ptr, align 8, addrspace(5)
  %29 = addrspacecast ptr addrspace(5) %28 to ptr
  %30 = alloca i32, align 4, addrspace(5)
  %31 = addrspacecast ptr addrspace(5) %30 to ptr
  %32 = alloca %struct.float4, align 16, addrspace(5)
  %33 = alloca %struct.HIP_vector_type, align 16, addrspace(5)
  %34 = addrspacecast ptr addrspace(5) %33 to ptr
  %35 = addrspacecast ptr addrspace(5) %32 to ptr
  %36 = alloca i64, align 4, addrspace(5)
  %37 = addrspacecast ptr addrspace(5) %36 to ptr
  %38 = alloca i32, align 4, addrspace(5)
  %39 = addrspacecast ptr addrspace(5) %38 to ptr
  %40 = alloca i32, align 4, addrspace(5)
  %41 = addrspacecast ptr addrspace(5) %40 to ptr
  %42 = alloca i32, align 4, addrspace(5)
  %43 = addrspacecast ptr addrspace(5) %42 to ptr
  %44 = alloca %struct.float4, align 16, addrspace(5)
  %45 = addrspacecast ptr addrspace(5) %44 to ptr
  %46 = alloca %struct.float4, align 16, addrspace(5)
  %47 = addrspacecast ptr addrspace(5) %46 to ptr
  %48 = alloca %struct.float4, align 16, addrspace(5)
  %49 = addrspacecast ptr addrspace(5) %48 to ptr
  %50 = alloca i64, align 4, addrspace(5)
  %51 = addrspacecast ptr addrspace(5) %50 to ptr
  %52 = alloca %struct.float4, align 16, addrspace(5)
  %53 = addrspacecast ptr addrspace(5) %52 to ptr
  %54 = alloca i64, align 4, addrspace(5)
  %55 = addrspacecast ptr addrspace(5) %54 to ptr
  %56 = alloca %struct.float4, align 16, addrspace(5)
  %57 = addrspacecast ptr addrspace(5) %56 to ptr
  %58 = alloca i64, align 4, addrspace(5)
  %59 = addrspacecast ptr addrspace(5) %58 to ptr
  %60 = alloca %struct.float4, align 16, addrspace(5)
  %61 = addrspacecast ptr addrspace(5) %60 to ptr
  %62 = alloca i64, align 4, addrspace(5)
  %63 = addrspacecast ptr addrspace(5) %62 to ptr
  %64 = alloca %struct.float4, align 16, addrspace(5)
  %65 = addrspacecast ptr addrspace(5) %64 to ptr
  %66 = alloca %struct.float4, align 16, addrspace(5)
  %67 = addrspacecast ptr addrspace(5) %66 to ptr
  %68 = alloca %struct.float4, align 16, addrspace(5)
  %69 = addrspacecast ptr addrspace(5) %68 to ptr
  %70 = alloca %struct.float4, align 16, addrspace(5)
  %71 = addrspacecast ptr addrspace(5) %70 to ptr
  %72 = alloca %struct.float4, align 16, addrspace(5)
  %73 = addrspacecast ptr addrspace(5) %72 to ptr
  %74 = alloca %struct.float4, align 16, addrspace(5)
  %75 = addrspacecast ptr addrspace(5) %74 to ptr
  %76 = alloca %struct.float4, align 16, addrspace(5)
  %77 = addrspacecast ptr addrspace(5) %76 to ptr
  %78 = alloca %struct.float4, align 16, addrspace(5)
  %79 = addrspacecast ptr addrspace(5) %78 to ptr
  %80 = alloca %struct.float4, align 16, addrspace(5)
  %81 = addrspacecast ptr addrspace(5) %80 to ptr
  %82 = alloca %struct.float4, align 16, addrspace(5)
  %83 = addrspacecast ptr addrspace(5) %82 to ptr
  %84 = alloca i8, align 1, addrspace(5)
  %85 = addrspacecast ptr addrspace(5) %84 to ptr
  %86 = alloca i8, align 1, addrspace(5)
  %87 = addrspacecast ptr addrspace(5) %86 to ptr
  %88 = addrspacecast ptr addrspace(1) %0 to ptr
  store ptr %88, ptr %13, align 8
  store i32 %1, ptr %15, align 4
  store i32 %2, ptr %17, align 4
  %89 = call noundef i32 @_ZN25__cuda_builtin_blockIdx_t17__fetch_builtin_xEv() #7
  %90 = call noundef i32 @_ZN25__cuda_builtin_blockDim_t17__fetch_builtin_xEv() #7
  %91 = mul i32 %89, %90
  %92 = call noundef i32 @_ZN26__cuda_builtin_threadIdx_t17__fetch_builtin_xEv() #7
  %93 = add i32 %91, %92
  store i32 %93, ptr %19, align 4
  %94 = load i32, ptr %19, align 4
  %95 = load i32, ptr %17, align 4
  %96 = sdiv i32 %94, %95
  store i32 %96, ptr %21, align 4
  %97 = load i32, ptr %21, align 4
  %98 = icmp sge i32 %97, 1024
  br i1 %98, label %99, label %100

99:                                               ; preds = %3
  br label %347

100:                                              ; preds = %3
  %101 = load i32, ptr %19, align 4
  %102 = load i32, ptr %21, align 4
  %103 = load i32, ptr %17, align 4
  %104 = mul nsw i32 %102, %103
  %105 = sub nsw i32 %101, %104
  store i32 %105, ptr %23, align 4
  %106 = load i32, ptr %21, align 4
  %107 = sext i32 %106 to i64
  %108 = getelementptr inbounds [1025 x i32], ptr addrspacecast (ptr addrspace(4) @constStartAddr to ptr), i64 0, i64 %107
  %109 = load i32, ptr %108, align 4
  %110 = load i32, ptr %23, align 4
  %111 = load i32, ptr %15, align 4
  %112 = mul nsw i32 %110, %111
  %113 = add nsw i32 %109, %112
  store i32 %113, ptr %25, align 4
  %114 = load i32, ptr %25, align 4
  %115 = load i32, ptr %15, align 4
  %116 = sdiv i32 %115, 2
  %117 = add nsw i32 %114, %116
  store i32 %117, ptr %27, align 4
  %118 = load ptr, ptr %13, align 8
  %119 = load i32, ptr %25, align 4
  %120 = sext i32 %119 to i64
  %121 = getelementptr inbounds %struct.float4, ptr %118, i64 %120
  store ptr %121, ptr %29, align 8
  %122 = load i32, ptr %25, align 4
  %123 = load i32, ptr %21, align 4
  %124 = add nsw i32 %123, 1
  %125 = sext i32 %124 to i64
  %126 = getelementptr inbounds [1025 x i32], ptr addrspacecast (ptr addrspace(4) @constStartAddr to ptr), i64 0, i64 %125
  %127 = load i32, ptr %126, align 4
  %128 = icmp sge i32 %122, %127
  br i1 %128, label %129, label %130

129:                                              ; preds = %100
  br label %347

130:                                              ; preds = %100
  %131 = load i32, ptr %27, align 4
  %132 = load i32, ptr %21, align 4
  %133 = add nsw i32 %132, 1
  %134 = sext i32 %133 to i64
  %135 = getelementptr inbounds [1025 x i32], ptr addrspacecast (ptr addrspace(4) @constStartAddr to ptr), i64 0, i64 %134
  %136 = load i32, ptr %135, align 4
  %137 = icmp sge i32 %131, %136
  br i1 %137, label %138, label %179

138:                                              ; preds = %130
  store i32 0, ptr %31, align 4
  br label %139

139:                                              ; preds = %175, %138
  %140 = load i32, ptr %31, align 4
  %141 = load i32, ptr %21, align 4
  %142 = add nsw i32 %141, 1
  %143 = sext i32 %142 to i64
  %144 = getelementptr inbounds [1025 x i32], ptr addrspacecast (ptr addrspace(4) @constStartAddr to ptr), i64 0, i64 %143
  %145 = load i32, ptr %144, align 4
  %146 = load i32, ptr %25, align 4
  %147 = sub nsw i32 %145, %146
  %148 = icmp slt i32 %140, %147
  br i1 %148, label %149, label %178

149:                                              ; preds = %139
  call void @llvm.memcpy.p0.p0.i64(ptr %5, ptr addrspacecast (ptr addrspace(1) @tex to ptr), i64 88, i1 false)
  %150 = getelementptr inbounds %struct.textureReference, ptr %5, i32 0, i32 0
  %151 = call i64 @llvm.nvvm.texsurf.handle.internal.p1(ptr addrspace(1) @tex)
  store i64 %151, ptr %37, align 4
  %152 = load i32, ptr %25, align 4
  %153 = load i32, ptr %31, align 4
  %154 = add nsw i32 %152, %153
  %155 = load %struct.textureReference, ptr %150, align 8
  %156 = load i64, ptr %37, align 4
  %157 = call %struct.HIP_vector_type @_ZL10tex1DfetchI15HIP_vector_typeIfLj4EEL18hipTextureReadMode0EEN13__hip_tex_retIT_XT0_EbE4typeE7textureIS4_Li1EXT0_EEi(%struct.textureReference %155, i32 %154)
  %158 = call %struct.float4 @_ZL10tex1DfetchI6float4EN17__nv_tex_rmet_retIT_E4typeE7textureIS2_Li1EL19cudaTextureReadMode0EEi(%struct.textureReference %155, i32 noundef %154) #7
  %159 = getelementptr inbounds %struct.HIP_vector_type, ptr %7, i32 0, i32 0
  %160 = extractvalue %struct.HIP_vector_type %157, 0
  store %struct.HIP_vector_base %160, ptr %159, align 16
  %161 = getelementptr inbounds %struct.float4, ptr %34, i32 0, i32 0
  %162 = extractvalue %struct.HIP_vector_type %157, 0
  store float %162, ptr %159, align 16
  %163 = getelementptr inbounds %struct.float4, ptr %34, i32 0, i32 1
  %164 = extractvalue %struct.HIP_vector_type %157, 1
  store float %164, ptr %163, align 4
  %165 = getelementptr inbounds %struct.float4, ptr %34, i32 0, i32 2
  %166 = extractvalue %struct.HIP_vector_type %157, 2
  store float %166, ptr %165, align 8
  %167 = getelementptr inbounds %struct.float4, ptr %34, i32 0, i32 3
  %168 = extractvalue %struct.HIP_vector_type %157, 3
  store float %168, ptr %167, align 4
  %169 = load ptr, ptr %29, align 8
  %170 = load i32, ptr %31, align 4
  %171 = sext i32 %170 to i64
  %172 = getelementptr inbounds %struct.HIP_vector_type, ptr %169, i64 %171
  %173 = call dereferenceable(16) ptr @_ZN15HIP_vector_typeIfLj4EEaSERKS0_(ptr dereferenceable(16) %172, ptr dereferenceable(16) %7)
  %174 = getelementptr inbounds %struct.float4, ptr %169, i64 %171
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %172, ptr align 16 %34, i64 16, i1 false)
  br label %175

175:                                              ; preds = %149
  %176 = load i32, ptr %31, align 4
  %177 = add nsw i32 %176, 1
  store i32 %177, ptr %31, align 4
  br label %139, !llvm.loop !12

178:                                              ; preds = %139
  br label %347

179:                                              ; preds = %130
  store i32 0, ptr %39, align 4
  store i32 0, ptr %41, align 4
  store i32 0, ptr %43, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr %9, ptr addrspacecast (ptr addrspace(1) @tex to ptr), i64 88, i1 false)
  %180 = getelementptr inbounds %struct.textureReference, ptr %9, i32 0, i32 0
  %181 = call i64 @llvm.nvvm.texsurf.handle.internal.p1(ptr addrspace(1) @tex)
  store i64 %181, ptr %51, align 4
  %182 = load i32, ptr %25, align 4
  %183 = load i32, ptr %39, align 4
  %184 = add nsw i32 %182, %183
  %185 = load %struct.textureReference, ptr %180, align 8
  %186 = load i64, ptr %51, align 4
  %187 = call %struct.HIP_vector_type @_ZL10tex1DfetchI15HIP_vector_typeIfLj4EEL18hipTextureReadMode0EEN13__hip_tex_retIT_XT0_EbE4typeE7textureIS4_Li1EXT0_EEi(%struct.textureReference %185, i32 %184)
  %188 = call %struct.float4 @_ZL10tex1DfetchI6float4EN17__nv_tex_rmet_retIT_E4typeE7textureIS2_Li1EL19cudaTextureReadMode0EEi(%struct.textureReference %185, i32 noundef %184) #7
  %189 = getelementptr inbounds %struct.HIP_vector_type, ptr %11, i32 0, i32 0
  %190 = extractvalue %struct.HIP_vector_type %187, 0
  store %struct.HIP_vector_base %190, ptr %189, align 16
  %191 = getelementptr inbounds %struct.float4, ptr %49, i32 0, i32 0
  %192 = extractvalue %struct.HIP_vector_type %187, 0
  store float %192, ptr %189, align 16
  %193 = getelementptr inbounds %struct.float4, ptr %49, i32 0, i32 1
  %194 = extractvalue %struct.HIP_vector_type %187, 1
  store float %194, ptr %193, align 4
  %195 = getelementptr inbounds %struct.float4, ptr %49, i32 0, i32 2
  %196 = extractvalue %struct.HIP_vector_type %187, 2
  store float %196, ptr %195, align 8
  %197 = getelementptr inbounds %struct.float4, ptr %49, i32 0, i32 3
  %198 = extractvalue %struct.HIP_vector_type %187, 3
  store float %198, ptr %197, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %45, ptr align 16 %49, i64 16, i1 false)
  %199 = call i64 @llvm.nvvm.texsurf.handle.internal.p1(ptr addrspace(1) @tex)
  store i64 %199, ptr %55, align 4
  %200 = load i32, ptr %27, align 4
  %201 = load i32, ptr %41, align 4
  %202 = add nsw i32 %200, %201
  %203 = load i64, ptr %55, align 4
  %204 = call %struct.float4 @_ZL10tex1DfetchI6float4EN17__nv_tex_rmet_retIT_E4typeE7textureIS2_Li1EL19cudaTextureReadMode0EEi(i64 %203, i32 noundef %202) #7
  %205 = getelementptr inbounds %struct.float4, ptr %53, i32 0, i32 0
  %206 = extractvalue %struct.float4 %204, 0
  store float %206, ptr %205, align 16
  %207 = getelementptr inbounds %struct.float4, ptr %53, i32 0, i32 1
  %208 = extractvalue %struct.float4 %204, 1
  store float %208, ptr %207, align 4
  %209 = getelementptr inbounds %struct.float4, ptr %53, i32 0, i32 2
  %210 = extractvalue %struct.float4 %204, 2
  store float %210, ptr %209, align 8
  %211 = getelementptr inbounds %struct.float4, ptr %53, i32 0, i32 3
  %212 = extractvalue %struct.float4 %204, 3
  store float %212, ptr %211, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %47, ptr align 16 %53, i64 16, i1 false)
  br label %213

213:                                              ; preds = %179, %340
  %214 = call i64 @llvm.nvvm.texsurf.handle.internal.p1(ptr addrspace(1) @tex)
  store i64 %214, ptr %59, align 4
  %215 = load i32, ptr %25, align 4
  %216 = load i32, ptr %39, align 4
  %217 = add nsw i32 %215, %216
  %218 = add nsw i32 %217, 1
  %219 = load i64, ptr %59, align 4
  %220 = call %struct.float4 @_ZL10tex1DfetchI6float4EN17__nv_tex_rmet_retIT_E4typeE7textureIS2_Li1EL19cudaTextureReadMode0EEi(i64 %219, i32 noundef %218) #7
  %221 = getelementptr inbounds %struct.float4, ptr %57, i32 0, i32 0
  %222 = extractvalue %struct.float4 %220, 0
  store float %222, ptr %221, align 16
  %223 = getelementptr inbounds %struct.float4, ptr %57, i32 0, i32 1
  %224 = extractvalue %struct.float4 %220, 1
  store float %224, ptr %223, align 4
  %225 = getelementptr inbounds %struct.float4, ptr %57, i32 0, i32 2
  %226 = extractvalue %struct.float4 %220, 2
  store float %226, ptr %225, align 8
  %227 = getelementptr inbounds %struct.float4, ptr %57, i32 0, i32 3
  %228 = extractvalue %struct.float4 %220, 3
  store float %228, ptr %227, align 4
  %229 = call i64 @llvm.nvvm.texsurf.handle.internal.p1(ptr addrspace(1) @tex)
  store i64 %229, ptr %63, align 4
  %230 = load i32, ptr %27, align 4
  %231 = load i32, ptr %41, align 4
  %232 = add nsw i32 %230, %231
  %233 = add nsw i32 %232, 1
  %234 = load i64, ptr %63, align 4
  %235 = call %struct.float4 @_ZL10tex1DfetchI6float4EN17__nv_tex_rmet_retIT_E4typeE7textureIS2_Li1EL19cudaTextureReadMode0EEi(i64 %234, i32 noundef %233) #7
  %236 = getelementptr inbounds %struct.float4, ptr %61, i32 0, i32 0
  %237 = extractvalue %struct.float4 %235, 0
  store float %237, ptr %236, align 16
  %238 = getelementptr inbounds %struct.float4, ptr %61, i32 0, i32 1
  %239 = extractvalue %struct.float4 %235, 1
  store float %239, ptr %238, align 4
  %240 = getelementptr inbounds %struct.float4, ptr %61, i32 0, i32 2
  %241 = extractvalue %struct.float4 %235, 2
  store float %241, ptr %240, align 8
  %242 = getelementptr inbounds %struct.float4, ptr %61, i32 0, i32 3
  %243 = extractvalue %struct.float4 %235, 3
  store float %243, ptr %242, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %67, ptr align 16 %45, i64 16, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %69, ptr align 16 %47, i64 16, i1 false)
  %244 = call %struct.float4 @_Z9getLowest6float4S_(ptr noundef byval(%struct.float4) align 16 %67, ptr noundef byval(%struct.float4) align 16 %69) #7
  %245 = getelementptr inbounds %struct.float4, ptr %65, i32 0, i32 0
  %246 = extractvalue %struct.float4 %244, 0
  store float %246, ptr %245, align 16
  %247 = getelementptr inbounds %struct.float4, ptr %65, i32 0, i32 1
  %248 = extractvalue %struct.float4 %244, 1
  store float %248, ptr %247, align 4
  %249 = getelementptr inbounds %struct.float4, ptr %65, i32 0, i32 2
  %250 = extractvalue %struct.float4 %244, 2
  store float %250, ptr %249, align 8
  %251 = getelementptr inbounds %struct.float4, ptr %65, i32 0, i32 3
  %252 = extractvalue %struct.float4 %244, 3
  store float %252, ptr %251, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %73, ptr align 16 %45, i64 16, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %75, ptr align 16 %47, i64 16, i1 false)
  %253 = call %struct.float4 @_Z10getHighest6float4S_(ptr noundef byval(%struct.float4) align 16 %73, ptr noundef byval(%struct.float4) align 16 %75) #7
  %254 = getelementptr inbounds %struct.float4, ptr %71, i32 0, i32 0
  %255 = extractvalue %struct.float4 %253, 0
  store float %255, ptr %254, align 16
  %256 = getelementptr inbounds %struct.float4, ptr %71, i32 0, i32 1
  %257 = extractvalue %struct.float4 %253, 1
  store float %257, ptr %256, align 4
  %258 = getelementptr inbounds %struct.float4, ptr %71, i32 0, i32 2
  %259 = extractvalue %struct.float4 %253, 2
  store float %259, ptr %258, align 8
  %260 = getelementptr inbounds %struct.float4, ptr %71, i32 0, i32 3
  %261 = extractvalue %struct.float4 %253, 3
  store float %261, ptr %260, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %79, ptr align 16 %65, i64 16, i1 false)
  %262 = call %struct.float4 @_Z8sortElem6float4(ptr noundef byval(%struct.float4) align 16 %79) #7
  %263 = getelementptr inbounds %struct.float4, ptr %77, i32 0, i32 0
  %264 = extractvalue %struct.float4 %262, 0
  store float %264, ptr %263, align 16
  %265 = getelementptr inbounds %struct.float4, ptr %77, i32 0, i32 1
  %266 = extractvalue %struct.float4 %262, 1
  store float %266, ptr %265, align 4
  %267 = getelementptr inbounds %struct.float4, ptr %77, i32 0, i32 2
  %268 = extractvalue %struct.float4 %262, 2
  store float %268, ptr %267, align 8
  %269 = getelementptr inbounds %struct.float4, ptr %77, i32 0, i32 3
  %270 = extractvalue %struct.float4 %262, 3
  store float %270, ptr %269, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %45, ptr align 16 %77, i64 16, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %83, ptr align 16 %71, i64 16, i1 false)
  %271 = call %struct.float4 @_Z8sortElem6float4(ptr noundef byval(%struct.float4) align 16 %83) #7
  %272 = getelementptr inbounds %struct.float4, ptr %81, i32 0, i32 0
  %273 = extractvalue %struct.float4 %271, 0
  store float %273, ptr %272, align 16
  %274 = getelementptr inbounds %struct.float4, ptr %81, i32 0, i32 1
  %275 = extractvalue %struct.float4 %271, 1
  store float %275, ptr %274, align 4
  %276 = getelementptr inbounds %struct.float4, ptr %81, i32 0, i32 2
  %277 = extractvalue %struct.float4 %271, 2
  store float %277, ptr %276, align 8
  %278 = getelementptr inbounds %struct.float4, ptr %81, i32 0, i32 3
  %279 = extractvalue %struct.float4 %271, 3
  store float %279, ptr %278, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %47, ptr align 16 %81, i64 16, i1 false)
  %280 = load ptr, ptr %29, align 8
  %281 = load i32, ptr %43, align 4
  %282 = add nsw i32 %281, 1
  store i32 %282, ptr %43, align 4
  %283 = sext i32 %281 to i64
  %284 = getelementptr inbounds %struct.float4, ptr %280, i64 %283
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %284, ptr align 16 %45, i64 16, i1 false)
  %285 = load i32, ptr %39, align 4
  %286 = add nsw i32 %285, 1
  %287 = load i32, ptr %15, align 4
  %288 = sdiv i32 %287, 2
  %289 = icmp slt i32 %286, %288
  %290 = zext i1 %289 to i8
  store i8 %290, ptr %85, align 1
  %291 = load i32, ptr %41, align 4
  %292 = add nsw i32 %291, 1
  %293 = load i32, ptr %15, align 4
  %294 = sdiv i32 %293, 2
  %295 = icmp slt i32 %292, %294
  br i1 %295, label %296, label %307

296:                                              ; preds = %213
  %297 = load i32, ptr %27, align 4
  %298 = load i32, ptr %41, align 4
  %299 = add nsw i32 %297, %298
  %300 = add nsw i32 %299, 1
  %301 = load i32, ptr %21, align 4
  %302 = add nsw i32 %301, 1
  %303 = sext i32 %302 to i64
  %304 = getelementptr inbounds [1025 x i32], ptr addrspacecast (ptr addrspace(4) @constStartAddr to ptr), i64 0, i64 %303
  %305 = load i32, ptr %304, align 4
  %306 = icmp slt i32 %300, %305
  br label %307

307:                                              ; preds = %296, %213
  %308 = phi i1 [ false, %213 ], [ %306, %296 ]
  %309 = zext i1 %308 to i8
  store i8 %309, ptr %87, align 1
  %310 = load i8, ptr %85, align 1
  %311 = trunc i8 %310 to i1
  br i1 %311, label %312, label %332

312:                                              ; preds = %307
  %313 = load i8, ptr %87, align 1
  %314 = trunc i8 %313 to i1
  br i1 %314, label %315, label %328

315:                                              ; preds = %312
  %316 = getelementptr inbounds %struct.float4, ptr %57, i32 0, i32 0
  %317 = load float, ptr %316, align 16
  %318 = getelementptr inbounds %struct.float4, ptr %61, i32 0, i32 0
  %319 = load float, ptr %318, align 16
  %320 = fcmp contract olt float %317, %319
  br i1 %320, label %321, label %324

321:                                              ; preds = %315
  %322 = load i32, ptr %39, align 4
  %323 = add nsw i32 %322, 1
  store i32 %323, ptr %39, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %45, ptr align 16 %57, i64 16, i1 false)
  br label %327

324:                                              ; preds = %315
  %325 = load i32, ptr %41, align 4
  %326 = add nsw i32 %325, 1
  store i32 %326, ptr %41, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %45, ptr align 16 %61, i64 16, i1 false)
  br label %327

327:                                              ; preds = %324, %321
  br label %331

328:                                              ; preds = %312
  %329 = load i32, ptr %39, align 4
  %330 = add nsw i32 %329, 1
  store i32 %330, ptr %39, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %45, ptr align 16 %57, i64 16, i1 false)
  br label %331

331:                                              ; preds = %328, %327
  br label %340

332:                                              ; preds = %307
  %333 = load i8, ptr %87, align 1
  %334 = trunc i8 %333 to i1
  br i1 %334, label %335, label %338

335:                                              ; preds = %332
  %336 = load i32, ptr %41, align 4
  %337 = add nsw i32 %336, 1
  store i32 %337, ptr %41, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %45, ptr align 16 %61, i64 16, i1 false)
  br label %339

338:                                              ; preds = %332
  br label %341

339:                                              ; preds = %335
  br label %340

340:                                              ; preds = %339, %331
  br label %213, !llvm.loop !14

341:                                              ; preds = %338
  %342 = load ptr, ptr %29, align 8
  %343 = load i32, ptr %43, align 4
  %344 = add nsw i32 %343, 1
  store i32 %344, ptr %43, align 4
  %345 = sext i32 %343 to i64
  %346 = getelementptr inbounds %struct.float4, ptr %342, i64 %345
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %346, ptr align 16 %47, i64 16, i1 false)
  br label %347

347:                                              ; preds = %341, %178, %129, %99
  ret void
}

 finish two 
  %189 = getelementptr inbounds %struct.HIP_vector_type, ptr %11, i32 0, i32 0 I 
 getelementptr here 
 abc 
  %189 = getelementptr inbounds %struct.HIP_vector_type, ptr %11, i32 0, i32 0
 abc 
 out ptr 
  %190 = extractvalue %struct.HIP_vector_type %187, 0 I 
  store %struct.HIP_vector_base %190, ptr %189, align 16 I 
  %191 = getelementptr inbounds %struct.float4, ptr %49, i32 0, i32 0 I 
 getelementptr here 
  %192 = extractvalue %struct.HIP_vector_type %187, 0 I 
  store float %192, ptr %189, align 16 I 
  %193 = getelementptr inbounds %struct.float4, ptr %49, i32 0, i32 1 I 
 getelementptr here 
  %194 = extractvalue %struct.HIP_vector_type %187, 1 I 
  store float %194, ptr %193, align 4 I 
  %195 = getelementptr inbounds %struct.float4, ptr %49, i32 0, i32 2 I 
 getelementptr here 
  %196 = extractvalue %struct.HIP_vector_type %187, 2 I 
  store float %196, ptr %195, align 8 I 
  %197 = getelementptr inbounds %struct.float4, ptr %49, i32 0, i32 3 I 
 getelementptr here 
  %198 = extractvalue %struct.HIP_vector_type %187, 3 I 
  store float %198, ptr %197, align 4 I 
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %45, ptr align 16 %49, i64 16, i1 false) I 
heree
llvm.memcpy.p0.p0.i64
 999 
 there 12 
  %201 = call i64 @llvm.nvvm.texsurf.handle.internal.p1(ptr addrspace(1) @tex) I 
heree
llvm.nvvm.texsurf.handle.internal.p1
 1 
@tex = addrspace(1) externally_initialized global %struct.texture undef
 foound 
  store i64 %204, ptr %59, align 4 I 
  %205 = load i32, ptr %29, align 4 I 
  %206 = load i32, ptr %43, align 4 I 
  %207 = add nsw i32 %205, %206 I 
  %208 = load i64, ptr %59, align 4 I 
  %209 = call %struct.float4 @_ZL10tex1DfetchI6float4EN17__nv_tex_rmet_retIT_E4typeE7textureIS2_Li1EL19cudaTextureReadMode0EEi(i64 %208, i32 noundef %207) #7 I 
heree
_ZL10tex1DfetchI6float4EN17__nv_tex_rmet_retIT_E4typeE7textureIS2_Li1EL19cudaTextureReadMode0EEi
 fetch here 
  %209 = call %struct.float4 @_ZL10tex1DfetchI6float4EN17__nv_tex_rmet_retIT_E4typeE7textureIS2_Li1EL19cudaTextureReadMode0EEi(i64 %208, i32 noundef %207) #7
%struct.float4 = type { float, float, float, float }
  %208 = load %struct.textureReference, ptr %203, align 8 
0x1904100
  %216 = extractvalue %struct.HIP_vector_type %212, 0
  %216 = getelementptr inbounds %struct.float4, ptr %59, i32 0, i32 0 need remove 
  %217 = extractvalue %struct.HIP_vector_type %212, 0 need remove 
  store float %217, ptr %214, align 16 need remove 
  %218 = getelementptr inbounds %struct.float4, ptr %59, i32 0, i32 1 need remove 
  %219 = extractvalue %struct.HIP_vector_type %212, 1 need remove 
  store float %219, ptr %218, align 4 need remove 
  %220 = getelementptr inbounds %struct.float4, ptr %59, i32 0, i32 2 need remove 
  %221 = extractvalue %struct.HIP_vector_type %212, 2 need remove 
  store float %221, ptr %220, align 8 need remove 
  %222 = getelementptr inbounds %struct.float4, ptr %59, i32 0, i32 3 need remove 
  %223 = extractvalue %struct.HIP_vector_type %212, 3 need remove 
  store float %223, ptr %222, align 4 need remove 
; Function Attrs: convergent mustprogress noinline norecurse nounwind optnone
define amdgpu_kernel void @_Z13mergeSortPassP6float4ii(ptr addrspace(1) noundef %0, i32 noundef %1, i32 noundef %2) #1 {
  %4 = alloca %struct.texture, align 8, addrspace(5)
  %5 = addrspacecast ptr addrspace(5) %4 to ptr
  %6 = alloca %struct.HIP_vector_type, align 16, addrspace(5)
  %7 = addrspacecast ptr addrspace(5) %6 to ptr
  %8 = alloca %struct.texture, align 8, addrspace(5)
  %9 = addrspacecast ptr addrspace(5) %8 to ptr
  %10 = alloca %struct.HIP_vector_type, align 16, addrspace(5)
  %11 = addrspacecast ptr addrspace(5) %10 to ptr
  %12 = alloca %struct.texture, align 8, addrspace(5)
  %13 = addrspacecast ptr addrspace(5) %12 to ptr
  %14 = alloca %struct.HIP_vector_type, align 16, addrspace(5)
  %15 = addrspacecast ptr addrspace(5) %14 to ptr
  %16 = alloca ptr, align 8, addrspace(5)
  %17 = addrspacecast ptr addrspace(5) %16 to ptr
  %18 = alloca i32, align 4, addrspace(5)
  %19 = addrspacecast ptr addrspace(5) %18 to ptr
  %20 = alloca i32, align 4, addrspace(5)
  %21 = addrspacecast ptr addrspace(5) %20 to ptr
  %22 = alloca i32, align 4, addrspace(5)
  %23 = addrspacecast ptr addrspace(5) %22 to ptr
  %24 = alloca i32, align 4, addrspace(5)
  %25 = addrspacecast ptr addrspace(5) %24 to ptr
  %26 = alloca i32, align 4, addrspace(5)
  %27 = addrspacecast ptr addrspace(5) %26 to ptr
  %28 = alloca i32, align 4, addrspace(5)
  %29 = addrspacecast ptr addrspace(5) %28 to ptr
  %30 = alloca i32, align 4, addrspace(5)
  %31 = addrspacecast ptr addrspace(5) %30 to ptr
  %32 = alloca ptr, align 8, addrspace(5)
  %33 = addrspacecast ptr addrspace(5) %32 to ptr
  %34 = alloca i32, align 4, addrspace(5)
  %35 = addrspacecast ptr addrspace(5) %34 to ptr
  %36 = alloca %struct.float4, align 16, addrspace(5)
  %37 = alloca %struct.HIP_vector_type, align 16, addrspace(5)
  %38 = addrspacecast ptr addrspace(5) %37 to ptr
  %39 = addrspacecast ptr addrspace(5) %36 to ptr
  %40 = alloca i64, align 4, addrspace(5)
  %41 = addrspacecast ptr addrspace(5) %40 to ptr
  %42 = alloca i32, align 4, addrspace(5)
  %43 = addrspacecast ptr addrspace(5) %42 to ptr
  %44 = alloca i32, align 4, addrspace(5)
  %45 = addrspacecast ptr addrspace(5) %44 to ptr
  %46 = alloca i32, align 4, addrspace(5)
  %47 = addrspacecast ptr addrspace(5) %46 to ptr
  %48 = alloca %struct.float4, align 16, addrspace(5)
  %49 = addrspacecast ptr addrspace(5) %48 to ptr
  %50 = alloca %struct.float4, align 16, addrspace(5)
  %51 = addrspacecast ptr addrspace(5) %50 to ptr
  %52 = alloca %struct.float4, align 16, addrspace(5)
  %53 = alloca %struct.HIP_vector_type, align 16, addrspace(5)
  %54 = addrspacecast ptr addrspace(5) %53 to ptr
  %55 = addrspacecast ptr addrspace(5) %52 to ptr
  %56 = alloca i64, align 4, addrspace(5)
  %57 = addrspacecast ptr addrspace(5) %56 to ptr
  %58 = alloca %struct.float4, align 16, addrspace(5)
  %59 = addrspacecast ptr addrspace(5) %58 to ptr
  %60 = alloca i64, align 4, addrspace(5)
  %61 = addrspacecast ptr addrspace(5) %60 to ptr
  %62 = alloca %struct.float4, align 16, addrspace(5)
  %63 = addrspacecast ptr addrspace(5) %62 to ptr
  %64 = alloca i64, align 4, addrspace(5)
  %65 = addrspacecast ptr addrspace(5) %64 to ptr
  %66 = alloca %struct.float4, align 16, addrspace(5)
  %67 = addrspacecast ptr addrspace(5) %66 to ptr
  %68 = alloca i64, align 4, addrspace(5)
  %69 = addrspacecast ptr addrspace(5) %68 to ptr
  %70 = alloca %struct.float4, align 16, addrspace(5)
  %71 = addrspacecast ptr addrspace(5) %70 to ptr
  %72 = alloca %struct.float4, align 16, addrspace(5)
  %73 = addrspacecast ptr addrspace(5) %72 to ptr
  %74 = alloca %struct.float4, align 16, addrspace(5)
  %75 = addrspacecast ptr addrspace(5) %74 to ptr
  %76 = alloca %struct.float4, align 16, addrspace(5)
  %77 = addrspacecast ptr addrspace(5) %76 to ptr
  %78 = alloca %struct.float4, align 16, addrspace(5)
  %79 = addrspacecast ptr addrspace(5) %78 to ptr
  %80 = alloca %struct.float4, align 16, addrspace(5)
  %81 = addrspacecast ptr addrspace(5) %80 to ptr
  %82 = alloca %struct.float4, align 16, addrspace(5)
  %83 = addrspacecast ptr addrspace(5) %82 to ptr
  %84 = alloca %struct.float4, align 16, addrspace(5)
  %85 = addrspacecast ptr addrspace(5) %84 to ptr
  %86 = alloca %struct.float4, align 16, addrspace(5)
  %87 = addrspacecast ptr addrspace(5) %86 to ptr
  %88 = alloca %struct.float4, align 16, addrspace(5)
  %89 = addrspacecast ptr addrspace(5) %88 to ptr
  %90 = alloca i8, align 1, addrspace(5)
  %91 = addrspacecast ptr addrspace(5) %90 to ptr
  %92 = alloca i8, align 1, addrspace(5)
  %93 = addrspacecast ptr addrspace(5) %92 to ptr
  %94 = addrspacecast ptr addrspace(1) %0 to ptr
  store ptr %94, ptr %17, align 8
  store i32 %1, ptr %19, align 4
  store i32 %2, ptr %21, align 4
  %95 = call noundef i32 @_ZN25__cuda_builtin_blockIdx_t17__fetch_builtin_xEv() #7
  %96 = call noundef i32 @_ZN25__cuda_builtin_blockDim_t17__fetch_builtin_xEv() #7
  %97 = mul i32 %95, %96
  %98 = call noundef i32 @_ZN26__cuda_builtin_threadIdx_t17__fetch_builtin_xEv() #7
  %99 = add i32 %97, %98
  store i32 %99, ptr %23, align 4
  %100 = load i32, ptr %23, align 4
  %101 = load i32, ptr %21, align 4
  %102 = sdiv i32 %100, %101
  store i32 %102, ptr %25, align 4
  %103 = load i32, ptr %25, align 4
  %104 = icmp sge i32 %103, 1024
  br i1 %104, label %105, label %106

105:                                              ; preds = %3
  br label %358

106:                                              ; preds = %3
  %107 = load i32, ptr %23, align 4
  %108 = load i32, ptr %25, align 4
  %109 = load i32, ptr %21, align 4
  %110 = mul nsw i32 %108, %109
  %111 = sub nsw i32 %107, %110
  store i32 %111, ptr %27, align 4
  %112 = load i32, ptr %25, align 4
  %113 = sext i32 %112 to i64
  %114 = getelementptr inbounds [1025 x i32], ptr addrspacecast (ptr addrspace(4) @constStartAddr to ptr), i64 0, i64 %113
  %115 = load i32, ptr %114, align 4
  %116 = load i32, ptr %27, align 4
  %117 = load i32, ptr %19, align 4
  %118 = mul nsw i32 %116, %117
  %119 = add nsw i32 %115, %118
  store i32 %119, ptr %29, align 4
  %120 = load i32, ptr %29, align 4
  %121 = load i32, ptr %19, align 4
  %122 = sdiv i32 %121, 2
  %123 = add nsw i32 %120, %122
  store i32 %123, ptr %31, align 4
  %124 = load ptr, ptr %17, align 8
  %125 = load i32, ptr %29, align 4
  %126 = sext i32 %125 to i64
  %127 = getelementptr inbounds %struct.float4, ptr %124, i64 %126
  store ptr %127, ptr %33, align 8
  %128 = load i32, ptr %29, align 4
  %129 = load i32, ptr %25, align 4
  %130 = add nsw i32 %129, 1
  %131 = sext i32 %130 to i64
  %132 = getelementptr inbounds [1025 x i32], ptr addrspacecast (ptr addrspace(4) @constStartAddr to ptr), i64 0, i64 %131
  %133 = load i32, ptr %132, align 4
  %134 = icmp sge i32 %128, %133
  br i1 %134, label %135, label %136

135:                                              ; preds = %106
  br label %358

136:                                              ; preds = %106
  %137 = load i32, ptr %31, align 4
  %138 = load i32, ptr %25, align 4
  %139 = add nsw i32 %138, 1
  %140 = sext i32 %139 to i64
  %141 = getelementptr inbounds [1025 x i32], ptr addrspacecast (ptr addrspace(4) @constStartAddr to ptr), i64 0, i64 %140
  %142 = load i32, ptr %141, align 4
  %143 = icmp sge i32 %137, %142
  br i1 %143, label %144, label %185

144:                                              ; preds = %136
  store i32 0, ptr %35, align 4
  br label %145

145:                                              ; preds = %181, %144
  %146 = load i32, ptr %35, align 4
  %147 = load i32, ptr %25, align 4
  %148 = add nsw i32 %147, 1
  %149 = sext i32 %148 to i64
  %150 = getelementptr inbounds [1025 x i32], ptr addrspacecast (ptr addrspace(4) @constStartAddr to ptr), i64 0, i64 %149
  %151 = load i32, ptr %150, align 4
  %152 = load i32, ptr %29, align 4
  %153 = sub nsw i32 %151, %152
  %154 = icmp slt i32 %146, %153
  br i1 %154, label %155, label %184

155:                                              ; preds = %145
  call void @llvm.memcpy.p0.p0.i64(ptr %5, ptr addrspacecast (ptr addrspace(1) @tex to ptr), i64 88, i1 false)
  %156 = getelementptr inbounds %struct.textureReference, ptr %5, i32 0, i32 0
  %157 = call i64 @llvm.nvvm.texsurf.handle.internal.p1(ptr addrspace(1) @tex)
  store i64 %157, ptr %41, align 4
  %158 = load i32, ptr %29, align 4
  %159 = load i32, ptr %35, align 4
  %160 = add nsw i32 %158, %159
  %161 = load %struct.textureReference, ptr %156, align 8
  %162 = load i64, ptr %41, align 4
  %163 = call %struct.HIP_vector_type @_ZL10tex1DfetchI15HIP_vector_typeIfLj4EEL18hipTextureReadMode0EEN13__hip_tex_retIT_XT0_EbE4typeE7textureIS4_Li1EXT0_EEi(%struct.textureReference %161, i32 %160)
  %164 = call %struct.float4 @_ZL10tex1DfetchI6float4EN17__nv_tex_rmet_retIT_E4typeE7textureIS2_Li1EL19cudaTextureReadMode0EEi(%struct.textureReference %161, i32 noundef %160) #7
  %165 = getelementptr inbounds %struct.HIP_vector_type, ptr %7, i32 0, i32 0
  %166 = extractvalue %struct.HIP_vector_type %163, 0
  store %struct.HIP_vector_base %166, ptr %165, align 16
  %167 = getelementptr inbounds %struct.float4, ptr %38, i32 0, i32 0
  %168 = extractvalue %struct.HIP_vector_type %163, 0
  store float %168, ptr %165, align 16
  %169 = getelementptr inbounds %struct.float4, ptr %38, i32 0, i32 1
  %170 = extractvalue %struct.HIP_vector_type %163, 1
  store float %170, ptr %169, align 4
  %171 = getelementptr inbounds %struct.float4, ptr %38, i32 0, i32 2
  %172 = extractvalue %struct.HIP_vector_type %163, 2
  store float %172, ptr %171, align 8
  %173 = getelementptr inbounds %struct.float4, ptr %38, i32 0, i32 3
  %174 = extractvalue %struct.HIP_vector_type %163, 3
  store float %174, ptr %173, align 4
  %175 = load ptr, ptr %33, align 8
  %176 = load i32, ptr %35, align 4
  %177 = sext i32 %176 to i64
  %178 = getelementptr inbounds %struct.HIP_vector_type, ptr %175, i64 %177
  %179 = call dereferenceable(16) ptr @_ZN15HIP_vector_typeIfLj4EEaSERKS0_(ptr dereferenceable(16) %178, ptr dereferenceable(16) %7)
  %180 = getelementptr inbounds %struct.float4, ptr %175, i64 %177
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %178, ptr align 16 %38, i64 16, i1 false)
  br label %181

181:                                              ; preds = %155
  %182 = load i32, ptr %35, align 4
  %183 = add nsw i32 %182, 1
  store i32 %183, ptr %35, align 4
  br label %145, !llvm.loop !12

184:                                              ; preds = %145
  br label %358

185:                                              ; preds = %136
  store i32 0, ptr %43, align 4
  store i32 0, ptr %45, align 4
  store i32 0, ptr %47, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr %9, ptr addrspacecast (ptr addrspace(1) @tex to ptr), i64 88, i1 false)
  %186 = getelementptr inbounds %struct.textureReference, ptr %9, i32 0, i32 0
  %187 = call i64 @llvm.nvvm.texsurf.handle.internal.p1(ptr addrspace(1) @tex)
  store i64 %187, ptr %57, align 4
  %188 = load i32, ptr %29, align 4
  %189 = load i32, ptr %43, align 4
  %190 = add nsw i32 %188, %189
  %191 = load %struct.textureReference, ptr %186, align 8
  %192 = load i64, ptr %57, align 4
  %193 = call %struct.HIP_vector_type @_ZL10tex1DfetchI15HIP_vector_typeIfLj4EEL18hipTextureReadMode0EEN13__hip_tex_retIT_XT0_EbE4typeE7textureIS4_Li1EXT0_EEi(%struct.textureReference %191, i32 %190)
  %194 = call %struct.float4 @_ZL10tex1DfetchI6float4EN17__nv_tex_rmet_retIT_E4typeE7textureIS2_Li1EL19cudaTextureReadMode0EEi(%struct.textureReference %191, i32 noundef %190) #7
  %195 = getelementptr inbounds %struct.HIP_vector_type, ptr %11, i32 0, i32 0
  %196 = extractvalue %struct.HIP_vector_type %193, 0
  store %struct.HIP_vector_base %196, ptr %195, align 16
  %197 = getelementptr inbounds %struct.float4, ptr %54, i32 0, i32 0
  %198 = extractvalue %struct.HIP_vector_type %193, 0
  store float %198, ptr %195, align 16
  %199 = getelementptr inbounds %struct.float4, ptr %54, i32 0, i32 1
  %200 = extractvalue %struct.HIP_vector_type %193, 1
  store float %200, ptr %199, align 4
  %201 = getelementptr inbounds %struct.float4, ptr %54, i32 0, i32 2
  %202 = extractvalue %struct.HIP_vector_type %193, 2
  store float %202, ptr %201, align 8
  %203 = getelementptr inbounds %struct.float4, ptr %54, i32 0, i32 3
  %204 = extractvalue %struct.HIP_vector_type %193, 3
  store float %204, ptr %203, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %49, ptr align 16 %54, i64 16, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr %13, ptr addrspacecast (ptr addrspace(1) @tex to ptr), i64 88, i1 false)
  %205 = getelementptr inbounds %struct.textureReference, ptr %13, i32 0, i32 0
  %206 = call i64 @llvm.nvvm.texsurf.handle.internal.p1(ptr addrspace(1) @tex)
  store i64 %206, ptr %61, align 4
  %207 = load i32, ptr %31, align 4
  %208 = load i32, ptr %45, align 4
  %209 = add nsw i32 %207, %208
  %210 = load %struct.textureReference, ptr %205, align 8
  %211 = load i64, ptr %61, align 4
  %212 = call %struct.HIP_vector_type @_ZL10tex1DfetchI15HIP_vector_typeIfLj4EEL18hipTextureReadMode0EEN13__hip_tex_retIT_XT0_EbE4typeE7textureIS4_Li1EXT0_EEi(%struct.textureReference %210, i32 %209)
  %213 = call %struct.float4 @_ZL10tex1DfetchI6float4EN17__nv_tex_rmet_retIT_E4typeE7textureIS2_Li1EL19cudaTextureReadMode0EEi(%struct.textureReference %210, i32 noundef %209) #7
  %214 = getelementptr inbounds %struct.HIP_vector_type, ptr %15, i32 0, i32 0
  %215 = extractvalue %struct.HIP_vector_type %212, 0
  store %struct.HIP_vector_base %215, ptr %214, align 16
  %216 = getelementptr inbounds %struct.float4, ptr %59, i32 0, i32 0
  %217 = extractvalue %struct.HIP_vector_type %212, 0
  store float %217, ptr %214, align 16
  %218 = getelementptr inbounds %struct.float4, ptr %59, i32 0, i32 1
  %219 = extractvalue %struct.HIP_vector_type %212, 1
  store float %219, ptr %218, align 4
  %220 = getelementptr inbounds %struct.float4, ptr %59, i32 0, i32 2
  %221 = extractvalue %struct.HIP_vector_type %212, 2
  store float %221, ptr %220, align 8
  %222 = getelementptr inbounds %struct.float4, ptr %59, i32 0, i32 3
  %223 = extractvalue %struct.HIP_vector_type %212, 3
  store float %223, ptr %222, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %51, ptr align 16 %59, i64 16, i1 false)
  br label %224

224:                                              ; preds = %185, %351
  %225 = call i64 @llvm.nvvm.texsurf.handle.internal.p1(ptr addrspace(1) @tex)
  store i64 %225, ptr %65, align 4
  %226 = load i32, ptr %29, align 4
  %227 = load i32, ptr %43, align 4
  %228 = add nsw i32 %226, %227
  %229 = add nsw i32 %228, 1
  %230 = load i64, ptr %65, align 4
  %231 = call %struct.float4 @_ZL10tex1DfetchI6float4EN17__nv_tex_rmet_retIT_E4typeE7textureIS2_Li1EL19cudaTextureReadMode0EEi(i64 %230, i32 noundef %229) #7
  %232 = getelementptr inbounds %struct.float4, ptr %63, i32 0, i32 0
  %233 = extractvalue %struct.float4 %231, 0
  store float %233, ptr %232, align 16
  %234 = getelementptr inbounds %struct.float4, ptr %63, i32 0, i32 1
  %235 = extractvalue %struct.float4 %231, 1
  store float %235, ptr %234, align 4
  %236 = getelementptr inbounds %struct.float4, ptr %63, i32 0, i32 2
  %237 = extractvalue %struct.float4 %231, 2
  store float %237, ptr %236, align 8
  %238 = getelementptr inbounds %struct.float4, ptr %63, i32 0, i32 3
  %239 = extractvalue %struct.float4 %231, 3
  store float %239, ptr %238, align 4
  %240 = call i64 @llvm.nvvm.texsurf.handle.internal.p1(ptr addrspace(1) @tex)
  store i64 %240, ptr %69, align 4
  %241 = load i32, ptr %31, align 4
  %242 = load i32, ptr %45, align 4
  %243 = add nsw i32 %241, %242
  %244 = add nsw i32 %243, 1
  %245 = load i64, ptr %69, align 4
  %246 = call %struct.float4 @_ZL10tex1DfetchI6float4EN17__nv_tex_rmet_retIT_E4typeE7textureIS2_Li1EL19cudaTextureReadMode0EEi(i64 %245, i32 noundef %244) #7
  %247 = getelementptr inbounds %struct.float4, ptr %67, i32 0, i32 0
  %248 = extractvalue %struct.float4 %246, 0
  store float %248, ptr %247, align 16
  %249 = getelementptr inbounds %struct.float4, ptr %67, i32 0, i32 1
  %250 = extractvalue %struct.float4 %246, 1
  store float %250, ptr %249, align 4
  %251 = getelementptr inbounds %struct.float4, ptr %67, i32 0, i32 2
  %252 = extractvalue %struct.float4 %246, 2
  store float %252, ptr %251, align 8
  %253 = getelementptr inbounds %struct.float4, ptr %67, i32 0, i32 3
  %254 = extractvalue %struct.float4 %246, 3
  store float %254, ptr %253, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %73, ptr align 16 %49, i64 16, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %75, ptr align 16 %51, i64 16, i1 false)
  %255 = call %struct.float4 @_Z9getLowest6float4S_(ptr noundef byval(%struct.float4) align 16 %73, ptr noundef byval(%struct.float4) align 16 %75) #7
  %256 = getelementptr inbounds %struct.float4, ptr %71, i32 0, i32 0
  %257 = extractvalue %struct.float4 %255, 0
  store float %257, ptr %256, align 16
  %258 = getelementptr inbounds %struct.float4, ptr %71, i32 0, i32 1
  %259 = extractvalue %struct.float4 %255, 1
  store float %259, ptr %258, align 4
  %260 = getelementptr inbounds %struct.float4, ptr %71, i32 0, i32 2
  %261 = extractvalue %struct.float4 %255, 2
  store float %261, ptr %260, align 8
  %262 = getelementptr inbounds %struct.float4, ptr %71, i32 0, i32 3
  %263 = extractvalue %struct.float4 %255, 3
  store float %263, ptr %262, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %79, ptr align 16 %49, i64 16, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %81, ptr align 16 %51, i64 16, i1 false)
  %264 = call %struct.float4 @_Z10getHighest6float4S_(ptr noundef byval(%struct.float4) align 16 %79, ptr noundef byval(%struct.float4) align 16 %81) #7
  %265 = getelementptr inbounds %struct.float4, ptr %77, i32 0, i32 0
  %266 = extractvalue %struct.float4 %264, 0
  store float %266, ptr %265, align 16
  %267 = getelementptr inbounds %struct.float4, ptr %77, i32 0, i32 1
  %268 = extractvalue %struct.float4 %264, 1
  store float %268, ptr %267, align 4
  %269 = getelementptr inbounds %struct.float4, ptr %77, i32 0, i32 2
  %270 = extractvalue %struct.float4 %264, 2
  store float %270, ptr %269, align 8
  %271 = getelementptr inbounds %struct.float4, ptr %77, i32 0, i32 3
  %272 = extractvalue %struct.float4 %264, 3
  store float %272, ptr %271, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %85, ptr align 16 %71, i64 16, i1 false)
  %273 = call %struct.float4 @_Z8sortElem6float4(ptr noundef byval(%struct.float4) align 16 %85) #7
  %274 = getelementptr inbounds %struct.float4, ptr %83, i32 0, i32 0
  %275 = extractvalue %struct.float4 %273, 0
  store float %275, ptr %274, align 16
  %276 = getelementptr inbounds %struct.float4, ptr %83, i32 0, i32 1
  %277 = extractvalue %struct.float4 %273, 1
  store float %277, ptr %276, align 4
  %278 = getelementptr inbounds %struct.float4, ptr %83, i32 0, i32 2
  %279 = extractvalue %struct.float4 %273, 2
  store float %279, ptr %278, align 8
  %280 = getelementptr inbounds %struct.float4, ptr %83, i32 0, i32 3
  %281 = extractvalue %struct.float4 %273, 3
  store float %281, ptr %280, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %49, ptr align 16 %83, i64 16, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %89, ptr align 16 %77, i64 16, i1 false)
  %282 = call %struct.float4 @_Z8sortElem6float4(ptr noundef byval(%struct.float4) align 16 %89) #7
  %283 = getelementptr inbounds %struct.float4, ptr %87, i32 0, i32 0
  %284 = extractvalue %struct.float4 %282, 0
  store float %284, ptr %283, align 16
  %285 = getelementptr inbounds %struct.float4, ptr %87, i32 0, i32 1
  %286 = extractvalue %struct.float4 %282, 1
  store float %286, ptr %285, align 4
  %287 = getelementptr inbounds %struct.float4, ptr %87, i32 0, i32 2
  %288 = extractvalue %struct.float4 %282, 2
  store float %288, ptr %287, align 8
  %289 = getelementptr inbounds %struct.float4, ptr %87, i32 0, i32 3
  %290 = extractvalue %struct.float4 %282, 3
  store float %290, ptr %289, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %51, ptr align 16 %87, i64 16, i1 false)
  %291 = load ptr, ptr %33, align 8
  %292 = load i32, ptr %47, align 4
  %293 = add nsw i32 %292, 1
  store i32 %293, ptr %47, align 4
  %294 = sext i32 %292 to i64
  %295 = getelementptr inbounds %struct.float4, ptr %291, i64 %294
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %295, ptr align 16 %49, i64 16, i1 false)
  %296 = load i32, ptr %43, align 4
  %297 = add nsw i32 %296, 1
  %298 = load i32, ptr %19, align 4
  %299 = sdiv i32 %298, 2
  %300 = icmp slt i32 %297, %299
  %301 = zext i1 %300 to i8
  store i8 %301, ptr %91, align 1
  %302 = load i32, ptr %45, align 4
  %303 = add nsw i32 %302, 1
  %304 = load i32, ptr %19, align 4
  %305 = sdiv i32 %304, 2
  %306 = icmp slt i32 %303, %305
  br i1 %306, label %307, label %318

307:                                              ; preds = %224
  %308 = load i32, ptr %31, align 4
  %309 = load i32, ptr %45, align 4
  %310 = add nsw i32 %308, %309
  %311 = add nsw i32 %310, 1
  %312 = load i32, ptr %25, align 4
  %313 = add nsw i32 %312, 1
  %314 = sext i32 %313 to i64
  %315 = getelementptr inbounds [1025 x i32], ptr addrspacecast (ptr addrspace(4) @constStartAddr to ptr), i64 0, i64 %314
  %316 = load i32, ptr %315, align 4
  %317 = icmp slt i32 %311, %316
  br label %318

318:                                              ; preds = %307, %224
  %319 = phi i1 [ false, %224 ], [ %317, %307 ]
  %320 = zext i1 %319 to i8
  store i8 %320, ptr %93, align 1
  %321 = load i8, ptr %91, align 1
  %322 = trunc i8 %321 to i1
  br i1 %322, label %323, label %343

323:                                              ; preds = %318
  %324 = load i8, ptr %93, align 1
  %325 = trunc i8 %324 to i1
  br i1 %325, label %326, label %339

326:                                              ; preds = %323
  %327 = getelementptr inbounds %struct.float4, ptr %63, i32 0, i32 0
  %328 = load float, ptr %327, align 16
  %329 = getelementptr inbounds %struct.float4, ptr %67, i32 0, i32 0
  %330 = load float, ptr %329, align 16
  %331 = fcmp contract olt float %328, %330
  br i1 %331, label %332, label %335

332:                                              ; preds = %326
  %333 = load i32, ptr %43, align 4
  %334 = add nsw i32 %333, 1
  store i32 %334, ptr %43, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %49, ptr align 16 %63, i64 16, i1 false)
  br label %338

335:                                              ; preds = %326
  %336 = load i32, ptr %45, align 4
  %337 = add nsw i32 %336, 1
  store i32 %337, ptr %45, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %49, ptr align 16 %67, i64 16, i1 false)
  br label %338

338:                                              ; preds = %335, %332
  br label %342

339:                                              ; preds = %323
  %340 = load i32, ptr %43, align 4
  %341 = add nsw i32 %340, 1
  store i32 %341, ptr %43, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %49, ptr align 16 %63, i64 16, i1 false)
  br label %342

342:                                              ; preds = %339, %338
  br label %351

343:                                              ; preds = %318
  %344 = load i8, ptr %93, align 1
  %345 = trunc i8 %344 to i1
  br i1 %345, label %346, label %349

346:                                              ; preds = %343
  %347 = load i32, ptr %45, align 4
  %348 = add nsw i32 %347, 1
  store i32 %348, ptr %45, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %49, ptr align 16 %67, i64 16, i1 false)
  br label %350

349:                                              ; preds = %343
  br label %352

350:                                              ; preds = %346
  br label %351

351:                                              ; preds = %350, %342
  br label %224, !llvm.loop !14

352:                                              ; preds = %349
  %353 = load ptr, ptr %33, align 8
  %354 = load i32, ptr %47, align 4
  %355 = add nsw i32 %354, 1
  store i32 %355, ptr %47, align 4
  %356 = sext i32 %354 to i64
  %357 = getelementptr inbounds %struct.float4, ptr %353, i64 %356
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %357, ptr align 16 %51, i64 16, i1 false)
  br label %358

358:                                              ; preds = %352, %184, %135, %105
  ret void
}

 finish two 
  %214 = getelementptr inbounds %struct.HIP_vector_type, ptr %15, i32 0, i32 0 I 
 getelementptr here 
 abc 
  %214 = getelementptr inbounds %struct.HIP_vector_type, ptr %15, i32 0, i32 0
 abc 
 out ptr 
  %215 = extractvalue %struct.HIP_vector_type %212, 0 I 
  store %struct.HIP_vector_base %215, ptr %214, align 16 I 
  %216 = getelementptr inbounds %struct.float4, ptr %59, i32 0, i32 0 I 
 getelementptr here 
  %217 = extractvalue %struct.HIP_vector_type %212, 0 I 
  store float %217, ptr %214, align 16 I 
  %218 = getelementptr inbounds %struct.float4, ptr %59, i32 0, i32 1 I 
 getelementptr here 
  %219 = extractvalue %struct.HIP_vector_type %212, 1 I 
  store float %219, ptr %218, align 4 I 
  %220 = getelementptr inbounds %struct.float4, ptr %59, i32 0, i32 2 I 
 getelementptr here 
  %221 = extractvalue %struct.HIP_vector_type %212, 2 I 
  store float %221, ptr %220, align 8 I 
  %222 = getelementptr inbounds %struct.float4, ptr %59, i32 0, i32 3 I 
 getelementptr here 
  %223 = extractvalue %struct.HIP_vector_type %212, 3 I 
  store float %223, ptr %222, align 4 I 
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %51, ptr align 16 %59, i64 16, i1 false) I 
heree
llvm.memcpy.p0.p0.i64
 999 
 there 12 
  br label %226 I 
  %227 = call i64 @llvm.nvvm.texsurf.handle.internal.p1(ptr addrspace(1) @tex) I 
heree
llvm.nvvm.texsurf.handle.internal.p1
 1 
@tex = addrspace(1) externally_initialized global %struct.texture undef
 foound 
  store i64 %230, ptr %69, align 4 I 
  %231 = load i32, ptr %31, align 4 I 
  %232 = load i32, ptr %45, align 4 I 
  %233 = add nsw i32 %231, %232 I 
  %234 = add nsw i32 %233, 1 I 
  %235 = load i64, ptr %69, align 4 I 
  %236 = call %struct.float4 @_ZL10tex1DfetchI6float4EN17__nv_tex_rmet_retIT_E4typeE7textureIS2_Li1EL19cudaTextureReadMode0EEi(i64 %235, i32 noundef %234) #7 I 
heree
_ZL10tex1DfetchI6float4EN17__nv_tex_rmet_retIT_E4typeE7textureIS2_Li1EL19cudaTextureReadMode0EEi
 fetch here 
  %236 = call %struct.float4 @_ZL10tex1DfetchI6float4EN17__nv_tex_rmet_retIT_E4typeE7textureIS2_Li1EL19cudaTextureReadMode0EEi(i64 %235, i32 noundef %234) #7
%struct.float4 = type { float, float, float, float }
  %235 = load %struct.textureReference, ptr %229, align 8 
0x1904580
  %243 = extractvalue %struct.HIP_vector_type %239, 0
  %243 = getelementptr inbounds %struct.float4, ptr %69, i32 0, i32 0 need remove 
  %244 = extractvalue %struct.HIP_vector_type %239, 0 need remove 
  store float %244, ptr %241, align 16 need remove 
  %245 = getelementptr inbounds %struct.float4, ptr %69, i32 0, i32 1 need remove 
  %246 = extractvalue %struct.HIP_vector_type %239, 1 need remove 
  store float %246, ptr %245, align 4 need remove 
  %247 = getelementptr inbounds %struct.float4, ptr %69, i32 0, i32 2 need remove 
  %248 = extractvalue %struct.HIP_vector_type %239, 2 need remove 
  store float %248, ptr %247, align 8 need remove 
  %249 = getelementptr inbounds %struct.float4, ptr %69, i32 0, i32 3 need remove 
  %250 = extractvalue %struct.HIP_vector_type %239, 3 need remove 
  store float %250, ptr %249, align 4 need remove 
; Function Attrs: convergent mustprogress noinline norecurse nounwind optnone
define amdgpu_kernel void @_Z13mergeSortPassP6float4ii(ptr addrspace(1) noundef %0, i32 noundef %1, i32 noundef %2) #1 {
  %4 = alloca %struct.texture, align 8, addrspace(5)
  %5 = addrspacecast ptr addrspace(5) %4 to ptr
  %6 = alloca %struct.HIP_vector_type, align 16, addrspace(5)
  %7 = addrspacecast ptr addrspace(5) %6 to ptr
  %8 = alloca %struct.texture, align 8, addrspace(5)
  %9 = addrspacecast ptr addrspace(5) %8 to ptr
  %10 = alloca %struct.HIP_vector_type, align 16, addrspace(5)
  %11 = addrspacecast ptr addrspace(5) %10 to ptr
  %12 = alloca %struct.texture, align 8, addrspace(5)
  %13 = addrspacecast ptr addrspace(5) %12 to ptr
  %14 = alloca %struct.HIP_vector_type, align 16, addrspace(5)
  %15 = addrspacecast ptr addrspace(5) %14 to ptr
  %16 = alloca %struct.texture, align 8, addrspace(5)
  %17 = addrspacecast ptr addrspace(5) %16 to ptr
  %18 = alloca %struct.HIP_vector_type, align 16, addrspace(5)
  %19 = addrspacecast ptr addrspace(5) %18 to ptr
  %20 = alloca ptr, align 8, addrspace(5)
  %21 = addrspacecast ptr addrspace(5) %20 to ptr
  %22 = alloca i32, align 4, addrspace(5)
  %23 = addrspacecast ptr addrspace(5) %22 to ptr
  %24 = alloca i32, align 4, addrspace(5)
  %25 = addrspacecast ptr addrspace(5) %24 to ptr
  %26 = alloca i32, align 4, addrspace(5)
  %27 = addrspacecast ptr addrspace(5) %26 to ptr
  %28 = alloca i32, align 4, addrspace(5)
  %29 = addrspacecast ptr addrspace(5) %28 to ptr
  %30 = alloca i32, align 4, addrspace(5)
  %31 = addrspacecast ptr addrspace(5) %30 to ptr
  %32 = alloca i32, align 4, addrspace(5)
  %33 = addrspacecast ptr addrspace(5) %32 to ptr
  %34 = alloca i32, align 4, addrspace(5)
  %35 = addrspacecast ptr addrspace(5) %34 to ptr
  %36 = alloca ptr, align 8, addrspace(5)
  %37 = addrspacecast ptr addrspace(5) %36 to ptr
  %38 = alloca i32, align 4, addrspace(5)
  %39 = addrspacecast ptr addrspace(5) %38 to ptr
  %40 = alloca %struct.float4, align 16, addrspace(5)
  %41 = alloca %struct.HIP_vector_type, align 16, addrspace(5)
  %42 = addrspacecast ptr addrspace(5) %41 to ptr
  %43 = addrspacecast ptr addrspace(5) %40 to ptr
  %44 = alloca i64, align 4, addrspace(5)
  %45 = addrspacecast ptr addrspace(5) %44 to ptr
  %46 = alloca i32, align 4, addrspace(5)
  %47 = addrspacecast ptr addrspace(5) %46 to ptr
  %48 = alloca i32, align 4, addrspace(5)
  %49 = addrspacecast ptr addrspace(5) %48 to ptr
  %50 = alloca i32, align 4, addrspace(5)
  %51 = addrspacecast ptr addrspace(5) %50 to ptr
  %52 = alloca %struct.float4, align 16, addrspace(5)
  %53 = addrspacecast ptr addrspace(5) %52 to ptr
  %54 = alloca %struct.float4, align 16, addrspace(5)
  %55 = addrspacecast ptr addrspace(5) %54 to ptr
  %56 = alloca %struct.float4, align 16, addrspace(5)
  %57 = alloca %struct.HIP_vector_type, align 16, addrspace(5)
  %58 = addrspacecast ptr addrspace(5) %57 to ptr
  %59 = addrspacecast ptr addrspace(5) %56 to ptr
  %60 = alloca i64, align 4, addrspace(5)
  %61 = addrspacecast ptr addrspace(5) %60 to ptr
  %62 = alloca %struct.float4, align 16, addrspace(5)
  %63 = alloca %struct.HIP_vector_type, align 16, addrspace(5)
  %64 = addrspacecast ptr addrspace(5) %63 to ptr
  %65 = addrspacecast ptr addrspace(5) %62 to ptr
  %66 = alloca i64, align 4, addrspace(5)
  %67 = addrspacecast ptr addrspace(5) %66 to ptr
  %68 = alloca %struct.float4, align 16, addrspace(5)
  %69 = addrspacecast ptr addrspace(5) %68 to ptr
  %70 = alloca i64, align 4, addrspace(5)
  %71 = addrspacecast ptr addrspace(5) %70 to ptr
  %72 = alloca %struct.float4, align 16, addrspace(5)
  %73 = addrspacecast ptr addrspace(5) %72 to ptr
  %74 = alloca i64, align 4, addrspace(5)
  %75 = addrspacecast ptr addrspace(5) %74 to ptr
  %76 = alloca %struct.float4, align 16, addrspace(5)
  %77 = addrspacecast ptr addrspace(5) %76 to ptr
  %78 = alloca %struct.float4, align 16, addrspace(5)
  %79 = addrspacecast ptr addrspace(5) %78 to ptr
  %80 = alloca %struct.float4, align 16, addrspace(5)
  %81 = addrspacecast ptr addrspace(5) %80 to ptr
  %82 = alloca %struct.float4, align 16, addrspace(5)
  %83 = addrspacecast ptr addrspace(5) %82 to ptr
  %84 = alloca %struct.float4, align 16, addrspace(5)
  %85 = addrspacecast ptr addrspace(5) %84 to ptr
  %86 = alloca %struct.float4, align 16, addrspace(5)
  %87 = addrspacecast ptr addrspace(5) %86 to ptr
  %88 = alloca %struct.float4, align 16, addrspace(5)
  %89 = addrspacecast ptr addrspace(5) %88 to ptr
  %90 = alloca %struct.float4, align 16, addrspace(5)
  %91 = addrspacecast ptr addrspace(5) %90 to ptr
  %92 = alloca %struct.float4, align 16, addrspace(5)
  %93 = addrspacecast ptr addrspace(5) %92 to ptr
  %94 = alloca %struct.float4, align 16, addrspace(5)
  %95 = addrspacecast ptr addrspace(5) %94 to ptr
  %96 = alloca i8, align 1, addrspace(5)
  %97 = addrspacecast ptr addrspace(5) %96 to ptr
  %98 = alloca i8, align 1, addrspace(5)
  %99 = addrspacecast ptr addrspace(5) %98 to ptr
  %100 = addrspacecast ptr addrspace(1) %0 to ptr
  store ptr %100, ptr %21, align 8
  store i32 %1, ptr %23, align 4
  store i32 %2, ptr %25, align 4
  %101 = call noundef i32 @_ZN25__cuda_builtin_blockIdx_t17__fetch_builtin_xEv() #7
  %102 = call noundef i32 @_ZN25__cuda_builtin_blockDim_t17__fetch_builtin_xEv() #7
  %103 = mul i32 %101, %102
  %104 = call noundef i32 @_ZN26__cuda_builtin_threadIdx_t17__fetch_builtin_xEv() #7
  %105 = add i32 %103, %104
  store i32 %105, ptr %27, align 4
  %106 = load i32, ptr %27, align 4
  %107 = load i32, ptr %25, align 4
  %108 = sdiv i32 %106, %107
  store i32 %108, ptr %29, align 4
  %109 = load i32, ptr %29, align 4
  %110 = icmp sge i32 %109, 1024
  br i1 %110, label %111, label %112

111:                                              ; preds = %3
  br label %369

112:                                              ; preds = %3
  %113 = load i32, ptr %27, align 4
  %114 = load i32, ptr %29, align 4
  %115 = load i32, ptr %25, align 4
  %116 = mul nsw i32 %114, %115
  %117 = sub nsw i32 %113, %116
  store i32 %117, ptr %31, align 4
  %118 = load i32, ptr %29, align 4
  %119 = sext i32 %118 to i64
  %120 = getelementptr inbounds [1025 x i32], ptr addrspacecast (ptr addrspace(4) @constStartAddr to ptr), i64 0, i64 %119
  %121 = load i32, ptr %120, align 4
  %122 = load i32, ptr %31, align 4
  %123 = load i32, ptr %23, align 4
  %124 = mul nsw i32 %122, %123
  %125 = add nsw i32 %121, %124
  store i32 %125, ptr %33, align 4
  %126 = load i32, ptr %33, align 4
  %127 = load i32, ptr %23, align 4
  %128 = sdiv i32 %127, 2
  %129 = add nsw i32 %126, %128
  store i32 %129, ptr %35, align 4
  %130 = load ptr, ptr %21, align 8
  %131 = load i32, ptr %33, align 4
  %132 = sext i32 %131 to i64
  %133 = getelementptr inbounds %struct.float4, ptr %130, i64 %132
  store ptr %133, ptr %37, align 8
  %134 = load i32, ptr %33, align 4
  %135 = load i32, ptr %29, align 4
  %136 = add nsw i32 %135, 1
  %137 = sext i32 %136 to i64
  %138 = getelementptr inbounds [1025 x i32], ptr addrspacecast (ptr addrspace(4) @constStartAddr to ptr), i64 0, i64 %137
  %139 = load i32, ptr %138, align 4
  %140 = icmp sge i32 %134, %139
  br i1 %140, label %141, label %142

141:                                              ; preds = %112
  br label %369

142:                                              ; preds = %112
  %143 = load i32, ptr %35, align 4
  %144 = load i32, ptr %29, align 4
  %145 = add nsw i32 %144, 1
  %146 = sext i32 %145 to i64
  %147 = getelementptr inbounds [1025 x i32], ptr addrspacecast (ptr addrspace(4) @constStartAddr to ptr), i64 0, i64 %146
  %148 = load i32, ptr %147, align 4
  %149 = icmp sge i32 %143, %148
  br i1 %149, label %150, label %191

150:                                              ; preds = %142
  store i32 0, ptr %39, align 4
  br label %151

151:                                              ; preds = %187, %150
  %152 = load i32, ptr %39, align 4
  %153 = load i32, ptr %29, align 4
  %154 = add nsw i32 %153, 1
  %155 = sext i32 %154 to i64
  %156 = getelementptr inbounds [1025 x i32], ptr addrspacecast (ptr addrspace(4) @constStartAddr to ptr), i64 0, i64 %155
  %157 = load i32, ptr %156, align 4
  %158 = load i32, ptr %33, align 4
  %159 = sub nsw i32 %157, %158
  %160 = icmp slt i32 %152, %159
  br i1 %160, label %161, label %190

161:                                              ; preds = %151
  call void @llvm.memcpy.p0.p0.i64(ptr %5, ptr addrspacecast (ptr addrspace(1) @tex to ptr), i64 88, i1 false)
  %162 = getelementptr inbounds %struct.textureReference, ptr %5, i32 0, i32 0
  %163 = call i64 @llvm.nvvm.texsurf.handle.internal.p1(ptr addrspace(1) @tex)
  store i64 %163, ptr %45, align 4
  %164 = load i32, ptr %33, align 4
  %165 = load i32, ptr %39, align 4
  %166 = add nsw i32 %164, %165
  %167 = load %struct.textureReference, ptr %162, align 8
  %168 = load i64, ptr %45, align 4
  %169 = call %struct.HIP_vector_type @_ZL10tex1DfetchI15HIP_vector_typeIfLj4EEL18hipTextureReadMode0EEN13__hip_tex_retIT_XT0_EbE4typeE7textureIS4_Li1EXT0_EEi(%struct.textureReference %167, i32 %166)
  %170 = call %struct.float4 @_ZL10tex1DfetchI6float4EN17__nv_tex_rmet_retIT_E4typeE7textureIS2_Li1EL19cudaTextureReadMode0EEi(%struct.textureReference %167, i32 noundef %166) #7
  %171 = getelementptr inbounds %struct.HIP_vector_type, ptr %7, i32 0, i32 0
  %172 = extractvalue %struct.HIP_vector_type %169, 0
  store %struct.HIP_vector_base %172, ptr %171, align 16
  %173 = getelementptr inbounds %struct.float4, ptr %42, i32 0, i32 0
  %174 = extractvalue %struct.HIP_vector_type %169, 0
  store float %174, ptr %171, align 16
  %175 = getelementptr inbounds %struct.float4, ptr %42, i32 0, i32 1
  %176 = extractvalue %struct.HIP_vector_type %169, 1
  store float %176, ptr %175, align 4
  %177 = getelementptr inbounds %struct.float4, ptr %42, i32 0, i32 2
  %178 = extractvalue %struct.HIP_vector_type %169, 2
  store float %178, ptr %177, align 8
  %179 = getelementptr inbounds %struct.float4, ptr %42, i32 0, i32 3
  %180 = extractvalue %struct.HIP_vector_type %169, 3
  store float %180, ptr %179, align 4
  %181 = load ptr, ptr %37, align 8
  %182 = load i32, ptr %39, align 4
  %183 = sext i32 %182 to i64
  %184 = getelementptr inbounds %struct.HIP_vector_type, ptr %181, i64 %183
  %185 = call dereferenceable(16) ptr @_ZN15HIP_vector_typeIfLj4EEaSERKS0_(ptr dereferenceable(16) %184, ptr dereferenceable(16) %7)
  %186 = getelementptr inbounds %struct.float4, ptr %181, i64 %183
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %184, ptr align 16 %42, i64 16, i1 false)
  br label %187

187:                                              ; preds = %161
  %188 = load i32, ptr %39, align 4
  %189 = add nsw i32 %188, 1
  store i32 %189, ptr %39, align 4
  br label %151, !llvm.loop !12

190:                                              ; preds = %151
  br label %369

191:                                              ; preds = %142
  store i32 0, ptr %47, align 4
  store i32 0, ptr %49, align 4
  store i32 0, ptr %51, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr %9, ptr addrspacecast (ptr addrspace(1) @tex to ptr), i64 88, i1 false)
  %192 = getelementptr inbounds %struct.textureReference, ptr %9, i32 0, i32 0
  %193 = call i64 @llvm.nvvm.texsurf.handle.internal.p1(ptr addrspace(1) @tex)
  store i64 %193, ptr %61, align 4
  %194 = load i32, ptr %33, align 4
  %195 = load i32, ptr %47, align 4
  %196 = add nsw i32 %194, %195
  %197 = load %struct.textureReference, ptr %192, align 8
  %198 = load i64, ptr %61, align 4
  %199 = call %struct.HIP_vector_type @_ZL10tex1DfetchI15HIP_vector_typeIfLj4EEL18hipTextureReadMode0EEN13__hip_tex_retIT_XT0_EbE4typeE7textureIS4_Li1EXT0_EEi(%struct.textureReference %197, i32 %196)
  %200 = call %struct.float4 @_ZL10tex1DfetchI6float4EN17__nv_tex_rmet_retIT_E4typeE7textureIS2_Li1EL19cudaTextureReadMode0EEi(%struct.textureReference %197, i32 noundef %196) #7
  %201 = getelementptr inbounds %struct.HIP_vector_type, ptr %11, i32 0, i32 0
  %202 = extractvalue %struct.HIP_vector_type %199, 0
  store %struct.HIP_vector_base %202, ptr %201, align 16
  %203 = getelementptr inbounds %struct.float4, ptr %58, i32 0, i32 0
  %204 = extractvalue %struct.HIP_vector_type %199, 0
  store float %204, ptr %201, align 16
  %205 = getelementptr inbounds %struct.float4, ptr %58, i32 0, i32 1
  %206 = extractvalue %struct.HIP_vector_type %199, 1
  store float %206, ptr %205, align 4
  %207 = getelementptr inbounds %struct.float4, ptr %58, i32 0, i32 2
  %208 = extractvalue %struct.HIP_vector_type %199, 2
  store float %208, ptr %207, align 8
  %209 = getelementptr inbounds %struct.float4, ptr %58, i32 0, i32 3
  %210 = extractvalue %struct.HIP_vector_type %199, 3
  store float %210, ptr %209, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %53, ptr align 16 %58, i64 16, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr %13, ptr addrspacecast (ptr addrspace(1) @tex to ptr), i64 88, i1 false)
  %211 = getelementptr inbounds %struct.textureReference, ptr %13, i32 0, i32 0
  %212 = call i64 @llvm.nvvm.texsurf.handle.internal.p1(ptr addrspace(1) @tex)
  store i64 %212, ptr %67, align 4
  %213 = load i32, ptr %35, align 4
  %214 = load i32, ptr %49, align 4
  %215 = add nsw i32 %213, %214
  %216 = load %struct.textureReference, ptr %211, align 8
  %217 = load i64, ptr %67, align 4
  %218 = call %struct.HIP_vector_type @_ZL10tex1DfetchI15HIP_vector_typeIfLj4EEL18hipTextureReadMode0EEN13__hip_tex_retIT_XT0_EbE4typeE7textureIS4_Li1EXT0_EEi(%struct.textureReference %216, i32 %215)
  %219 = call %struct.float4 @_ZL10tex1DfetchI6float4EN17__nv_tex_rmet_retIT_E4typeE7textureIS2_Li1EL19cudaTextureReadMode0EEi(%struct.textureReference %216, i32 noundef %215) #7
  %220 = getelementptr inbounds %struct.HIP_vector_type, ptr %15, i32 0, i32 0
  %221 = extractvalue %struct.HIP_vector_type %218, 0
  store %struct.HIP_vector_base %221, ptr %220, align 16
  %222 = getelementptr inbounds %struct.float4, ptr %64, i32 0, i32 0
  %223 = extractvalue %struct.HIP_vector_type %218, 0
  store float %223, ptr %220, align 16
  %224 = getelementptr inbounds %struct.float4, ptr %64, i32 0, i32 1
  %225 = extractvalue %struct.HIP_vector_type %218, 1
  store float %225, ptr %224, align 4
  %226 = getelementptr inbounds %struct.float4, ptr %64, i32 0, i32 2
  %227 = extractvalue %struct.HIP_vector_type %218, 2
  store float %227, ptr %226, align 8
  %228 = getelementptr inbounds %struct.float4, ptr %64, i32 0, i32 3
  %229 = extractvalue %struct.HIP_vector_type %218, 3
  store float %229, ptr %228, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %55, ptr align 16 %64, i64 16, i1 false)
  br label %230

230:                                              ; preds = %191, %362
  call void @llvm.memcpy.p0.p0.i64(ptr %17, ptr addrspacecast (ptr addrspace(1) @tex to ptr), i64 88, i1 false)
  %231 = getelementptr inbounds %struct.textureReference, ptr %17, i32 0, i32 0
  %232 = call i64 @llvm.nvvm.texsurf.handle.internal.p1(ptr addrspace(1) @tex)
  store i64 %232, ptr %71, align 4
  %233 = load i32, ptr %33, align 4
  %234 = load i32, ptr %47, align 4
  %235 = add nsw i32 %233, %234
  %236 = add nsw i32 %235, 1
  %237 = load %struct.textureReference, ptr %231, align 8
  %238 = load i64, ptr %71, align 4
  %239 = call %struct.HIP_vector_type @_ZL10tex1DfetchI15HIP_vector_typeIfLj4EEL18hipTextureReadMode0EEN13__hip_tex_retIT_XT0_EbE4typeE7textureIS4_Li1EXT0_EEi(%struct.textureReference %237, i32 %236)
  %240 = call %struct.float4 @_ZL10tex1DfetchI6float4EN17__nv_tex_rmet_retIT_E4typeE7textureIS2_Li1EL19cudaTextureReadMode0EEi(%struct.textureReference %237, i32 noundef %236) #7
  %241 = getelementptr inbounds %struct.HIP_vector_type, ptr %19, i32 0, i32 0
  %242 = extractvalue %struct.HIP_vector_type %239, 0
  store %struct.HIP_vector_base %242, ptr %241, align 16
  %243 = getelementptr inbounds %struct.float4, ptr %69, i32 0, i32 0
  %244 = extractvalue %struct.HIP_vector_type %239, 0
  store float %244, ptr %241, align 16
  %245 = getelementptr inbounds %struct.float4, ptr %69, i32 0, i32 1
  %246 = extractvalue %struct.HIP_vector_type %239, 1
  store float %246, ptr %245, align 4
  %247 = getelementptr inbounds %struct.float4, ptr %69, i32 0, i32 2
  %248 = extractvalue %struct.HIP_vector_type %239, 2
  store float %248, ptr %247, align 8
  %249 = getelementptr inbounds %struct.float4, ptr %69, i32 0, i32 3
  %250 = extractvalue %struct.HIP_vector_type %239, 3
  store float %250, ptr %249, align 4
  %251 = call i64 @llvm.nvvm.texsurf.handle.internal.p1(ptr addrspace(1) @tex)
  store i64 %251, ptr %75, align 4
  %252 = load i32, ptr %35, align 4
  %253 = load i32, ptr %49, align 4
  %254 = add nsw i32 %252, %253
  %255 = add nsw i32 %254, 1
  %256 = load i64, ptr %75, align 4
  %257 = call %struct.float4 @_ZL10tex1DfetchI6float4EN17__nv_tex_rmet_retIT_E4typeE7textureIS2_Li1EL19cudaTextureReadMode0EEi(i64 %256, i32 noundef %255) #7
  %258 = getelementptr inbounds %struct.float4, ptr %73, i32 0, i32 0
  %259 = extractvalue %struct.float4 %257, 0
  store float %259, ptr %258, align 16
  %260 = getelementptr inbounds %struct.float4, ptr %73, i32 0, i32 1
  %261 = extractvalue %struct.float4 %257, 1
  store float %261, ptr %260, align 4
  %262 = getelementptr inbounds %struct.float4, ptr %73, i32 0, i32 2
  %263 = extractvalue %struct.float4 %257, 2
  store float %263, ptr %262, align 8
  %264 = getelementptr inbounds %struct.float4, ptr %73, i32 0, i32 3
  %265 = extractvalue %struct.float4 %257, 3
  store float %265, ptr %264, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %79, ptr align 16 %53, i64 16, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %81, ptr align 16 %55, i64 16, i1 false)
  %266 = call %struct.float4 @_Z9getLowest6float4S_(ptr noundef byval(%struct.float4) align 16 %79, ptr noundef byval(%struct.float4) align 16 %81) #7
  %267 = getelementptr inbounds %struct.float4, ptr %77, i32 0, i32 0
  %268 = extractvalue %struct.float4 %266, 0
  store float %268, ptr %267, align 16
  %269 = getelementptr inbounds %struct.float4, ptr %77, i32 0, i32 1
  %270 = extractvalue %struct.float4 %266, 1
  store float %270, ptr %269, align 4
  %271 = getelementptr inbounds %struct.float4, ptr %77, i32 0, i32 2
  %272 = extractvalue %struct.float4 %266, 2
  store float %272, ptr %271, align 8
  %273 = getelementptr inbounds %struct.float4, ptr %77, i32 0, i32 3
  %274 = extractvalue %struct.float4 %266, 3
  store float %274, ptr %273, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %85, ptr align 16 %53, i64 16, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %87, ptr align 16 %55, i64 16, i1 false)
  %275 = call %struct.float4 @_Z10getHighest6float4S_(ptr noundef byval(%struct.float4) align 16 %85, ptr noundef byval(%struct.float4) align 16 %87) #7
  %276 = getelementptr inbounds %struct.float4, ptr %83, i32 0, i32 0
  %277 = extractvalue %struct.float4 %275, 0
  store float %277, ptr %276, align 16
  %278 = getelementptr inbounds %struct.float4, ptr %83, i32 0, i32 1
  %279 = extractvalue %struct.float4 %275, 1
  store float %279, ptr %278, align 4
  %280 = getelementptr inbounds %struct.float4, ptr %83, i32 0, i32 2
  %281 = extractvalue %struct.float4 %275, 2
  store float %281, ptr %280, align 8
  %282 = getelementptr inbounds %struct.float4, ptr %83, i32 0, i32 3
  %283 = extractvalue %struct.float4 %275, 3
  store float %283, ptr %282, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %91, ptr align 16 %77, i64 16, i1 false)
  %284 = call %struct.float4 @_Z8sortElem6float4(ptr noundef byval(%struct.float4) align 16 %91) #7
  %285 = getelementptr inbounds %struct.float4, ptr %89, i32 0, i32 0
  %286 = extractvalue %struct.float4 %284, 0
  store float %286, ptr %285, align 16
  %287 = getelementptr inbounds %struct.float4, ptr %89, i32 0, i32 1
  %288 = extractvalue %struct.float4 %284, 1
  store float %288, ptr %287, align 4
  %289 = getelementptr inbounds %struct.float4, ptr %89, i32 0, i32 2
  %290 = extractvalue %struct.float4 %284, 2
  store float %290, ptr %289, align 8
  %291 = getelementptr inbounds %struct.float4, ptr %89, i32 0, i32 3
  %292 = extractvalue %struct.float4 %284, 3
  store float %292, ptr %291, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %53, ptr align 16 %89, i64 16, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %95, ptr align 16 %83, i64 16, i1 false)
  %293 = call %struct.float4 @_Z8sortElem6float4(ptr noundef byval(%struct.float4) align 16 %95) #7
  %294 = getelementptr inbounds %struct.float4, ptr %93, i32 0, i32 0
  %295 = extractvalue %struct.float4 %293, 0
  store float %295, ptr %294, align 16
  %296 = getelementptr inbounds %struct.float4, ptr %93, i32 0, i32 1
  %297 = extractvalue %struct.float4 %293, 1
  store float %297, ptr %296, align 4
  %298 = getelementptr inbounds %struct.float4, ptr %93, i32 0, i32 2
  %299 = extractvalue %struct.float4 %293, 2
  store float %299, ptr %298, align 8
  %300 = getelementptr inbounds %struct.float4, ptr %93, i32 0, i32 3
  %301 = extractvalue %struct.float4 %293, 3
  store float %301, ptr %300, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %55, ptr align 16 %93, i64 16, i1 false)
  %302 = load ptr, ptr %37, align 8
  %303 = load i32, ptr %51, align 4
  %304 = add nsw i32 %303, 1
  store i32 %304, ptr %51, align 4
  %305 = sext i32 %303 to i64
  %306 = getelementptr inbounds %struct.float4, ptr %302, i64 %305
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %306, ptr align 16 %53, i64 16, i1 false)
  %307 = load i32, ptr %47, align 4
  %308 = add nsw i32 %307, 1
  %309 = load i32, ptr %23, align 4
  %310 = sdiv i32 %309, 2
  %311 = icmp slt i32 %308, %310
  %312 = zext i1 %311 to i8
  store i8 %312, ptr %97, align 1
  %313 = load i32, ptr %49, align 4
  %314 = add nsw i32 %313, 1
  %315 = load i32, ptr %23, align 4
  %316 = sdiv i32 %315, 2
  %317 = icmp slt i32 %314, %316
  br i1 %317, label %318, label %329

318:                                              ; preds = %230
  %319 = load i32, ptr %35, align 4
  %320 = load i32, ptr %49, align 4
  %321 = add nsw i32 %319, %320
  %322 = add nsw i32 %321, 1
  %323 = load i32, ptr %29, align 4
  %324 = add nsw i32 %323, 1
  %325 = sext i32 %324 to i64
  %326 = getelementptr inbounds [1025 x i32], ptr addrspacecast (ptr addrspace(4) @constStartAddr to ptr), i64 0, i64 %325
  %327 = load i32, ptr %326, align 4
  %328 = icmp slt i32 %322, %327
  br label %329

329:                                              ; preds = %318, %230
  %330 = phi i1 [ false, %230 ], [ %328, %318 ]
  %331 = zext i1 %330 to i8
  store i8 %331, ptr %99, align 1
  %332 = load i8, ptr %97, align 1
  %333 = trunc i8 %332 to i1
  br i1 %333, label %334, label %354

334:                                              ; preds = %329
  %335 = load i8, ptr %99, align 1
  %336 = trunc i8 %335 to i1
  br i1 %336, label %337, label %350

337:                                              ; preds = %334
  %338 = getelementptr inbounds %struct.float4, ptr %69, i32 0, i32 0
  %339 = load float, ptr %338, align 16
  %340 = getelementptr inbounds %struct.float4, ptr %73, i32 0, i32 0
  %341 = load float, ptr %340, align 16
  %342 = fcmp contract olt float %339, %341
  br i1 %342, label %343, label %346

343:                                              ; preds = %337
  %344 = load i32, ptr %47, align 4
  %345 = add nsw i32 %344, 1
  store i32 %345, ptr %47, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %53, ptr align 16 %69, i64 16, i1 false)
  br label %349

346:                                              ; preds = %337
  %347 = load i32, ptr %49, align 4
  %348 = add nsw i32 %347, 1
  store i32 %348, ptr %49, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %53, ptr align 16 %73, i64 16, i1 false)
  br label %349

349:                                              ; preds = %346, %343
  br label %353

350:                                              ; preds = %334
  %351 = load i32, ptr %47, align 4
  %352 = add nsw i32 %351, 1
  store i32 %352, ptr %47, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %53, ptr align 16 %69, i64 16, i1 false)
  br label %353

353:                                              ; preds = %350, %349
  br label %362

354:                                              ; preds = %329
  %355 = load i8, ptr %99, align 1
  %356 = trunc i8 %355 to i1
  br i1 %356, label %357, label %360

357:                                              ; preds = %354
  %358 = load i32, ptr %49, align 4
  %359 = add nsw i32 %358, 1
  store i32 %359, ptr %49, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %53, ptr align 16 %73, i64 16, i1 false)
  br label %361

360:                                              ; preds = %354
  br label %363

361:                                              ; preds = %357
  br label %362

362:                                              ; preds = %361, %353
  br label %230, !llvm.loop !14

363:                                              ; preds = %360
  %364 = load ptr, ptr %37, align 8
  %365 = load i32, ptr %51, align 4
  %366 = add nsw i32 %365, 1
  store i32 %366, ptr %51, align 4
  %367 = sext i32 %365 to i64
  %368 = getelementptr inbounds %struct.float4, ptr %364, i64 %367
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %368, ptr align 16 %55, i64 16, i1 false)
  br label %369

369:                                              ; preds = %363, %190, %141, %111
  ret void
}

 finish two 
  %241 = getelementptr inbounds %struct.HIP_vector_type, ptr %19, i32 0, i32 0 I 
 getelementptr here 
 abc 
  %241 = getelementptr inbounds %struct.HIP_vector_type, ptr %19, i32 0, i32 0
 abc 
 out ptr 
  %242 = extractvalue %struct.HIP_vector_type %239, 0 I 
  store %struct.HIP_vector_base %242, ptr %241, align 16 I 
  %243 = getelementptr inbounds %struct.float4, ptr %69, i32 0, i32 0 I 
 getelementptr here 
  %244 = extractvalue %struct.HIP_vector_type %239, 0 I 
  store float %244, ptr %241, align 16 I 
  %245 = getelementptr inbounds %struct.float4, ptr %69, i32 0, i32 1 I 
 getelementptr here 
  %246 = extractvalue %struct.HIP_vector_type %239, 1 I 
  store float %246, ptr %245, align 4 I 
  %247 = getelementptr inbounds %struct.float4, ptr %69, i32 0, i32 2 I 
 getelementptr here 
  %248 = extractvalue %struct.HIP_vector_type %239, 2 I 
  store float %248, ptr %247, align 8 I 
  %249 = getelementptr inbounds %struct.float4, ptr %69, i32 0, i32 3 I 
 getelementptr here 
  %250 = extractvalue %struct.HIP_vector_type %239, 3 I 
  store float %250, ptr %249, align 4 I 
  %251 = call i64 @llvm.nvvm.texsurf.handle.internal.p1(ptr addrspace(1) @tex) I 
heree
llvm.nvvm.texsurf.handle.internal.p1
 1 
@tex = addrspace(1) externally_initialized global %struct.texture undef
 foound 
  store i64 %254, ptr %77, align 4 I 
  %255 = load i32, ptr %37, align 4 I 
  %256 = load i32, ptr %51, align 4 I 
  %257 = add nsw i32 %255, %256 I 
  %258 = add nsw i32 %257, 1 I 
  %259 = load i64, ptr %77, align 4 I 
  %260 = call %struct.float4 @_ZL10tex1DfetchI6float4EN17__nv_tex_rmet_retIT_E4typeE7textureIS2_Li1EL19cudaTextureReadMode0EEi(i64 %259, i32 noundef %258) #7 I 
heree
_ZL10tex1DfetchI6float4EN17__nv_tex_rmet_retIT_E4typeE7textureIS2_Li1EL19cudaTextureReadMode0EEi
 fetch here 
  %260 = call %struct.float4 @_ZL10tex1DfetchI6float4EN17__nv_tex_rmet_retIT_E4typeE7textureIS2_Li1EL19cudaTextureReadMode0EEi(i64 %259, i32 noundef %258) #7
%struct.float4 = type { float, float, float, float }
  %259 = load %struct.textureReference, ptr %253, align 8 
0x1904f10
  %267 = extractvalue %struct.HIP_vector_type %263, 0
  %267 = getelementptr inbounds %struct.float4, ptr %77, i32 0, i32 0 need remove 
  %268 = extractvalue %struct.HIP_vector_type %263, 0 need remove 
  store float %268, ptr %265, align 16 need remove 
  %269 = getelementptr inbounds %struct.float4, ptr %77, i32 0, i32 1 need remove 
  %270 = extractvalue %struct.HIP_vector_type %263, 1 need remove 
  store float %270, ptr %269, align 4 need remove 
  %271 = getelementptr inbounds %struct.float4, ptr %77, i32 0, i32 2 need remove 
  %272 = extractvalue %struct.HIP_vector_type %263, 2 need remove 
  store float %272, ptr %271, align 8 need remove 
  %273 = getelementptr inbounds %struct.float4, ptr %77, i32 0, i32 3 need remove 
  %274 = extractvalue %struct.HIP_vector_type %263, 3 need remove 
  store float %274, ptr %273, align 4 need remove 
; Function Attrs: convergent mustprogress noinline norecurse nounwind optnone
define amdgpu_kernel void @_Z13mergeSortPassP6float4ii(ptr addrspace(1) noundef %0, i32 noundef %1, i32 noundef %2) #1 {
  %4 = alloca %struct.texture, align 8, addrspace(5)
  %5 = addrspacecast ptr addrspace(5) %4 to ptr
  %6 = alloca %struct.HIP_vector_type, align 16, addrspace(5)
  %7 = addrspacecast ptr addrspace(5) %6 to ptr
  %8 = alloca %struct.texture, align 8, addrspace(5)
  %9 = addrspacecast ptr addrspace(5) %8 to ptr
  %10 = alloca %struct.HIP_vector_type, align 16, addrspace(5)
  %11 = addrspacecast ptr addrspace(5) %10 to ptr
  %12 = alloca %struct.texture, align 8, addrspace(5)
  %13 = addrspacecast ptr addrspace(5) %12 to ptr
  %14 = alloca %struct.HIP_vector_type, align 16, addrspace(5)
  %15 = addrspacecast ptr addrspace(5) %14 to ptr
  %16 = alloca %struct.texture, align 8, addrspace(5)
  %17 = addrspacecast ptr addrspace(5) %16 to ptr
  %18 = alloca %struct.HIP_vector_type, align 16, addrspace(5)
  %19 = addrspacecast ptr addrspace(5) %18 to ptr
  %20 = alloca %struct.texture, align 8, addrspace(5)
  %21 = addrspacecast ptr addrspace(5) %20 to ptr
  %22 = alloca %struct.HIP_vector_type, align 16, addrspace(5)
  %23 = addrspacecast ptr addrspace(5) %22 to ptr
  %24 = alloca ptr, align 8, addrspace(5)
  %25 = addrspacecast ptr addrspace(5) %24 to ptr
  %26 = alloca i32, align 4, addrspace(5)
  %27 = addrspacecast ptr addrspace(5) %26 to ptr
  %28 = alloca i32, align 4, addrspace(5)
  %29 = addrspacecast ptr addrspace(5) %28 to ptr
  %30 = alloca i32, align 4, addrspace(5)
  %31 = addrspacecast ptr addrspace(5) %30 to ptr
  %32 = alloca i32, align 4, addrspace(5)
  %33 = addrspacecast ptr addrspace(5) %32 to ptr
  %34 = alloca i32, align 4, addrspace(5)
  %35 = addrspacecast ptr addrspace(5) %34 to ptr
  %36 = alloca i32, align 4, addrspace(5)
  %37 = addrspacecast ptr addrspace(5) %36 to ptr
  %38 = alloca i32, align 4, addrspace(5)
  %39 = addrspacecast ptr addrspace(5) %38 to ptr
  %40 = alloca ptr, align 8, addrspace(5)
  %41 = addrspacecast ptr addrspace(5) %40 to ptr
  %42 = alloca i32, align 4, addrspace(5)
  %43 = addrspacecast ptr addrspace(5) %42 to ptr
  %44 = alloca %struct.float4, align 16, addrspace(5)
  %45 = alloca %struct.HIP_vector_type, align 16, addrspace(5)
  %46 = addrspacecast ptr addrspace(5) %45 to ptr
  %47 = addrspacecast ptr addrspace(5) %44 to ptr
  %48 = alloca i64, align 4, addrspace(5)
  %49 = addrspacecast ptr addrspace(5) %48 to ptr
  %50 = alloca i32, align 4, addrspace(5)
  %51 = addrspacecast ptr addrspace(5) %50 to ptr
  %52 = alloca i32, align 4, addrspace(5)
  %53 = addrspacecast ptr addrspace(5) %52 to ptr
  %54 = alloca i32, align 4, addrspace(5)
  %55 = addrspacecast ptr addrspace(5) %54 to ptr
  %56 = alloca %struct.float4, align 16, addrspace(5)
  %57 = addrspacecast ptr addrspace(5) %56 to ptr
  %58 = alloca %struct.float4, align 16, addrspace(5)
  %59 = addrspacecast ptr addrspace(5) %58 to ptr
  %60 = alloca %struct.float4, align 16, addrspace(5)
  %61 = alloca %struct.HIP_vector_type, align 16, addrspace(5)
  %62 = addrspacecast ptr addrspace(5) %61 to ptr
  %63 = addrspacecast ptr addrspace(5) %60 to ptr
  %64 = alloca i64, align 4, addrspace(5)
  %65 = addrspacecast ptr addrspace(5) %64 to ptr
  %66 = alloca %struct.float4, align 16, addrspace(5)
  %67 = alloca %struct.HIP_vector_type, align 16, addrspace(5)
  %68 = addrspacecast ptr addrspace(5) %67 to ptr
  %69 = addrspacecast ptr addrspace(5) %66 to ptr
  %70 = alloca i64, align 4, addrspace(5)
  %71 = addrspacecast ptr addrspace(5) %70 to ptr
  %72 = alloca %struct.float4, align 16, addrspace(5)
  %73 = addrspacecast ptr addrspace(5) %72 to ptr
  %74 = alloca i64, align 4, addrspace(5)
  %75 = addrspacecast ptr addrspace(5) %74 to ptr
  %76 = alloca %struct.float4, align 16, addrspace(5)
  %77 = addrspacecast ptr addrspace(5) %76 to ptr
  %78 = alloca i64, align 4, addrspace(5)
  %79 = addrspacecast ptr addrspace(5) %78 to ptr
  %80 = alloca %struct.float4, align 16, addrspace(5)
  %81 = addrspacecast ptr addrspace(5) %80 to ptr
  %82 = alloca %struct.float4, align 16, addrspace(5)
  %83 = addrspacecast ptr addrspace(5) %82 to ptr
  %84 = alloca %struct.float4, align 16, addrspace(5)
  %85 = addrspacecast ptr addrspace(5) %84 to ptr
  %86 = alloca %struct.float4, align 16, addrspace(5)
  %87 = addrspacecast ptr addrspace(5) %86 to ptr
  %88 = alloca %struct.float4, align 16, addrspace(5)
  %89 = addrspacecast ptr addrspace(5) %88 to ptr
  %90 = alloca %struct.float4, align 16, addrspace(5)
  %91 = addrspacecast ptr addrspace(5) %90 to ptr
  %92 = alloca %struct.float4, align 16, addrspace(5)
  %93 = addrspacecast ptr addrspace(5) %92 to ptr
  %94 = alloca %struct.float4, align 16, addrspace(5)
  %95 = addrspacecast ptr addrspace(5) %94 to ptr
  %96 = alloca %struct.float4, align 16, addrspace(5)
  %97 = addrspacecast ptr addrspace(5) %96 to ptr
  %98 = alloca %struct.float4, align 16, addrspace(5)
  %99 = addrspacecast ptr addrspace(5) %98 to ptr
  %100 = alloca i8, align 1, addrspace(5)
  %101 = addrspacecast ptr addrspace(5) %100 to ptr
  %102 = alloca i8, align 1, addrspace(5)
  %103 = addrspacecast ptr addrspace(5) %102 to ptr
  %104 = addrspacecast ptr addrspace(1) %0 to ptr
  store ptr %104, ptr %25, align 8
  store i32 %1, ptr %27, align 4
  store i32 %2, ptr %29, align 4
  %105 = call noundef i32 @_ZN25__cuda_builtin_blockIdx_t17__fetch_builtin_xEv() #7
  %106 = call noundef i32 @_ZN25__cuda_builtin_blockDim_t17__fetch_builtin_xEv() #7
  %107 = mul i32 %105, %106
  %108 = call noundef i32 @_ZN26__cuda_builtin_threadIdx_t17__fetch_builtin_xEv() #7
  %109 = add i32 %107, %108
  store i32 %109, ptr %31, align 4
  %110 = load i32, ptr %31, align 4
  %111 = load i32, ptr %29, align 4
  %112 = sdiv i32 %110, %111
  store i32 %112, ptr %33, align 4
  %113 = load i32, ptr %33, align 4
  %114 = icmp sge i32 %113, 1024
  br i1 %114, label %115, label %116

115:                                              ; preds = %3
  br label %378

116:                                              ; preds = %3
  %117 = load i32, ptr %31, align 4
  %118 = load i32, ptr %33, align 4
  %119 = load i32, ptr %29, align 4
  %120 = mul nsw i32 %118, %119
  %121 = sub nsw i32 %117, %120
  store i32 %121, ptr %35, align 4
  %122 = load i32, ptr %33, align 4
  %123 = sext i32 %122 to i64
  %124 = getelementptr inbounds [1025 x i32], ptr addrspacecast (ptr addrspace(4) @constStartAddr to ptr), i64 0, i64 %123
  %125 = load i32, ptr %124, align 4
  %126 = load i32, ptr %35, align 4
  %127 = load i32, ptr %27, align 4
  %128 = mul nsw i32 %126, %127
  %129 = add nsw i32 %125, %128
  store i32 %129, ptr %37, align 4
  %130 = load i32, ptr %37, align 4
  %131 = load i32, ptr %27, align 4
  %132 = sdiv i32 %131, 2
  %133 = add nsw i32 %130, %132
  store i32 %133, ptr %39, align 4
  %134 = load ptr, ptr %25, align 8
  %135 = load i32, ptr %37, align 4
  %136 = sext i32 %135 to i64
  %137 = getelementptr inbounds %struct.float4, ptr %134, i64 %136
  store ptr %137, ptr %41, align 8
  %138 = load i32, ptr %37, align 4
  %139 = load i32, ptr %33, align 4
  %140 = add nsw i32 %139, 1
  %141 = sext i32 %140 to i64
  %142 = getelementptr inbounds [1025 x i32], ptr addrspacecast (ptr addrspace(4) @constStartAddr to ptr), i64 0, i64 %141
  %143 = load i32, ptr %142, align 4
  %144 = icmp sge i32 %138, %143
  br i1 %144, label %145, label %146

145:                                              ; preds = %116
  br label %378

146:                                              ; preds = %116
  %147 = load i32, ptr %39, align 4
  %148 = load i32, ptr %33, align 4
  %149 = add nsw i32 %148, 1
  %150 = sext i32 %149 to i64
  %151 = getelementptr inbounds [1025 x i32], ptr addrspacecast (ptr addrspace(4) @constStartAddr to ptr), i64 0, i64 %150
  %152 = load i32, ptr %151, align 4
  %153 = icmp sge i32 %147, %152
  br i1 %153, label %154, label %195

154:                                              ; preds = %146
  store i32 0, ptr %43, align 4
  br label %155

155:                                              ; preds = %191, %154
  %156 = load i32, ptr %43, align 4
  %157 = load i32, ptr %33, align 4
  %158 = add nsw i32 %157, 1
  %159 = sext i32 %158 to i64
  %160 = getelementptr inbounds [1025 x i32], ptr addrspacecast (ptr addrspace(4) @constStartAddr to ptr), i64 0, i64 %159
  %161 = load i32, ptr %160, align 4
  %162 = load i32, ptr %37, align 4
  %163 = sub nsw i32 %161, %162
  %164 = icmp slt i32 %156, %163
  br i1 %164, label %165, label %194

165:                                              ; preds = %155
  call void @llvm.memcpy.p0.p0.i64(ptr %5, ptr addrspacecast (ptr addrspace(1) @tex to ptr), i64 88, i1 false)
  %166 = getelementptr inbounds %struct.textureReference, ptr %5, i32 0, i32 0
  %167 = call i64 @llvm.nvvm.texsurf.handle.internal.p1(ptr addrspace(1) @tex)
  store i64 %167, ptr %49, align 4
  %168 = load i32, ptr %37, align 4
  %169 = load i32, ptr %43, align 4
  %170 = add nsw i32 %168, %169
  %171 = load %struct.textureReference, ptr %166, align 8
  %172 = load i64, ptr %49, align 4
  %173 = call %struct.HIP_vector_type @_ZL10tex1DfetchI15HIP_vector_typeIfLj4EEL18hipTextureReadMode0EEN13__hip_tex_retIT_XT0_EbE4typeE7textureIS4_Li1EXT0_EEi(%struct.textureReference %171, i32 %170)
  %174 = call %struct.float4 @_ZL10tex1DfetchI6float4EN17__nv_tex_rmet_retIT_E4typeE7textureIS2_Li1EL19cudaTextureReadMode0EEi(%struct.textureReference %171, i32 noundef %170) #7
  %175 = getelementptr inbounds %struct.HIP_vector_type, ptr %7, i32 0, i32 0
  %176 = extractvalue %struct.HIP_vector_type %173, 0
  store %struct.HIP_vector_base %176, ptr %175, align 16
  %177 = getelementptr inbounds %struct.float4, ptr %46, i32 0, i32 0
  %178 = extractvalue %struct.HIP_vector_type %173, 0
  store float %178, ptr %175, align 16
  %179 = getelementptr inbounds %struct.float4, ptr %46, i32 0, i32 1
  %180 = extractvalue %struct.HIP_vector_type %173, 1
  store float %180, ptr %179, align 4
  %181 = getelementptr inbounds %struct.float4, ptr %46, i32 0, i32 2
  %182 = extractvalue %struct.HIP_vector_type %173, 2
  store float %182, ptr %181, align 8
  %183 = getelementptr inbounds %struct.float4, ptr %46, i32 0, i32 3
  %184 = extractvalue %struct.HIP_vector_type %173, 3
  store float %184, ptr %183, align 4
  %185 = load ptr, ptr %41, align 8
  %186 = load i32, ptr %43, align 4
  %187 = sext i32 %186 to i64
  %188 = getelementptr inbounds %struct.HIP_vector_type, ptr %185, i64 %187
  %189 = call dereferenceable(16) ptr @_ZN15HIP_vector_typeIfLj4EEaSERKS0_(ptr dereferenceable(16) %188, ptr dereferenceable(16) %7)
  %190 = getelementptr inbounds %struct.float4, ptr %185, i64 %187
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %188, ptr align 16 %46, i64 16, i1 false)
  br label %191

191:                                              ; preds = %165
  %192 = load i32, ptr %43, align 4
  %193 = add nsw i32 %192, 1
  store i32 %193, ptr %43, align 4
  br label %155, !llvm.loop !12

194:                                              ; preds = %155
  br label %378

195:                                              ; preds = %146
  store i32 0, ptr %51, align 4
  store i32 0, ptr %53, align 4
  store i32 0, ptr %55, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr %9, ptr addrspacecast (ptr addrspace(1) @tex to ptr), i64 88, i1 false)
  %196 = getelementptr inbounds %struct.textureReference, ptr %9, i32 0, i32 0
  %197 = call i64 @llvm.nvvm.texsurf.handle.internal.p1(ptr addrspace(1) @tex)
  store i64 %197, ptr %65, align 4
  %198 = load i32, ptr %37, align 4
  %199 = load i32, ptr %51, align 4
  %200 = add nsw i32 %198, %199
  %201 = load %struct.textureReference, ptr %196, align 8
  %202 = load i64, ptr %65, align 4
  %203 = call %struct.HIP_vector_type @_ZL10tex1DfetchI15HIP_vector_typeIfLj4EEL18hipTextureReadMode0EEN13__hip_tex_retIT_XT0_EbE4typeE7textureIS4_Li1EXT0_EEi(%struct.textureReference %201, i32 %200)
  %204 = call %struct.float4 @_ZL10tex1DfetchI6float4EN17__nv_tex_rmet_retIT_E4typeE7textureIS2_Li1EL19cudaTextureReadMode0EEi(%struct.textureReference %201, i32 noundef %200) #7
  %205 = getelementptr inbounds %struct.HIP_vector_type, ptr %11, i32 0, i32 0
  %206 = extractvalue %struct.HIP_vector_type %203, 0
  store %struct.HIP_vector_base %206, ptr %205, align 16
  %207 = getelementptr inbounds %struct.float4, ptr %62, i32 0, i32 0
  %208 = extractvalue %struct.HIP_vector_type %203, 0
  store float %208, ptr %205, align 16
  %209 = getelementptr inbounds %struct.float4, ptr %62, i32 0, i32 1
  %210 = extractvalue %struct.HIP_vector_type %203, 1
  store float %210, ptr %209, align 4
  %211 = getelementptr inbounds %struct.float4, ptr %62, i32 0, i32 2
  %212 = extractvalue %struct.HIP_vector_type %203, 2
  store float %212, ptr %211, align 8
  %213 = getelementptr inbounds %struct.float4, ptr %62, i32 0, i32 3
  %214 = extractvalue %struct.HIP_vector_type %203, 3
  store float %214, ptr %213, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %57, ptr align 16 %62, i64 16, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr %13, ptr addrspacecast (ptr addrspace(1) @tex to ptr), i64 88, i1 false)
  %215 = getelementptr inbounds %struct.textureReference, ptr %13, i32 0, i32 0
  %216 = call i64 @llvm.nvvm.texsurf.handle.internal.p1(ptr addrspace(1) @tex)
  store i64 %216, ptr %71, align 4
  %217 = load i32, ptr %39, align 4
  %218 = load i32, ptr %53, align 4
  %219 = add nsw i32 %217, %218
  %220 = load %struct.textureReference, ptr %215, align 8
  %221 = load i64, ptr %71, align 4
  %222 = call %struct.HIP_vector_type @_ZL10tex1DfetchI15HIP_vector_typeIfLj4EEL18hipTextureReadMode0EEN13__hip_tex_retIT_XT0_EbE4typeE7textureIS4_Li1EXT0_EEi(%struct.textureReference %220, i32 %219)
  %223 = call %struct.float4 @_ZL10tex1DfetchI6float4EN17__nv_tex_rmet_retIT_E4typeE7textureIS2_Li1EL19cudaTextureReadMode0EEi(%struct.textureReference %220, i32 noundef %219) #7
  %224 = getelementptr inbounds %struct.HIP_vector_type, ptr %15, i32 0, i32 0
  %225 = extractvalue %struct.HIP_vector_type %222, 0
  store %struct.HIP_vector_base %225, ptr %224, align 16
  %226 = getelementptr inbounds %struct.float4, ptr %68, i32 0, i32 0
  %227 = extractvalue %struct.HIP_vector_type %222, 0
  store float %227, ptr %224, align 16
  %228 = getelementptr inbounds %struct.float4, ptr %68, i32 0, i32 1
  %229 = extractvalue %struct.HIP_vector_type %222, 1
  store float %229, ptr %228, align 4
  %230 = getelementptr inbounds %struct.float4, ptr %68, i32 0, i32 2
  %231 = extractvalue %struct.HIP_vector_type %222, 2
  store float %231, ptr %230, align 8
  %232 = getelementptr inbounds %struct.float4, ptr %68, i32 0, i32 3
  %233 = extractvalue %struct.HIP_vector_type %222, 3
  store float %233, ptr %232, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %59, ptr align 16 %68, i64 16, i1 false)
  br label %234

234:                                              ; preds = %195, %371
  call void @llvm.memcpy.p0.p0.i64(ptr %17, ptr addrspacecast (ptr addrspace(1) @tex to ptr), i64 88, i1 false)
  %235 = getelementptr inbounds %struct.textureReference, ptr %17, i32 0, i32 0
  %236 = call i64 @llvm.nvvm.texsurf.handle.internal.p1(ptr addrspace(1) @tex)
  store i64 %236, ptr %75, align 4
  %237 = load i32, ptr %37, align 4
  %238 = load i32, ptr %51, align 4
  %239 = add nsw i32 %237, %238
  %240 = add nsw i32 %239, 1
  %241 = load %struct.textureReference, ptr %235, align 8
  %242 = load i64, ptr %75, align 4
  %243 = call %struct.HIP_vector_type @_ZL10tex1DfetchI15HIP_vector_typeIfLj4EEL18hipTextureReadMode0EEN13__hip_tex_retIT_XT0_EbE4typeE7textureIS4_Li1EXT0_EEi(%struct.textureReference %241, i32 %240)
  %244 = call %struct.float4 @_ZL10tex1DfetchI6float4EN17__nv_tex_rmet_retIT_E4typeE7textureIS2_Li1EL19cudaTextureReadMode0EEi(%struct.textureReference %241, i32 noundef %240) #7
  %245 = getelementptr inbounds %struct.HIP_vector_type, ptr %19, i32 0, i32 0
  %246 = extractvalue %struct.HIP_vector_type %243, 0
  store %struct.HIP_vector_base %246, ptr %245, align 16
  %247 = getelementptr inbounds %struct.float4, ptr %73, i32 0, i32 0
  %248 = extractvalue %struct.HIP_vector_type %243, 0
  store float %248, ptr %245, align 16
  %249 = getelementptr inbounds %struct.float4, ptr %73, i32 0, i32 1
  %250 = extractvalue %struct.HIP_vector_type %243, 1
  store float %250, ptr %249, align 4
  %251 = getelementptr inbounds %struct.float4, ptr %73, i32 0, i32 2
  %252 = extractvalue %struct.HIP_vector_type %243, 2
  store float %252, ptr %251, align 8
  %253 = getelementptr inbounds %struct.float4, ptr %73, i32 0, i32 3
  %254 = extractvalue %struct.HIP_vector_type %243, 3
  store float %254, ptr %253, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr %21, ptr addrspacecast (ptr addrspace(1) @tex to ptr), i64 88, i1 false)
  %255 = getelementptr inbounds %struct.textureReference, ptr %21, i32 0, i32 0
  %256 = call i64 @llvm.nvvm.texsurf.handle.internal.p1(ptr addrspace(1) @tex)
  store i64 %256, ptr %79, align 4
  %257 = load i32, ptr %39, align 4
  %258 = load i32, ptr %53, align 4
  %259 = add nsw i32 %257, %258
  %260 = add nsw i32 %259, 1
  %261 = load %struct.textureReference, ptr %255, align 8
  %262 = load i64, ptr %79, align 4
  %263 = call %struct.HIP_vector_type @_ZL10tex1DfetchI15HIP_vector_typeIfLj4EEL18hipTextureReadMode0EEN13__hip_tex_retIT_XT0_EbE4typeE7textureIS4_Li1EXT0_EEi(%struct.textureReference %261, i32 %260)
  %264 = call %struct.float4 @_ZL10tex1DfetchI6float4EN17__nv_tex_rmet_retIT_E4typeE7textureIS2_Li1EL19cudaTextureReadMode0EEi(%struct.textureReference %261, i32 noundef %260) #7
  %265 = getelementptr inbounds %struct.HIP_vector_type, ptr %23, i32 0, i32 0
  %266 = extractvalue %struct.HIP_vector_type %263, 0
  store %struct.HIP_vector_base %266, ptr %265, align 16
  %267 = getelementptr inbounds %struct.float4, ptr %77, i32 0, i32 0
  %268 = extractvalue %struct.HIP_vector_type %263, 0
  store float %268, ptr %265, align 16
  %269 = getelementptr inbounds %struct.float4, ptr %77, i32 0, i32 1
  %270 = extractvalue %struct.HIP_vector_type %263, 1
  store float %270, ptr %269, align 4
  %271 = getelementptr inbounds %struct.float4, ptr %77, i32 0, i32 2
  %272 = extractvalue %struct.HIP_vector_type %263, 2
  store float %272, ptr %271, align 8
  %273 = getelementptr inbounds %struct.float4, ptr %77, i32 0, i32 3
  %274 = extractvalue %struct.HIP_vector_type %263, 3
  store float %274, ptr %273, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %83, ptr align 16 %57, i64 16, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %85, ptr align 16 %59, i64 16, i1 false)
  %275 = call %struct.float4 @_Z9getLowest6float4S_(ptr noundef byval(%struct.float4) align 16 %83, ptr noundef byval(%struct.float4) align 16 %85) #7
  %276 = getelementptr inbounds %struct.float4, ptr %81, i32 0, i32 0
  %277 = extractvalue %struct.float4 %275, 0
  store float %277, ptr %276, align 16
  %278 = getelementptr inbounds %struct.float4, ptr %81, i32 0, i32 1
  %279 = extractvalue %struct.float4 %275, 1
  store float %279, ptr %278, align 4
  %280 = getelementptr inbounds %struct.float4, ptr %81, i32 0, i32 2
  %281 = extractvalue %struct.float4 %275, 2
  store float %281, ptr %280, align 8
  %282 = getelementptr inbounds %struct.float4, ptr %81, i32 0, i32 3
  %283 = extractvalue %struct.float4 %275, 3
  store float %283, ptr %282, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %89, ptr align 16 %57, i64 16, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %91, ptr align 16 %59, i64 16, i1 false)
  %284 = call %struct.float4 @_Z10getHighest6float4S_(ptr noundef byval(%struct.float4) align 16 %89, ptr noundef byval(%struct.float4) align 16 %91) #7
  %285 = getelementptr inbounds %struct.float4, ptr %87, i32 0, i32 0
  %286 = extractvalue %struct.float4 %284, 0
  store float %286, ptr %285, align 16
  %287 = getelementptr inbounds %struct.float4, ptr %87, i32 0, i32 1
  %288 = extractvalue %struct.float4 %284, 1
  store float %288, ptr %287, align 4
  %289 = getelementptr inbounds %struct.float4, ptr %87, i32 0, i32 2
  %290 = extractvalue %struct.float4 %284, 2
  store float %290, ptr %289, align 8
  %291 = getelementptr inbounds %struct.float4, ptr %87, i32 0, i32 3
  %292 = extractvalue %struct.float4 %284, 3
  store float %292, ptr %291, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %95, ptr align 16 %81, i64 16, i1 false)
  %293 = call %struct.float4 @_Z8sortElem6float4(ptr noundef byval(%struct.float4) align 16 %95) #7
  %294 = getelementptr inbounds %struct.float4, ptr %93, i32 0, i32 0
  %295 = extractvalue %struct.float4 %293, 0
  store float %295, ptr %294, align 16
  %296 = getelementptr inbounds %struct.float4, ptr %93, i32 0, i32 1
  %297 = extractvalue %struct.float4 %293, 1
  store float %297, ptr %296, align 4
  %298 = getelementptr inbounds %struct.float4, ptr %93, i32 0, i32 2
  %299 = extractvalue %struct.float4 %293, 2
  store float %299, ptr %298, align 8
  %300 = getelementptr inbounds %struct.float4, ptr %93, i32 0, i32 3
  %301 = extractvalue %struct.float4 %293, 3
  store float %301, ptr %300, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %57, ptr align 16 %93, i64 16, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %99, ptr align 16 %87, i64 16, i1 false)
  %302 = call %struct.float4 @_Z8sortElem6float4(ptr noundef byval(%struct.float4) align 16 %99) #7
  %303 = getelementptr inbounds %struct.float4, ptr %97, i32 0, i32 0
  %304 = extractvalue %struct.float4 %302, 0
  store float %304, ptr %303, align 16
  %305 = getelementptr inbounds %struct.float4, ptr %97, i32 0, i32 1
  %306 = extractvalue %struct.float4 %302, 1
  store float %306, ptr %305, align 4
  %307 = getelementptr inbounds %struct.float4, ptr %97, i32 0, i32 2
  %308 = extractvalue %struct.float4 %302, 2
  store float %308, ptr %307, align 8
  %309 = getelementptr inbounds %struct.float4, ptr %97, i32 0, i32 3
  %310 = extractvalue %struct.float4 %302, 3
  store float %310, ptr %309, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %59, ptr align 16 %97, i64 16, i1 false)
  %311 = load ptr, ptr %41, align 8
  %312 = load i32, ptr %55, align 4
  %313 = add nsw i32 %312, 1
  store i32 %313, ptr %55, align 4
  %314 = sext i32 %312 to i64
  %315 = getelementptr inbounds %struct.float4, ptr %311, i64 %314
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %315, ptr align 16 %57, i64 16, i1 false)
  %316 = load i32, ptr %51, align 4
  %317 = add nsw i32 %316, 1
  %318 = load i32, ptr %27, align 4
  %319 = sdiv i32 %318, 2
  %320 = icmp slt i32 %317, %319
  %321 = zext i1 %320 to i8
  store i8 %321, ptr %101, align 1
  %322 = load i32, ptr %53, align 4
  %323 = add nsw i32 %322, 1
  %324 = load i32, ptr %27, align 4
  %325 = sdiv i32 %324, 2
  %326 = icmp slt i32 %323, %325
  br i1 %326, label %327, label %338

327:                                              ; preds = %234
  %328 = load i32, ptr %39, align 4
  %329 = load i32, ptr %53, align 4
  %330 = add nsw i32 %328, %329
  %331 = add nsw i32 %330, 1
  %332 = load i32, ptr %33, align 4
  %333 = add nsw i32 %332, 1
  %334 = sext i32 %333 to i64
  %335 = getelementptr inbounds [1025 x i32], ptr addrspacecast (ptr addrspace(4) @constStartAddr to ptr), i64 0, i64 %334
  %336 = load i32, ptr %335, align 4
  %337 = icmp slt i32 %331, %336
  br label %338

338:                                              ; preds = %327, %234
  %339 = phi i1 [ false, %234 ], [ %337, %327 ]
  %340 = zext i1 %339 to i8
  store i8 %340, ptr %103, align 1
  %341 = load i8, ptr %101, align 1
  %342 = trunc i8 %341 to i1
  br i1 %342, label %343, label %363

343:                                              ; preds = %338
  %344 = load i8, ptr %103, align 1
  %345 = trunc i8 %344 to i1
  br i1 %345, label %346, label %359

346:                                              ; preds = %343
  %347 = getelementptr inbounds %struct.float4, ptr %73, i32 0, i32 0
  %348 = load float, ptr %347, align 16
  %349 = getelementptr inbounds %struct.float4, ptr %77, i32 0, i32 0
  %350 = load float, ptr %349, align 16
  %351 = fcmp contract olt float %348, %350
  br i1 %351, label %352, label %355

352:                                              ; preds = %346
  %353 = load i32, ptr %51, align 4
  %354 = add nsw i32 %353, 1
  store i32 %354, ptr %51, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %57, ptr align 16 %73, i64 16, i1 false)
  br label %358

355:                                              ; preds = %346
  %356 = load i32, ptr %53, align 4
  %357 = add nsw i32 %356, 1
  store i32 %357, ptr %53, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %57, ptr align 16 %77, i64 16, i1 false)
  br label %358

358:                                              ; preds = %355, %352
  br label %362

359:                                              ; preds = %343
  %360 = load i32, ptr %51, align 4
  %361 = add nsw i32 %360, 1
  store i32 %361, ptr %51, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %57, ptr align 16 %73, i64 16, i1 false)
  br label %362

362:                                              ; preds = %359, %358
  br label %371

363:                                              ; preds = %338
  %364 = load i8, ptr %103, align 1
  %365 = trunc i8 %364 to i1
  br i1 %365, label %366, label %369

366:                                              ; preds = %363
  %367 = load i32, ptr %53, align 4
  %368 = add nsw i32 %367, 1
  store i32 %368, ptr %53, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %57, ptr align 16 %77, i64 16, i1 false)
  br label %370

369:                                              ; preds = %363
  br label %372

370:                                              ; preds = %366
  br label %371

371:                                              ; preds = %370, %362
  br label %234, !llvm.loop !14

372:                                              ; preds = %369
  %373 = load ptr, ptr %41, align 8
  %374 = load i32, ptr %55, align 4
  %375 = add nsw i32 %374, 1
  store i32 %375, ptr %55, align 4
  %376 = sext i32 %374 to i64
  %377 = getelementptr inbounds %struct.float4, ptr %373, i64 %376
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %377, ptr align 16 %59, i64 16, i1 false)
  br label %378

378:                                              ; preds = %372, %194, %145, %115
  ret void
}

 finish two 
  %265 = getelementptr inbounds %struct.HIP_vector_type, ptr %23, i32 0, i32 0 I 
 getelementptr here 
 abc 
  %265 = getelementptr inbounds %struct.HIP_vector_type, ptr %23, i32 0, i32 0
 abc 
 out ptr 
  %266 = extractvalue %struct.HIP_vector_type %263, 0 I 
  store %struct.HIP_vector_base %266, ptr %265, align 16 I 
  %267 = getelementptr inbounds %struct.float4, ptr %77, i32 0, i32 0 I 
 getelementptr here 
  %268 = extractvalue %struct.HIP_vector_type %263, 0 I 
  store float %268, ptr %265, align 16 I 
  %269 = getelementptr inbounds %struct.float4, ptr %77, i32 0, i32 1 I 
 getelementptr here 
  %270 = extractvalue %struct.HIP_vector_type %263, 1 I 
  store float %270, ptr %269, align 4 I 
  %271 = getelementptr inbounds %struct.float4, ptr %77, i32 0, i32 2 I 
 getelementptr here 
  %272 = extractvalue %struct.HIP_vector_type %263, 2 I 
  store float %272, ptr %271, align 8 I 
  %273 = getelementptr inbounds %struct.float4, ptr %77, i32 0, i32 3 I 
 getelementptr here 
  %274 = extractvalue %struct.HIP_vector_type %263, 3 I 
  store float %274, ptr %273, align 4 I 
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %83, ptr align 16 %57, i64 16, i1 false) I 
heree
llvm.memcpy.p0.p0.i64
 999 
 there 12 
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %87, ptr align 16 %61, i64 16, i1 false) I 
heree
llvm.memcpy.p0.p0.i64
 999 
 there 12 
  %279 = call %struct.float4 @_Z9getLowest6float4S_(ptr noundef byval(%struct.float4) align 16 %87, ptr noundef byval(%struct.float4) align 16 %89) #7 I 
heree

  %280 = getelementptr inbounds %struct.float4, ptr %85, i32 0, i32 0 I 
 getelementptr here 
 abc 
  %280 = getelementptr inbounds %struct.float4, ptr %85, i32 0, i32 0
 abc 
 888888 
  %281 = extractvalue %struct.float4 %279, 0
 out ptr 
  %281 = extractvalue %struct.float4 %279, 0 I 
  store float %281, ptr %280, align 16 I 
  %282 = getelementptr inbounds %struct.float4, ptr %85, i32 0, i32 1 I 
 getelementptr here 
 abc 
  %282 = getelementptr inbounds %struct.float4, ptr %85, i32 0, i32 1
 abc 
 888888 
  %283 = extractvalue %struct.float4 %279, 1
 out ptr 
  %283 = extractvalue %struct.float4 %279, 1 I 
  store float %283, ptr %282, align 4 I 
  %284 = getelementptr inbounds %struct.float4, ptr %85, i32 0, i32 2 I 
 getelementptr here 
 abc 
  %284 = getelementptr inbounds %struct.float4, ptr %85, i32 0, i32 2
 abc 
 888888 
  %285 = extractvalue %struct.float4 %279, 2
 out ptr 
  %285 = extractvalue %struct.float4 %279, 2 I 
  store float %285, ptr %284, align 8 I 
  %286 = getelementptr inbounds %struct.float4, ptr %85, i32 0, i32 3 I 
 getelementptr here 
 abc 
  %286 = getelementptr inbounds %struct.float4, ptr %85, i32 0, i32 3
 abc 
 888888 
  %287 = extractvalue %struct.float4 %279, 3
 out ptr 
  %287 = extractvalue %struct.float4 %279, 3 I 
  store float %287, ptr %286, align 4 I 
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %93, ptr align 16 %58, i64 16, i1 false) I 
heree
llvm.memcpy.p0.p0.i64
 999 
 there 12 
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %95, ptr align 16 %62, i64 16, i1 false) I 
heree
llvm.memcpy.p0.p0.i64
 999 
 there 12 
  %288 = call %struct.float4 @_Z10getHighest6float4S_(ptr noundef byval(%struct.float4) align 16 %93, ptr noundef byval(%struct.float4) align 16 %95) #7 I 
heree

  %289 = getelementptr inbounds %struct.float4, ptr %91, i32 0, i32 0 I 
 getelementptr here 
 abc 
  %289 = getelementptr inbounds %struct.float4, ptr %91, i32 0, i32 0
 abc 
 888888 
  %290 = extractvalue %struct.float4 %288, 0
 out ptr 
  %290 = extractvalue %struct.float4 %288, 0 I 
  store float %290, ptr %289, align 16 I 
  %291 = getelementptr inbounds %struct.float4, ptr %91, i32 0, i32 1 I 
 getelementptr here 
 abc 
  %291 = getelementptr inbounds %struct.float4, ptr %91, i32 0, i32 1
 abc 
 888888 
  %292 = extractvalue %struct.float4 %288, 1
 out ptr 
  %292 = extractvalue %struct.float4 %288, 1 I 
  store float %292, ptr %291, align 4 I 
  %293 = getelementptr inbounds %struct.float4, ptr %91, i32 0, i32 2 I 
 getelementptr here 
 abc 
  %293 = getelementptr inbounds %struct.float4, ptr %91, i32 0, i32 2
 abc 
 888888 
  %294 = extractvalue %struct.float4 %288, 2
 out ptr 
  %294 = extractvalue %struct.float4 %288, 2 I 
  store float %294, ptr %293, align 8 I 
  %295 = getelementptr inbounds %struct.float4, ptr %91, i32 0, i32 3 I 
 getelementptr here 
 abc 
  %295 = getelementptr inbounds %struct.float4, ptr %91, i32 0, i32 3
 abc 
 888888 
  %296 = extractvalue %struct.float4 %288, 3
 out ptr 
  %296 = extractvalue %struct.float4 %288, 3 I 
  store float %296, ptr %295, align 4 I 
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %99, ptr align 16 %85, i64 16, i1 false) I 
heree
llvm.memcpy.p0.p0.i64
 999 
 there 12 
  %299 = call %struct.float4 @_Z8sortElem6float4(ptr noundef byval(%struct.float4) align 16 %101) #7 I 
heree

  %300 = getelementptr inbounds %struct.float4, ptr %99, i32 0, i32 0 I 
 getelementptr here 
 abc 
  %300 = getelementptr inbounds %struct.float4, ptr %99, i32 0, i32 0
 abc 
 888888 
  %301 = extractvalue %struct.float4 %299, 0
 out ptr 
  %301 = extractvalue %struct.float4 %299, 0 I 
  store float %301, ptr %300, align 16 I 
  %302 = getelementptr inbounds %struct.float4, ptr %99, i32 0, i32 1 I 
 getelementptr here 
 abc 
  %302 = getelementptr inbounds %struct.float4, ptr %99, i32 0, i32 1
 abc 
 888888 
  %303 = extractvalue %struct.float4 %299, 1
 out ptr 
  %303 = extractvalue %struct.float4 %299, 1 I 
  store float %303, ptr %302, align 4 I 
  %304 = getelementptr inbounds %struct.float4, ptr %99, i32 0, i32 2 I 
 getelementptr here 
 abc 
  %304 = getelementptr inbounds %struct.float4, ptr %99, i32 0, i32 2
 abc 
 888888 
  %305 = extractvalue %struct.float4 %299, 2
 out ptr 
  %305 = extractvalue %struct.float4 %299, 2 I 
  store float %305, ptr %304, align 8 I 
  %306 = getelementptr inbounds %struct.float4, ptr %99, i32 0, i32 3 I 
 getelementptr here 
 abc 
  %306 = getelementptr inbounds %struct.float4, ptr %99, i32 0, i32 3
 abc 
 888888 
  %307 = extractvalue %struct.float4 %299, 3
 out ptr 
  %307 = extractvalue %struct.float4 %299, 3 I 
  store float %307, ptr %306, align 4 I 
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %58, ptr align 16 %99, i64 16, i1 false) I 
heree
llvm.memcpy.p0.p0.i64
 999 
 there 12 
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %107, ptr align 16 %93, i64 16, i1 false) I 
heree
llvm.memcpy.p0.p0.i64
 999 
 there 12 
  %312 = call %struct.float4 @_Z8sortElem6float4(ptr noundef byval(%struct.float4) align 16 %109) #7 I 
heree

  %313 = getelementptr inbounds %struct.float4, ptr %107, i32 0, i32 0 I 
 getelementptr here 
 abc 
  %313 = getelementptr inbounds %struct.float4, ptr %107, i32 0, i32 0
 abc 
 888888 
  %314 = extractvalue %struct.float4 %312, 0
 out ptr 
  %314 = extractvalue %struct.float4 %312, 0 I 
  store float %314, ptr %313, align 16 I 
  %315 = getelementptr inbounds %struct.float4, ptr %107, i32 0, i32 1 I 
 getelementptr here 
 abc 
  %315 = getelementptr inbounds %struct.float4, ptr %107, i32 0, i32 1
 abc 
 888888 
  %316 = extractvalue %struct.float4 %312, 1
 out ptr 
  %316 = extractvalue %struct.float4 %312, 1 I 
  store float %316, ptr %315, align 4 I 
  %317 = getelementptr inbounds %struct.float4, ptr %107, i32 0, i32 2 I 
 getelementptr here 
 abc 
  %317 = getelementptr inbounds %struct.float4, ptr %107, i32 0, i32 2
 abc 
 888888 
  %318 = extractvalue %struct.float4 %312, 2
 out ptr 
  %318 = extractvalue %struct.float4 %312, 2 I 
  store float %318, ptr %317, align 8 I 
  %319 = getelementptr inbounds %struct.float4, ptr %107, i32 0, i32 3 I 
 getelementptr here 
 abc 
  %319 = getelementptr inbounds %struct.float4, ptr %107, i32 0, i32 3
 abc 
 888888 
  %320 = extractvalue %struct.float4 %312, 3
 out ptr 
  %320 = extractvalue %struct.float4 %312, 3 I 
  store float %320, ptr %319, align 4 I 
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %62, ptr align 16 %107, i64 16, i1 false) I 
heree
llvm.memcpy.p0.p0.i64
 999 
 there 12 
  %323 = load ptr, ptr %41, align 8 I 
  %324 = load i32, ptr %55, align 4 I 
  %325 = add nsw i32 %324, 1 I 
  store i32 %325, ptr %55, align 4 I 
  %326 = sext i32 %324 to i64 I 
  %327 = getelementptr inbounds %struct.float4, ptr %323, i64 %326 I 
 getelementptr here 
 abc 
  %327 = getelementptr inbounds %struct.float4, ptr %323, i64 %326
 abc 
 888888 
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %327, ptr align 16 %58, i64 16, i1 false)
  %58 = addrspacecast ptr addrspace(5) %57 to ptr
; Function Attrs: convergent mustprogress noinline norecurse nounwind optnone
define amdgpu_kernel void @_Z13mergeSortPassP6float4ii(ptr addrspace(1) noundef %0, i32 noundef %1, i32 noundef %2) #1 {
  %4 = alloca %struct.texture, align 8, addrspace(5)
  %5 = addrspacecast ptr addrspace(5) %4 to ptr
  %6 = alloca %struct.HIP_vector_type, align 16, addrspace(5)
  %7 = addrspacecast ptr addrspace(5) %6 to ptr
  %8 = alloca %struct.texture, align 8, addrspace(5)
  %9 = addrspacecast ptr addrspace(5) %8 to ptr
  %10 = alloca %struct.HIP_vector_type, align 16, addrspace(5)
  %11 = addrspacecast ptr addrspace(5) %10 to ptr
  %12 = alloca %struct.texture, align 8, addrspace(5)
  %13 = addrspacecast ptr addrspace(5) %12 to ptr
  %14 = alloca %struct.HIP_vector_type, align 16, addrspace(5)
  %15 = addrspacecast ptr addrspace(5) %14 to ptr
  %16 = alloca %struct.texture, align 8, addrspace(5)
  %17 = addrspacecast ptr addrspace(5) %16 to ptr
  %18 = alloca %struct.HIP_vector_type, align 16, addrspace(5)
  %19 = addrspacecast ptr addrspace(5) %18 to ptr
  %20 = alloca %struct.texture, align 8, addrspace(5)
  %21 = addrspacecast ptr addrspace(5) %20 to ptr
  %22 = alloca %struct.HIP_vector_type, align 16, addrspace(5)
  %23 = addrspacecast ptr addrspace(5) %22 to ptr
  %24 = alloca ptr, align 8, addrspace(5)
  %25 = addrspacecast ptr addrspace(5) %24 to ptr
  %26 = alloca i32, align 4, addrspace(5)
  %27 = addrspacecast ptr addrspace(5) %26 to ptr
  %28 = alloca i32, align 4, addrspace(5)
  %29 = addrspacecast ptr addrspace(5) %28 to ptr
  %30 = alloca i32, align 4, addrspace(5)
  %31 = addrspacecast ptr addrspace(5) %30 to ptr
  %32 = alloca i32, align 4, addrspace(5)
  %33 = addrspacecast ptr addrspace(5) %32 to ptr
  %34 = alloca i32, align 4, addrspace(5)
  %35 = addrspacecast ptr addrspace(5) %34 to ptr
  %36 = alloca i32, align 4, addrspace(5)
  %37 = addrspacecast ptr addrspace(5) %36 to ptr
  %38 = alloca i32, align 4, addrspace(5)
  %39 = addrspacecast ptr addrspace(5) %38 to ptr
  %40 = alloca ptr, align 8, addrspace(5)
  %41 = addrspacecast ptr addrspace(5) %40 to ptr
  %42 = alloca i32, align 4, addrspace(5)
  %43 = addrspacecast ptr addrspace(5) %42 to ptr
  %44 = alloca %struct.float4, align 16, addrspace(5)
  %45 = alloca %struct.HIP_vector_type, align 16, addrspace(5)
  %46 = addrspacecast ptr addrspace(5) %45 to ptr
  %47 = addrspacecast ptr addrspace(5) %44 to ptr
  %48 = alloca i64, align 4, addrspace(5)
  %49 = addrspacecast ptr addrspace(5) %48 to ptr
  %50 = alloca i32, align 4, addrspace(5)
  %51 = addrspacecast ptr addrspace(5) %50 to ptr
  %52 = alloca i32, align 4, addrspace(5)
  %53 = addrspacecast ptr addrspace(5) %52 to ptr
  %54 = alloca i32, align 4, addrspace(5)
  %55 = addrspacecast ptr addrspace(5) %54 to ptr
  %56 = alloca %struct.float4, align 16, addrspace(5)
  %57 = alloca %struct.HIP_vector_type, align 16, addrspace(5)
  %58 = addrspacecast ptr addrspace(5) %57 to ptr
  %59 = addrspacecast ptr addrspace(5) %56 to ptr
  %60 = alloca %struct.float4, align 16, addrspace(5)
  %61 = alloca %struct.HIP_vector_type, align 16, addrspace(5)
  %62 = addrspacecast ptr addrspace(5) %61 to ptr
  %63 = addrspacecast ptr addrspace(5) %60 to ptr
  %64 = alloca %struct.float4, align 16, addrspace(5)
  %65 = alloca %struct.HIP_vector_type, align 16, addrspace(5)
  %66 = addrspacecast ptr addrspace(5) %65 to ptr
  %67 = addrspacecast ptr addrspace(5) %64 to ptr
  %68 = alloca i64, align 4, addrspace(5)
  %69 = addrspacecast ptr addrspace(5) %68 to ptr
  %70 = alloca %struct.float4, align 16, addrspace(5)
  %71 = alloca %struct.HIP_vector_type, align 16, addrspace(5)
  %72 = addrspacecast ptr addrspace(5) %71 to ptr
  %73 = addrspacecast ptr addrspace(5) %70 to ptr
  %74 = alloca i64, align 4, addrspace(5)
  %75 = addrspacecast ptr addrspace(5) %74 to ptr
  %76 = alloca %struct.float4, align 16, addrspace(5)
  %77 = addrspacecast ptr addrspace(5) %76 to ptr
  %78 = alloca i64, align 4, addrspace(5)
  %79 = addrspacecast ptr addrspace(5) %78 to ptr
  %80 = alloca %struct.float4, align 16, addrspace(5)
  %81 = addrspacecast ptr addrspace(5) %80 to ptr
  %82 = alloca i64, align 4, addrspace(5)
  %83 = addrspacecast ptr addrspace(5) %82 to ptr
  %84 = alloca %struct.float4, align 16, addrspace(5)
  %85 = alloca %struct.HIP_vector_type, align 16, addrspace(5)
  %86 = addrspacecast ptr addrspace(5) %85 to ptr
  %87 = addrspacecast ptr addrspace(5) %84 to ptr
  %88 = alloca %struct.float4, align 16, addrspace(5)
  %89 = addrspacecast ptr addrspace(5) %88 to ptr
  %90 = alloca %struct.float4, align 16, addrspace(5)
  %91 = addrspacecast ptr addrspace(5) %90 to ptr
  %92 = alloca %struct.float4, align 16, addrspace(5)
  %93 = alloca %struct.HIP_vector_type, align 16, addrspace(5)
  %94 = addrspacecast ptr addrspace(5) %93 to ptr
  %95 = addrspacecast ptr addrspace(5) %92 to ptr
  %96 = alloca %struct.float4, align 16, addrspace(5)
  %97 = addrspacecast ptr addrspace(5) %96 to ptr
  %98 = alloca %struct.float4, align 16, addrspace(5)
  %99 = addrspacecast ptr addrspace(5) %98 to ptr
  %100 = alloca %struct.float4, align 16, addrspace(5)
  %101 = alloca %struct.HIP_vector_type, align 16, addrspace(5)
  %102 = addrspacecast ptr addrspace(5) %101 to ptr
  %103 = addrspacecast ptr addrspace(5) %100 to ptr
  %104 = alloca %struct.float4, align 16, addrspace(5)
  %105 = addrspacecast ptr addrspace(5) %104 to ptr
  %106 = alloca %struct.float4, align 16, addrspace(5)
  %107 = alloca %struct.HIP_vector_type, align 16, addrspace(5)
  %108 = addrspacecast ptr addrspace(5) %107 to ptr
  %109 = addrspacecast ptr addrspace(5) %106 to ptr
  %110 = alloca %struct.float4, align 16, addrspace(5)
  %111 = addrspacecast ptr addrspace(5) %110 to ptr
  %112 = alloca i8, align 1, addrspace(5)
  %113 = addrspacecast ptr addrspace(5) %112 to ptr
  %114 = alloca i8, align 1, addrspace(5)
  %115 = addrspacecast ptr addrspace(5) %114 to ptr
  %116 = addrspacecast ptr addrspace(1) %0 to ptr
  store ptr %116, ptr %25, align 8
  store i32 %1, ptr %27, align 4
  store i32 %2, ptr %29, align 4
  %117 = call noundef i32 @_ZN25__cuda_builtin_blockIdx_t17__fetch_builtin_xEv() #7
  %118 = call noundef i32 @_ZN25__cuda_builtin_blockDim_t17__fetch_builtin_xEv() #7
  %119 = mul i32 %117, %118
  %120 = call noundef i32 @_ZN26__cuda_builtin_threadIdx_t17__fetch_builtin_xEv() #7
  %121 = add i32 %119, %120
  store i32 %121, ptr %31, align 4
  %122 = load i32, ptr %31, align 4
  %123 = load i32, ptr %29, align 4
  %124 = sdiv i32 %122, %123
  store i32 %124, ptr %33, align 4
  %125 = load i32, ptr %33, align 4
  %126 = icmp sge i32 %125, 1024
  br i1 %126, label %127, label %128

127:                                              ; preds = %3
  br label %391

128:                                              ; preds = %3
  %129 = load i32, ptr %31, align 4
  %130 = load i32, ptr %33, align 4
  %131 = load i32, ptr %29, align 4
  %132 = mul nsw i32 %130, %131
  %133 = sub nsw i32 %129, %132
  store i32 %133, ptr %35, align 4
  %134 = load i32, ptr %33, align 4
  %135 = sext i32 %134 to i64
  %136 = getelementptr inbounds [1025 x i32], ptr addrspacecast (ptr addrspace(4) @constStartAddr to ptr), i64 0, i64 %135
  %137 = load i32, ptr %136, align 4
  %138 = load i32, ptr %35, align 4
  %139 = load i32, ptr %27, align 4
  %140 = mul nsw i32 %138, %139
  %141 = add nsw i32 %137, %140
  store i32 %141, ptr %37, align 4
  %142 = load i32, ptr %37, align 4
  %143 = load i32, ptr %27, align 4
  %144 = sdiv i32 %143, 2
  %145 = add nsw i32 %142, %144
  store i32 %145, ptr %39, align 4
  %146 = load ptr, ptr %25, align 8
  %147 = load i32, ptr %37, align 4
  %148 = sext i32 %147 to i64
  %149 = getelementptr inbounds %struct.float4, ptr %146, i64 %148
  store ptr %149, ptr %41, align 8
  %150 = load i32, ptr %37, align 4
  %151 = load i32, ptr %33, align 4
  %152 = add nsw i32 %151, 1
  %153 = sext i32 %152 to i64
  %154 = getelementptr inbounds [1025 x i32], ptr addrspacecast (ptr addrspace(4) @constStartAddr to ptr), i64 0, i64 %153
  %155 = load i32, ptr %154, align 4
  %156 = icmp sge i32 %150, %155
  br i1 %156, label %157, label %158

157:                                              ; preds = %128
  br label %391

158:                                              ; preds = %128
  %159 = load i32, ptr %39, align 4
  %160 = load i32, ptr %33, align 4
  %161 = add nsw i32 %160, 1
  %162 = sext i32 %161 to i64
  %163 = getelementptr inbounds [1025 x i32], ptr addrspacecast (ptr addrspace(4) @constStartAddr to ptr), i64 0, i64 %162
  %164 = load i32, ptr %163, align 4
  %165 = icmp sge i32 %159, %164
  br i1 %165, label %166, label %207

166:                                              ; preds = %158
  store i32 0, ptr %43, align 4
  br label %167

167:                                              ; preds = %203, %166
  %168 = load i32, ptr %43, align 4
  %169 = load i32, ptr %33, align 4
  %170 = add nsw i32 %169, 1
  %171 = sext i32 %170 to i64
  %172 = getelementptr inbounds [1025 x i32], ptr addrspacecast (ptr addrspace(4) @constStartAddr to ptr), i64 0, i64 %171
  %173 = load i32, ptr %172, align 4
  %174 = load i32, ptr %37, align 4
  %175 = sub nsw i32 %173, %174
  %176 = icmp slt i32 %168, %175
  br i1 %176, label %177, label %206

177:                                              ; preds = %167
  call void @llvm.memcpy.p0.p0.i64(ptr %5, ptr addrspacecast (ptr addrspace(1) @tex to ptr), i64 88, i1 false)
  %178 = getelementptr inbounds %struct.textureReference, ptr %5, i32 0, i32 0
  %179 = call i64 @llvm.nvvm.texsurf.handle.internal.p1(ptr addrspace(1) @tex)
  store i64 %179, ptr %49, align 4
  %180 = load i32, ptr %37, align 4
  %181 = load i32, ptr %43, align 4
  %182 = add nsw i32 %180, %181
  %183 = load %struct.textureReference, ptr %178, align 8
  %184 = load i64, ptr %49, align 4
  %185 = call %struct.HIP_vector_type @_ZL10tex1DfetchI15HIP_vector_typeIfLj4EEL18hipTextureReadMode0EEN13__hip_tex_retIT_XT0_EbE4typeE7textureIS4_Li1EXT0_EEi(%struct.textureReference %183, i32 %182)
  %186 = call %struct.float4 @_ZL10tex1DfetchI6float4EN17__nv_tex_rmet_retIT_E4typeE7textureIS2_Li1EL19cudaTextureReadMode0EEi(%struct.textureReference %183, i32 noundef %182) #7
  %187 = getelementptr inbounds %struct.HIP_vector_type, ptr %7, i32 0, i32 0
  %188 = extractvalue %struct.HIP_vector_type %185, 0
  store %struct.HIP_vector_base %188, ptr %187, align 16
  %189 = getelementptr inbounds %struct.float4, ptr %46, i32 0, i32 0
  %190 = extractvalue %struct.HIP_vector_type %185, 0
  store float %190, ptr %187, align 16
  %191 = getelementptr inbounds %struct.float4, ptr %46, i32 0, i32 1
  %192 = extractvalue %struct.HIP_vector_type %185, 1
  store float %192, ptr %191, align 4
  %193 = getelementptr inbounds %struct.float4, ptr %46, i32 0, i32 2
  %194 = extractvalue %struct.HIP_vector_type %185, 2
  store float %194, ptr %193, align 8
  %195 = getelementptr inbounds %struct.float4, ptr %46, i32 0, i32 3
  %196 = extractvalue %struct.HIP_vector_type %185, 3
  store float %196, ptr %195, align 4
  %197 = load ptr, ptr %41, align 8
  %198 = load i32, ptr %43, align 4
  %199 = sext i32 %198 to i64
  %200 = getelementptr inbounds %struct.HIP_vector_type, ptr %197, i64 %199
  %201 = call dereferenceable(16) ptr @_ZN15HIP_vector_typeIfLj4EEaSERKS0_(ptr dereferenceable(16) %200, ptr dereferenceable(16) %7)
  %202 = getelementptr inbounds %struct.float4, ptr %197, i64 %199
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %200, ptr align 16 %46, i64 16, i1 false)
  br label %203

203:                                              ; preds = %177
  %204 = load i32, ptr %43, align 4
  %205 = add nsw i32 %204, 1
  store i32 %205, ptr %43, align 4
  br label %167, !llvm.loop !12

206:                                              ; preds = %167
  br label %391

207:                                              ; preds = %158
  store i32 0, ptr %51, align 4
  store i32 0, ptr %53, align 4
  store i32 0, ptr %55, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr %9, ptr addrspacecast (ptr addrspace(1) @tex to ptr), i64 88, i1 false)
  %208 = getelementptr inbounds %struct.textureReference, ptr %9, i32 0, i32 0
  %209 = call i64 @llvm.nvvm.texsurf.handle.internal.p1(ptr addrspace(1) @tex)
  store i64 %209, ptr %69, align 4
  %210 = load i32, ptr %37, align 4
  %211 = load i32, ptr %51, align 4
  %212 = add nsw i32 %210, %211
  %213 = load %struct.textureReference, ptr %208, align 8
  %214 = load i64, ptr %69, align 4
  %215 = call %struct.HIP_vector_type @_ZL10tex1DfetchI15HIP_vector_typeIfLj4EEL18hipTextureReadMode0EEN13__hip_tex_retIT_XT0_EbE4typeE7textureIS4_Li1EXT0_EEi(%struct.textureReference %213, i32 %212)
  %216 = call %struct.float4 @_ZL10tex1DfetchI6float4EN17__nv_tex_rmet_retIT_E4typeE7textureIS2_Li1EL19cudaTextureReadMode0EEi(%struct.textureReference %213, i32 noundef %212) #7
  %217 = getelementptr inbounds %struct.HIP_vector_type, ptr %11, i32 0, i32 0
  %218 = extractvalue %struct.HIP_vector_type %215, 0
  store %struct.HIP_vector_base %218, ptr %217, align 16
  %219 = getelementptr inbounds %struct.float4, ptr %66, i32 0, i32 0
  %220 = extractvalue %struct.HIP_vector_type %215, 0
  store float %220, ptr %217, align 16
  %221 = getelementptr inbounds %struct.float4, ptr %66, i32 0, i32 1
  %222 = extractvalue %struct.HIP_vector_type %215, 1
  store float %222, ptr %221, align 4
  %223 = getelementptr inbounds %struct.float4, ptr %66, i32 0, i32 2
  %224 = extractvalue %struct.HIP_vector_type %215, 2
  store float %224, ptr %223, align 8
  %225 = getelementptr inbounds %struct.float4, ptr %66, i32 0, i32 3
  %226 = extractvalue %struct.HIP_vector_type %215, 3
  store float %226, ptr %225, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %58, ptr align 16 %66, i64 16, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr %13, ptr addrspacecast (ptr addrspace(1) @tex to ptr), i64 88, i1 false)
  %227 = getelementptr inbounds %struct.textureReference, ptr %13, i32 0, i32 0
  %228 = call i64 @llvm.nvvm.texsurf.handle.internal.p1(ptr addrspace(1) @tex)
  store i64 %228, ptr %75, align 4
  %229 = load i32, ptr %39, align 4
  %230 = load i32, ptr %53, align 4
  %231 = add nsw i32 %229, %230
  %232 = load %struct.textureReference, ptr %227, align 8
  %233 = load i64, ptr %75, align 4
  %234 = call %struct.HIP_vector_type @_ZL10tex1DfetchI15HIP_vector_typeIfLj4EEL18hipTextureReadMode0EEN13__hip_tex_retIT_XT0_EbE4typeE7textureIS4_Li1EXT0_EEi(%struct.textureReference %232, i32 %231)
  %235 = call %struct.float4 @_ZL10tex1DfetchI6float4EN17__nv_tex_rmet_retIT_E4typeE7textureIS2_Li1EL19cudaTextureReadMode0EEi(%struct.textureReference %232, i32 noundef %231) #7
  %236 = getelementptr inbounds %struct.HIP_vector_type, ptr %15, i32 0, i32 0
  %237 = extractvalue %struct.HIP_vector_type %234, 0
  store %struct.HIP_vector_base %237, ptr %236, align 16
  %238 = getelementptr inbounds %struct.float4, ptr %72, i32 0, i32 0
  %239 = extractvalue %struct.HIP_vector_type %234, 0
  store float %239, ptr %236, align 16
  %240 = getelementptr inbounds %struct.float4, ptr %72, i32 0, i32 1
  %241 = extractvalue %struct.HIP_vector_type %234, 1
  store float %241, ptr %240, align 4
  %242 = getelementptr inbounds %struct.float4, ptr %72, i32 0, i32 2
  %243 = extractvalue %struct.HIP_vector_type %234, 2
  store float %243, ptr %242, align 8
  %244 = getelementptr inbounds %struct.float4, ptr %72, i32 0, i32 3
  %245 = extractvalue %struct.HIP_vector_type %234, 3
  store float %245, ptr %244, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %62, ptr align 16 %72, i64 16, i1 false)
  br label %246

246:                                              ; preds = %207, %384
  call void @llvm.memcpy.p0.p0.i64(ptr %17, ptr addrspacecast (ptr addrspace(1) @tex to ptr), i64 88, i1 false)
  %247 = getelementptr inbounds %struct.textureReference, ptr %17, i32 0, i32 0
  %248 = call i64 @llvm.nvvm.texsurf.handle.internal.p1(ptr addrspace(1) @tex)
  store i64 %248, ptr %79, align 4
  %249 = load i32, ptr %37, align 4
  %250 = load i32, ptr %51, align 4
  %251 = add nsw i32 %249, %250
  %252 = add nsw i32 %251, 1
  %253 = load %struct.textureReference, ptr %247, align 8
  %254 = load i64, ptr %79, align 4
  %255 = call %struct.HIP_vector_type @_ZL10tex1DfetchI15HIP_vector_typeIfLj4EEL18hipTextureReadMode0EEN13__hip_tex_retIT_XT0_EbE4typeE7textureIS4_Li1EXT0_EEi(%struct.textureReference %253, i32 %252)
  %256 = call %struct.float4 @_ZL10tex1DfetchI6float4EN17__nv_tex_rmet_retIT_E4typeE7textureIS2_Li1EL19cudaTextureReadMode0EEi(%struct.textureReference %253, i32 noundef %252) #7
  %257 = getelementptr inbounds %struct.HIP_vector_type, ptr %19, i32 0, i32 0
  %258 = extractvalue %struct.HIP_vector_type %255, 0
  store %struct.HIP_vector_base %258, ptr %257, align 16
  %259 = getelementptr inbounds %struct.float4, ptr %77, i32 0, i32 0
  %260 = extractvalue %struct.HIP_vector_type %255, 0
  store float %260, ptr %257, align 16
  %261 = getelementptr inbounds %struct.float4, ptr %77, i32 0, i32 1
  %262 = extractvalue %struct.HIP_vector_type %255, 1
  store float %262, ptr %261, align 4
  %263 = getelementptr inbounds %struct.float4, ptr %77, i32 0, i32 2
  %264 = extractvalue %struct.HIP_vector_type %255, 2
  store float %264, ptr %263, align 8
  %265 = getelementptr inbounds %struct.float4, ptr %77, i32 0, i32 3
  %266 = extractvalue %struct.HIP_vector_type %255, 3
  store float %266, ptr %265, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr %21, ptr addrspacecast (ptr addrspace(1) @tex to ptr), i64 88, i1 false)
  %267 = getelementptr inbounds %struct.textureReference, ptr %21, i32 0, i32 0
  %268 = call i64 @llvm.nvvm.texsurf.handle.internal.p1(ptr addrspace(1) @tex)
  store i64 %268, ptr %83, align 4
  %269 = load i32, ptr %39, align 4
  %270 = load i32, ptr %53, align 4
  %271 = add nsw i32 %269, %270
  %272 = add nsw i32 %271, 1
  %273 = load %struct.textureReference, ptr %267, align 8
  %274 = load i64, ptr %83, align 4
  %275 = call %struct.HIP_vector_type @_ZL10tex1DfetchI15HIP_vector_typeIfLj4EEL18hipTextureReadMode0EEN13__hip_tex_retIT_XT0_EbE4typeE7textureIS4_Li1EXT0_EEi(%struct.textureReference %273, i32 %272)
  %276 = call %struct.float4 @_ZL10tex1DfetchI6float4EN17__nv_tex_rmet_retIT_E4typeE7textureIS2_Li1EL19cudaTextureReadMode0EEi(%struct.textureReference %273, i32 noundef %272) #7
  %277 = getelementptr inbounds %struct.HIP_vector_type, ptr %23, i32 0, i32 0
  %278 = extractvalue %struct.HIP_vector_type %275, 0
  store %struct.HIP_vector_base %278, ptr %277, align 16
  %279 = getelementptr inbounds %struct.float4, ptr %81, i32 0, i32 0
  %280 = extractvalue %struct.HIP_vector_type %275, 0
  store float %280, ptr %277, align 16
  %281 = getelementptr inbounds %struct.float4, ptr %81, i32 0, i32 1
  %282 = extractvalue %struct.HIP_vector_type %275, 1
  store float %282, ptr %281, align 4
  %283 = getelementptr inbounds %struct.float4, ptr %81, i32 0, i32 2
  %284 = extractvalue %struct.HIP_vector_type %275, 2
  store float %284, ptr %283, align 8
  %285 = getelementptr inbounds %struct.float4, ptr %81, i32 0, i32 3
  %286 = extractvalue %struct.HIP_vector_type %275, 3
  store float %286, ptr %285, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %89, ptr align 16 %58, i64 16, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %91, ptr align 16 %62, i64 16, i1 false)
  %287 = call %struct.float4 @_Z9getLowest6float4S_(ptr noundef byval(%struct.float4) align 16 %89, ptr noundef byval(%struct.float4) align 16 %91) #7
  %288 = getelementptr inbounds %struct.float4, ptr %86, i32 0, i32 0
  %289 = extractvalue %struct.float4 %287, 0
  store float %289, ptr %288, align 16
  %290 = getelementptr inbounds %struct.float4, ptr %86, i32 0, i32 1
  %291 = extractvalue %struct.float4 %287, 1
  store float %291, ptr %290, align 4
  %292 = getelementptr inbounds %struct.float4, ptr %86, i32 0, i32 2
  %293 = extractvalue %struct.float4 %287, 2
  store float %293, ptr %292, align 8
  %294 = getelementptr inbounds %struct.float4, ptr %86, i32 0, i32 3
  %295 = extractvalue %struct.float4 %287, 3
  store float %295, ptr %294, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %97, ptr align 16 %58, i64 16, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %99, ptr align 16 %62, i64 16, i1 false)
  %296 = call %struct.float4 @_Z10getHighest6float4S_(ptr noundef byval(%struct.float4) align 16 %97, ptr noundef byval(%struct.float4) align 16 %99) #7
  %297 = getelementptr inbounds %struct.float4, ptr %94, i32 0, i32 0
  %298 = extractvalue %struct.float4 %296, 0
  store float %298, ptr %297, align 16
  %299 = getelementptr inbounds %struct.float4, ptr %94, i32 0, i32 1
  %300 = extractvalue %struct.float4 %296, 1
  store float %300, ptr %299, align 4
  %301 = getelementptr inbounds %struct.float4, ptr %94, i32 0, i32 2
  %302 = extractvalue %struct.float4 %296, 2
  store float %302, ptr %301, align 8
  %303 = getelementptr inbounds %struct.float4, ptr %94, i32 0, i32 3
  %304 = extractvalue %struct.float4 %296, 3
  store float %304, ptr %303, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %105, ptr align 16 %86, i64 16, i1 false)
  %305 = call %struct.float4 @_Z8sortElem6float4(ptr noundef byval(%struct.float4) align 16 %105) #7
  %306 = getelementptr inbounds %struct.float4, ptr %102, i32 0, i32 0
  %307 = extractvalue %struct.float4 %305, 0
  store float %307, ptr %306, align 16
  %308 = getelementptr inbounds %struct.float4, ptr %102, i32 0, i32 1
  %309 = extractvalue %struct.float4 %305, 1
  store float %309, ptr %308, align 4
  %310 = getelementptr inbounds %struct.float4, ptr %102, i32 0, i32 2
  %311 = extractvalue %struct.float4 %305, 2
  store float %311, ptr %310, align 8
  %312 = getelementptr inbounds %struct.float4, ptr %102, i32 0, i32 3
  %313 = extractvalue %struct.float4 %305, 3
  store float %313, ptr %312, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %58, ptr align 16 %102, i64 16, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %111, ptr align 16 %94, i64 16, i1 false)
  %314 = call %struct.float4 @_Z8sortElem6float4(ptr noundef byval(%struct.float4) align 16 %111) #7
  %315 = getelementptr inbounds %struct.float4, ptr %108, i32 0, i32 0
  %316 = extractvalue %struct.float4 %314, 0
  store float %316, ptr %315, align 16
  %317 = getelementptr inbounds %struct.float4, ptr %108, i32 0, i32 1
  %318 = extractvalue %struct.float4 %314, 1
  store float %318, ptr %317, align 4
  %319 = getelementptr inbounds %struct.float4, ptr %108, i32 0, i32 2
  %320 = extractvalue %struct.float4 %314, 2
  store float %320, ptr %319, align 8
  %321 = getelementptr inbounds %struct.float4, ptr %108, i32 0, i32 3
  %322 = extractvalue %struct.float4 %314, 3
  store float %322, ptr %321, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %62, ptr align 16 %108, i64 16, i1 false)
  %323 = load ptr, ptr %41, align 8
  %324 = load i32, ptr %55, align 4
  %325 = add nsw i32 %324, 1
  store i32 %325, ptr %55, align 4
  %326 = sext i32 %324 to i64
  %327 = getelementptr inbounds %struct.HIP_vector_type, ptr %323, i64 %326
  %328 = getelementptr inbounds %struct.float4, ptr %323, i64 %326
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %327, ptr align 16 %58, i64 16, i1 false)
  %329 = load i32, ptr %51, align 4
  %330 = add nsw i32 %329, 1
  %331 = load i32, ptr %27, align 4
  %332 = sdiv i32 %331, 2
  %333 = icmp slt i32 %330, %332
  %334 = zext i1 %333 to i8
  store i8 %334, ptr %113, align 1
  %335 = load i32, ptr %53, align 4
  %336 = add nsw i32 %335, 1
  %337 = load i32, ptr %27, align 4
  %338 = sdiv i32 %337, 2
  %339 = icmp slt i32 %336, %338
  br i1 %339, label %340, label %351

340:                                              ; preds = %246
  %341 = load i32, ptr %39, align 4
  %342 = load i32, ptr %53, align 4
  %343 = add nsw i32 %341, %342
  %344 = add nsw i32 %343, 1
  %345 = load i32, ptr %33, align 4
  %346 = add nsw i32 %345, 1
  %347 = sext i32 %346 to i64
  %348 = getelementptr inbounds [1025 x i32], ptr addrspacecast (ptr addrspace(4) @constStartAddr to ptr), i64 0, i64 %347
  %349 = load i32, ptr %348, align 4
  %350 = icmp slt i32 %344, %349
  br label %351

351:                                              ; preds = %340, %246
  %352 = phi i1 [ false, %246 ], [ %350, %340 ]
  %353 = zext i1 %352 to i8
  store i8 %353, ptr %115, align 1
  %354 = load i8, ptr %113, align 1
  %355 = trunc i8 %354 to i1
  br i1 %355, label %356, label %376

356:                                              ; preds = %351
  %357 = load i8, ptr %115, align 1
  %358 = trunc i8 %357 to i1
  br i1 %358, label %359, label %372

359:                                              ; preds = %356
  %360 = getelementptr inbounds %struct.float4, ptr %77, i32 0, i32 0
  %361 = load float, ptr %360, align 16
  %362 = getelementptr inbounds %struct.float4, ptr %81, i32 0, i32 0
  %363 = load float, ptr %362, align 16
  %364 = fcmp contract olt float %361, %363
  br i1 %364, label %365, label %368

365:                                              ; preds = %359
  %366 = load i32, ptr %51, align 4
  %367 = add nsw i32 %366, 1
  store i32 %367, ptr %51, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %58, ptr align 16 %77, i64 16, i1 false)
  br label %371

368:                                              ; preds = %359
  %369 = load i32, ptr %53, align 4
  %370 = add nsw i32 %369, 1
  store i32 %370, ptr %53, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %58, ptr align 16 %81, i64 16, i1 false)
  br label %371

371:                                              ; preds = %368, %365
  br label %375

372:                                              ; preds = %356
  %373 = load i32, ptr %51, align 4
  %374 = add nsw i32 %373, 1
  store i32 %374, ptr %51, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %58, ptr align 16 %77, i64 16, i1 false)
  br label %375

375:                                              ; preds = %372, %371
  br label %384

376:                                              ; preds = %351
  %377 = load i8, ptr %115, align 1
  %378 = trunc i8 %377 to i1
  br i1 %378, label %379, label %382

379:                                              ; preds = %376
  %380 = load i32, ptr %53, align 4
  %381 = add nsw i32 %380, 1
  store i32 %381, ptr %53, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %58, ptr align 16 %81, i64 16, i1 false)
  br label %383

382:                                              ; preds = %376
  br label %385

383:                                              ; preds = %379
  br label %384

384:                                              ; preds = %383, %375
  br label %246, !llvm.loop !14

385:                                              ; preds = %382
  %386 = load ptr, ptr %41, align 8
  %387 = load i32, ptr %55, align 4
  %388 = add nsw i32 %387, 1
  store i32 %388, ptr %55, align 4
  %389 = sext i32 %387 to i64
  %390 = getelementptr inbounds %struct.float4, ptr %386, i64 %389
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %390, ptr align 16 %62, i64 16, i1 false)
  br label %391

391:                                              ; preds = %385, %206, %157, %127
  ret void
}

 out ptr 
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %327, ptr align 16 %58, i64 16, i1 false) I 
heree
llvm.memcpy.p0.p0.i64
 999 
 there 12 
  %329 = load i32, ptr %51, align 4 I 
  %330 = add nsw i32 %329, 1 I 
  %331 = load i32, ptr %27, align 4 I 
  %332 = sdiv i32 %331, 2 I 
  %333 = icmp slt i32 %330, %332 I 
  %334 = zext i1 %333 to i8 I 
  store i8 %334, ptr %113, align 1 I 
  %335 = load i32, ptr %53, align 4 I 
  %336 = add nsw i32 %335, 1 I 
  %337 = load i32, ptr %27, align 4 I 
  %338 = sdiv i32 %337, 2 I 
  %339 = icmp slt i32 %336, %338 I 
  br i1 %339, label %340, label %351 I 
  %341 = load i32, ptr %39, align 4 I 
  %342 = load i32, ptr %53, align 4 I 
  %343 = add nsw i32 %341, %342 I 
  %344 = add nsw i32 %343, 1 I 
  %345 = load i32, ptr %33, align 4 I 
  %346 = add nsw i32 %345, 1 I 
  %347 = sext i32 %346 to i64 I 
  %348 = getelementptr inbounds [1025 x i32], ptr addrspacecast (ptr addrspace(4) @constStartAddr to ptr), i64 0, i64 %347 I 
 getelementptr here 
 abc 
  %348 = getelementptr inbounds [1025 x i32], ptr addrspacecast (ptr addrspace(4) @constStartAddr to ptr), i64 0, i64 %347
 abc 
 out ptr 
  %349 = load i32, ptr %348, align 4 I 
  %350 = icmp slt i32 %344, %349 I 
  br label %351 I 
  %352 = phi i1 [ false, %246 ], [ %350, %340 ] I 
  %353 = zext i1 %352 to i8 I 
  store i8 %353, ptr %115, align 1 I 
  %354 = load i8, ptr %113, align 1 I 
  %355 = trunc i8 %354 to i1 I 
  br i1 %355, label %356, label %376 I 
  %357 = load i8, ptr %115, align 1 I 
  %358 = trunc i8 %357 to i1 I 
  br i1 %358, label %359, label %372 I 
  %360 = getelementptr inbounds %struct.float4, ptr %77, i32 0, i32 0 I 
 getelementptr here 
 abc 
  %360 = getelementptr inbounds %struct.float4, ptr %77, i32 0, i32 0
 abc 
 888888 
  %361 = load float, ptr %360, align 16
 out ptr 
  %361 = load float, ptr %360, align 16 I 
  %362 = getelementptr inbounds %struct.float4, ptr %81, i32 0, i32 0 I 
 getelementptr here 
 abc 
  %362 = getelementptr inbounds %struct.float4, ptr %81, i32 0, i32 0
 abc 
 888888 
  %363 = load float, ptr %362, align 16
 out ptr 
  %363 = load float, ptr %362, align 16 I 
  %364 = fcmp contract olt float %361, %363 I 
  br i1 %364, label %365, label %368 I 
  %366 = load i32, ptr %51, align 4 I 
  %367 = add nsw i32 %366, 1 I 
  store i32 %367, ptr %51, align 4 I 
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %58, ptr align 16 %77, i64 16, i1 false) I 
heree
llvm.memcpy.p0.p0.i64
 999 
 there 12 
  br label %373 I 
  %371 = load i32, ptr %53, align 4 I 
  %372 = add nsw i32 %371, 1 I 
  store i32 %372, ptr %53, align 4 I 
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %58, ptr align 16 %83, i64 16, i1 false) I 
heree
llvm.memcpy.p0.p0.i64
 999 
 there 12 
  br label %375 I 
  br label %379 I 
  %377 = load i32, ptr %51, align 4 I 
  %378 = add nsw i32 %377, 1 I 
  store i32 %378, ptr %51, align 4 I 
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %58, ptr align 16 %78, i64 16, i1 false) I 
heree
llvm.memcpy.p0.p0.i64
 999 
 there 12 
  br label %379 I 
  br label %388 I 
  %381 = load i8, ptr %119, align 1 I 
  %382 = trunc i8 %381 to i1 I 
  br i1 %382, label %383, label %386 I 
  %384 = load i32, ptr %53, align 4 I 
  %385 = add nsw i32 %384, 1 I 
  store i32 %385, ptr %53, align 4 I 
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %58, ptr align 16 %84, i64 16, i1 false) I 
heree
llvm.memcpy.p0.p0.i64
 999 
 there 12 
  br label %387 I 
  br label %389 I 
  br label %388 I 
  br label %250, !llvm.loop !14 I 
  %390 = load ptr, ptr %41, align 8 I 
  %391 = load i32, ptr %55, align 4 I 
  %392 = add nsw i32 %391, 1 I 
  store i32 %392, ptr %55, align 4 I 
  %393 = sext i32 %391 to i64 I 
  %394 = getelementptr inbounds %struct.float4, ptr %390, i64 %393 I 
 getelementptr here 
 abc 
  %394 = getelementptr inbounds %struct.float4, ptr %390, i64 %393
 abc 
 888888 
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %394, ptr align 16 %62, i64 16, i1 false)
  %62 = addrspacecast ptr addrspace(5) %61 to ptr
; Function Attrs: convergent mustprogress noinline norecurse nounwind optnone
define amdgpu_kernel void @_Z13mergeSortPassP6float4ii(ptr addrspace(1) noundef %0, i32 noundef %1, i32 noundef %2) #1 {
  %4 = alloca %struct.texture, align 8, addrspace(5)
  %5 = addrspacecast ptr addrspace(5) %4 to ptr
  %6 = alloca %struct.HIP_vector_type, align 16, addrspace(5)
  %7 = addrspacecast ptr addrspace(5) %6 to ptr
  %8 = alloca %struct.texture, align 8, addrspace(5)
  %9 = addrspacecast ptr addrspace(5) %8 to ptr
  %10 = alloca %struct.HIP_vector_type, align 16, addrspace(5)
  %11 = addrspacecast ptr addrspace(5) %10 to ptr
  %12 = alloca %struct.texture, align 8, addrspace(5)
  %13 = addrspacecast ptr addrspace(5) %12 to ptr
  %14 = alloca %struct.HIP_vector_type, align 16, addrspace(5)
  %15 = addrspacecast ptr addrspace(5) %14 to ptr
  %16 = alloca %struct.texture, align 8, addrspace(5)
  %17 = addrspacecast ptr addrspace(5) %16 to ptr
  %18 = alloca %struct.HIP_vector_type, align 16, addrspace(5)
  %19 = addrspacecast ptr addrspace(5) %18 to ptr
  %20 = alloca %struct.texture, align 8, addrspace(5)
  %21 = addrspacecast ptr addrspace(5) %20 to ptr
  %22 = alloca %struct.HIP_vector_type, align 16, addrspace(5)
  %23 = addrspacecast ptr addrspace(5) %22 to ptr
  %24 = alloca ptr, align 8, addrspace(5)
  %25 = addrspacecast ptr addrspace(5) %24 to ptr
  %26 = alloca i32, align 4, addrspace(5)
  %27 = addrspacecast ptr addrspace(5) %26 to ptr
  %28 = alloca i32, align 4, addrspace(5)
  %29 = addrspacecast ptr addrspace(5) %28 to ptr
  %30 = alloca i32, align 4, addrspace(5)
  %31 = addrspacecast ptr addrspace(5) %30 to ptr
  %32 = alloca i32, align 4, addrspace(5)
  %33 = addrspacecast ptr addrspace(5) %32 to ptr
  %34 = alloca i32, align 4, addrspace(5)
  %35 = addrspacecast ptr addrspace(5) %34 to ptr
  %36 = alloca i32, align 4, addrspace(5)
  %37 = addrspacecast ptr addrspace(5) %36 to ptr
  %38 = alloca i32, align 4, addrspace(5)
  %39 = addrspacecast ptr addrspace(5) %38 to ptr
  %40 = alloca ptr, align 8, addrspace(5)
  %41 = addrspacecast ptr addrspace(5) %40 to ptr
  %42 = alloca i32, align 4, addrspace(5)
  %43 = addrspacecast ptr addrspace(5) %42 to ptr
  %44 = alloca %struct.float4, align 16, addrspace(5)
  %45 = alloca %struct.HIP_vector_type, align 16, addrspace(5)
  %46 = addrspacecast ptr addrspace(5) %45 to ptr
  %47 = addrspacecast ptr addrspace(5) %44 to ptr
  %48 = alloca i64, align 4, addrspace(5)
  %49 = addrspacecast ptr addrspace(5) %48 to ptr
  %50 = alloca i32, align 4, addrspace(5)
  %51 = addrspacecast ptr addrspace(5) %50 to ptr
  %52 = alloca i32, align 4, addrspace(5)
  %53 = addrspacecast ptr addrspace(5) %52 to ptr
  %54 = alloca i32, align 4, addrspace(5)
  %55 = addrspacecast ptr addrspace(5) %54 to ptr
  %56 = alloca %struct.float4, align 16, addrspace(5)
  %57 = alloca %struct.HIP_vector_type, align 16, addrspace(5)
  %58 = addrspacecast ptr addrspace(5) %57 to ptr
  %59 = addrspacecast ptr addrspace(5) %56 to ptr
  %60 = alloca %struct.float4, align 16, addrspace(5)
  %61 = alloca %struct.HIP_vector_type, align 16, addrspace(5)
  %62 = addrspacecast ptr addrspace(5) %61 to ptr
  %63 = addrspacecast ptr addrspace(5) %60 to ptr
  %64 = alloca %struct.float4, align 16, addrspace(5)
  %65 = alloca %struct.HIP_vector_type, align 16, addrspace(5)
  %66 = addrspacecast ptr addrspace(5) %65 to ptr
  %67 = addrspacecast ptr addrspace(5) %64 to ptr
  %68 = alloca i64, align 4, addrspace(5)
  %69 = addrspacecast ptr addrspace(5) %68 to ptr
  %70 = alloca %struct.float4, align 16, addrspace(5)
  %71 = alloca %struct.HIP_vector_type, align 16, addrspace(5)
  %72 = addrspacecast ptr addrspace(5) %71 to ptr
  %73 = addrspacecast ptr addrspace(5) %70 to ptr
  %74 = alloca i64, align 4, addrspace(5)
  %75 = addrspacecast ptr addrspace(5) %74 to ptr
  %76 = alloca %struct.float4, align 16, addrspace(5)
  %77 = alloca %struct.HIP_vector_type, align 16, addrspace(5)
  %78 = addrspacecast ptr addrspace(5) %77 to ptr
  %79 = addrspacecast ptr addrspace(5) %76 to ptr
  %80 = alloca i64, align 4, addrspace(5)
  %81 = addrspacecast ptr addrspace(5) %80 to ptr
  %82 = alloca %struct.float4, align 16, addrspace(5)
  %83 = alloca %struct.HIP_vector_type, align 16, addrspace(5)
  %84 = addrspacecast ptr addrspace(5) %83 to ptr
  %85 = addrspacecast ptr addrspace(5) %82 to ptr
  %86 = alloca i64, align 4, addrspace(5)
  %87 = addrspacecast ptr addrspace(5) %86 to ptr
  %88 = alloca %struct.float4, align 16, addrspace(5)
  %89 = alloca %struct.HIP_vector_type, align 16, addrspace(5)
  %90 = addrspacecast ptr addrspace(5) %89 to ptr
  %91 = addrspacecast ptr addrspace(5) %88 to ptr
  %92 = alloca %struct.float4, align 16, addrspace(5)
  %93 = addrspacecast ptr addrspace(5) %92 to ptr
  %94 = alloca %struct.float4, align 16, addrspace(5)
  %95 = addrspacecast ptr addrspace(5) %94 to ptr
  %96 = alloca %struct.float4, align 16, addrspace(5)
  %97 = alloca %struct.HIP_vector_type, align 16, addrspace(5)
  %98 = addrspacecast ptr addrspace(5) %97 to ptr
  %99 = addrspacecast ptr addrspace(5) %96 to ptr
  %100 = alloca %struct.float4, align 16, addrspace(5)
  %101 = addrspacecast ptr addrspace(5) %100 to ptr
  %102 = alloca %struct.float4, align 16, addrspace(5)
  %103 = addrspacecast ptr addrspace(5) %102 to ptr
  %104 = alloca %struct.float4, align 16, addrspace(5)
  %105 = alloca %struct.HIP_vector_type, align 16, addrspace(5)
  %106 = addrspacecast ptr addrspace(5) %105 to ptr
  %107 = addrspacecast ptr addrspace(5) %104 to ptr
  %108 = alloca %struct.float4, align 16, addrspace(5)
  %109 = addrspacecast ptr addrspace(5) %108 to ptr
  %110 = alloca %struct.float4, align 16, addrspace(5)
  %111 = alloca %struct.HIP_vector_type, align 16, addrspace(5)
  %112 = addrspacecast ptr addrspace(5) %111 to ptr
  %113 = addrspacecast ptr addrspace(5) %110 to ptr
  %114 = alloca %struct.float4, align 16, addrspace(5)
  %115 = addrspacecast ptr addrspace(5) %114 to ptr
  %116 = alloca i8, align 1, addrspace(5)
  %117 = addrspacecast ptr addrspace(5) %116 to ptr
  %118 = alloca i8, align 1, addrspace(5)
  %119 = addrspacecast ptr addrspace(5) %118 to ptr
  %120 = addrspacecast ptr addrspace(1) %0 to ptr
  store ptr %120, ptr %25, align 8
  store i32 %1, ptr %27, align 4
  store i32 %2, ptr %29, align 4
  %121 = call noundef i32 @_ZN25__cuda_builtin_blockIdx_t17__fetch_builtin_xEv() #7
  %122 = call noundef i32 @_ZN25__cuda_builtin_blockDim_t17__fetch_builtin_xEv() #7
  %123 = mul i32 %121, %122
  %124 = call noundef i32 @_ZN26__cuda_builtin_threadIdx_t17__fetch_builtin_xEv() #7
  %125 = add i32 %123, %124
  store i32 %125, ptr %31, align 4
  %126 = load i32, ptr %31, align 4
  %127 = load i32, ptr %29, align 4
  %128 = sdiv i32 %126, %127
  store i32 %128, ptr %33, align 4
  %129 = load i32, ptr %33, align 4
  %130 = icmp sge i32 %129, 1024
  br i1 %130, label %131, label %132

131:                                              ; preds = %3
  br label %396

132:                                              ; preds = %3
  %133 = load i32, ptr %31, align 4
  %134 = load i32, ptr %33, align 4
  %135 = load i32, ptr %29, align 4
  %136 = mul nsw i32 %134, %135
  %137 = sub nsw i32 %133, %136
  store i32 %137, ptr %35, align 4
  %138 = load i32, ptr %33, align 4
  %139 = sext i32 %138 to i64
  %140 = getelementptr inbounds [1025 x i32], ptr addrspacecast (ptr addrspace(4) @constStartAddr to ptr), i64 0, i64 %139
  %141 = load i32, ptr %140, align 4
  %142 = load i32, ptr %35, align 4
  %143 = load i32, ptr %27, align 4
  %144 = mul nsw i32 %142, %143
  %145 = add nsw i32 %141, %144
  store i32 %145, ptr %37, align 4
  %146 = load i32, ptr %37, align 4
  %147 = load i32, ptr %27, align 4
  %148 = sdiv i32 %147, 2
  %149 = add nsw i32 %146, %148
  store i32 %149, ptr %39, align 4
  %150 = load ptr, ptr %25, align 8
  %151 = load i32, ptr %37, align 4
  %152 = sext i32 %151 to i64
  %153 = getelementptr inbounds %struct.float4, ptr %150, i64 %152
  store ptr %153, ptr %41, align 8
  %154 = load i32, ptr %37, align 4
  %155 = load i32, ptr %33, align 4
  %156 = add nsw i32 %155, 1
  %157 = sext i32 %156 to i64
  %158 = getelementptr inbounds [1025 x i32], ptr addrspacecast (ptr addrspace(4) @constStartAddr to ptr), i64 0, i64 %157
  %159 = load i32, ptr %158, align 4
  %160 = icmp sge i32 %154, %159
  br i1 %160, label %161, label %162

161:                                              ; preds = %132
  br label %396

162:                                              ; preds = %132
  %163 = load i32, ptr %39, align 4
  %164 = load i32, ptr %33, align 4
  %165 = add nsw i32 %164, 1
  %166 = sext i32 %165 to i64
  %167 = getelementptr inbounds [1025 x i32], ptr addrspacecast (ptr addrspace(4) @constStartAddr to ptr), i64 0, i64 %166
  %168 = load i32, ptr %167, align 4
  %169 = icmp sge i32 %163, %168
  br i1 %169, label %170, label %211

170:                                              ; preds = %162
  store i32 0, ptr %43, align 4
  br label %171

171:                                              ; preds = %207, %170
  %172 = load i32, ptr %43, align 4
  %173 = load i32, ptr %33, align 4
  %174 = add nsw i32 %173, 1
  %175 = sext i32 %174 to i64
  %176 = getelementptr inbounds [1025 x i32], ptr addrspacecast (ptr addrspace(4) @constStartAddr to ptr), i64 0, i64 %175
  %177 = load i32, ptr %176, align 4
  %178 = load i32, ptr %37, align 4
  %179 = sub nsw i32 %177, %178
  %180 = icmp slt i32 %172, %179
  br i1 %180, label %181, label %210

181:                                              ; preds = %171
  call void @llvm.memcpy.p0.p0.i64(ptr %5, ptr addrspacecast (ptr addrspace(1) @tex to ptr), i64 88, i1 false)
  %182 = getelementptr inbounds %struct.textureReference, ptr %5, i32 0, i32 0
  %183 = call i64 @llvm.nvvm.texsurf.handle.internal.p1(ptr addrspace(1) @tex)
  store i64 %183, ptr %49, align 4
  %184 = load i32, ptr %37, align 4
  %185 = load i32, ptr %43, align 4
  %186 = add nsw i32 %184, %185
  %187 = load %struct.textureReference, ptr %182, align 8
  %188 = load i64, ptr %49, align 4
  %189 = call %struct.HIP_vector_type @_ZL10tex1DfetchI15HIP_vector_typeIfLj4EEL18hipTextureReadMode0EEN13__hip_tex_retIT_XT0_EbE4typeE7textureIS4_Li1EXT0_EEi(%struct.textureReference %187, i32 %186)
  %190 = call %struct.float4 @_ZL10tex1DfetchI6float4EN17__nv_tex_rmet_retIT_E4typeE7textureIS2_Li1EL19cudaTextureReadMode0EEi(%struct.textureReference %187, i32 noundef %186) #7
  %191 = getelementptr inbounds %struct.HIP_vector_type, ptr %7, i32 0, i32 0
  %192 = extractvalue %struct.HIP_vector_type %189, 0
  store %struct.HIP_vector_base %192, ptr %191, align 16
  %193 = getelementptr inbounds %struct.float4, ptr %46, i32 0, i32 0
  %194 = extractvalue %struct.HIP_vector_type %189, 0
  store float %194, ptr %191, align 16
  %195 = getelementptr inbounds %struct.float4, ptr %46, i32 0, i32 1
  %196 = extractvalue %struct.HIP_vector_type %189, 1
  store float %196, ptr %195, align 4
  %197 = getelementptr inbounds %struct.float4, ptr %46, i32 0, i32 2
  %198 = extractvalue %struct.HIP_vector_type %189, 2
  store float %198, ptr %197, align 8
  %199 = getelementptr inbounds %struct.float4, ptr %46, i32 0, i32 3
  %200 = extractvalue %struct.HIP_vector_type %189, 3
  store float %200, ptr %199, align 4
  %201 = load ptr, ptr %41, align 8
  %202 = load i32, ptr %43, align 4
  %203 = sext i32 %202 to i64
  %204 = getelementptr inbounds %struct.HIP_vector_type, ptr %201, i64 %203
  %205 = call dereferenceable(16) ptr @_ZN15HIP_vector_typeIfLj4EEaSERKS0_(ptr dereferenceable(16) %204, ptr dereferenceable(16) %7)
  %206 = getelementptr inbounds %struct.float4, ptr %201, i64 %203
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %204, ptr align 16 %46, i64 16, i1 false)
  br label %207

207:                                              ; preds = %181
  %208 = load i32, ptr %43, align 4
  %209 = add nsw i32 %208, 1
  store i32 %209, ptr %43, align 4
  br label %171, !llvm.loop !12

210:                                              ; preds = %171
  br label %396

211:                                              ; preds = %162
  store i32 0, ptr %51, align 4
  store i32 0, ptr %53, align 4
  store i32 0, ptr %55, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr %9, ptr addrspacecast (ptr addrspace(1) @tex to ptr), i64 88, i1 false)
  %212 = getelementptr inbounds %struct.textureReference, ptr %9, i32 0, i32 0
  %213 = call i64 @llvm.nvvm.texsurf.handle.internal.p1(ptr addrspace(1) @tex)
  store i64 %213, ptr %69, align 4
  %214 = load i32, ptr %37, align 4
  %215 = load i32, ptr %51, align 4
  %216 = add nsw i32 %214, %215
  %217 = load %struct.textureReference, ptr %212, align 8
  %218 = load i64, ptr %69, align 4
  %219 = call %struct.HIP_vector_type @_ZL10tex1DfetchI15HIP_vector_typeIfLj4EEL18hipTextureReadMode0EEN13__hip_tex_retIT_XT0_EbE4typeE7textureIS4_Li1EXT0_EEi(%struct.textureReference %217, i32 %216)
  %220 = call %struct.float4 @_ZL10tex1DfetchI6float4EN17__nv_tex_rmet_retIT_E4typeE7textureIS2_Li1EL19cudaTextureReadMode0EEi(%struct.textureReference %217, i32 noundef %216) #7
  %221 = getelementptr inbounds %struct.HIP_vector_type, ptr %11, i32 0, i32 0
  %222 = extractvalue %struct.HIP_vector_type %219, 0
  store %struct.HIP_vector_base %222, ptr %221, align 16
  %223 = getelementptr inbounds %struct.float4, ptr %66, i32 0, i32 0
  %224 = extractvalue %struct.HIP_vector_type %219, 0
  store float %224, ptr %221, align 16
  %225 = getelementptr inbounds %struct.float4, ptr %66, i32 0, i32 1
  %226 = extractvalue %struct.HIP_vector_type %219, 1
  store float %226, ptr %225, align 4
  %227 = getelementptr inbounds %struct.float4, ptr %66, i32 0, i32 2
  %228 = extractvalue %struct.HIP_vector_type %219, 2
  store float %228, ptr %227, align 8
  %229 = getelementptr inbounds %struct.float4, ptr %66, i32 0, i32 3
  %230 = extractvalue %struct.HIP_vector_type %219, 3
  store float %230, ptr %229, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %58, ptr align 16 %66, i64 16, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr %13, ptr addrspacecast (ptr addrspace(1) @tex to ptr), i64 88, i1 false)
  %231 = getelementptr inbounds %struct.textureReference, ptr %13, i32 0, i32 0
  %232 = call i64 @llvm.nvvm.texsurf.handle.internal.p1(ptr addrspace(1) @tex)
  store i64 %232, ptr %75, align 4
  %233 = load i32, ptr %39, align 4
  %234 = load i32, ptr %53, align 4
  %235 = add nsw i32 %233, %234
  %236 = load %struct.textureReference, ptr %231, align 8
  %237 = load i64, ptr %75, align 4
  %238 = call %struct.HIP_vector_type @_ZL10tex1DfetchI15HIP_vector_typeIfLj4EEL18hipTextureReadMode0EEN13__hip_tex_retIT_XT0_EbE4typeE7textureIS4_Li1EXT0_EEi(%struct.textureReference %236, i32 %235)
  %239 = call %struct.float4 @_ZL10tex1DfetchI6float4EN17__nv_tex_rmet_retIT_E4typeE7textureIS2_Li1EL19cudaTextureReadMode0EEi(%struct.textureReference %236, i32 noundef %235) #7
  %240 = getelementptr inbounds %struct.HIP_vector_type, ptr %15, i32 0, i32 0
  %241 = extractvalue %struct.HIP_vector_type %238, 0
  store %struct.HIP_vector_base %241, ptr %240, align 16
  %242 = getelementptr inbounds %struct.float4, ptr %72, i32 0, i32 0
  %243 = extractvalue %struct.HIP_vector_type %238, 0
  store float %243, ptr %240, align 16
  %244 = getelementptr inbounds %struct.float4, ptr %72, i32 0, i32 1
  %245 = extractvalue %struct.HIP_vector_type %238, 1
  store float %245, ptr %244, align 4
  %246 = getelementptr inbounds %struct.float4, ptr %72, i32 0, i32 2
  %247 = extractvalue %struct.HIP_vector_type %238, 2
  store float %247, ptr %246, align 8
  %248 = getelementptr inbounds %struct.float4, ptr %72, i32 0, i32 3
  %249 = extractvalue %struct.HIP_vector_type %238, 3
  store float %249, ptr %248, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %62, ptr align 16 %72, i64 16, i1 false)
  br label %250

250:                                              ; preds = %211, %388
  call void @llvm.memcpy.p0.p0.i64(ptr %17, ptr addrspacecast (ptr addrspace(1) @tex to ptr), i64 88, i1 false)
  %251 = getelementptr inbounds %struct.textureReference, ptr %17, i32 0, i32 0
  %252 = call i64 @llvm.nvvm.texsurf.handle.internal.p1(ptr addrspace(1) @tex)
  store i64 %252, ptr %81, align 4
  %253 = load i32, ptr %37, align 4
  %254 = load i32, ptr %51, align 4
  %255 = add nsw i32 %253, %254
  %256 = add nsw i32 %255, 1
  %257 = load %struct.textureReference, ptr %251, align 8
  %258 = load i64, ptr %81, align 4
  %259 = call %struct.HIP_vector_type @_ZL10tex1DfetchI15HIP_vector_typeIfLj4EEL18hipTextureReadMode0EEN13__hip_tex_retIT_XT0_EbE4typeE7textureIS4_Li1EXT0_EEi(%struct.textureReference %257, i32 %256)
  %260 = call %struct.float4 @_ZL10tex1DfetchI6float4EN17__nv_tex_rmet_retIT_E4typeE7textureIS2_Li1EL19cudaTextureReadMode0EEi(%struct.textureReference %257, i32 noundef %256) #7
  %261 = getelementptr inbounds %struct.HIP_vector_type, ptr %19, i32 0, i32 0
  %262 = extractvalue %struct.HIP_vector_type %259, 0
  store %struct.HIP_vector_base %262, ptr %261, align 16
  %263 = getelementptr inbounds %struct.float4, ptr %78, i32 0, i32 0
  %264 = extractvalue %struct.HIP_vector_type %259, 0
  store float %264, ptr %261, align 16
  %265 = getelementptr inbounds %struct.float4, ptr %78, i32 0, i32 1
  %266 = extractvalue %struct.HIP_vector_type %259, 1
  store float %266, ptr %265, align 4
  %267 = getelementptr inbounds %struct.float4, ptr %78, i32 0, i32 2
  %268 = extractvalue %struct.HIP_vector_type %259, 2
  store float %268, ptr %267, align 8
  %269 = getelementptr inbounds %struct.float4, ptr %78, i32 0, i32 3
  %270 = extractvalue %struct.HIP_vector_type %259, 3
  store float %270, ptr %269, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr %21, ptr addrspacecast (ptr addrspace(1) @tex to ptr), i64 88, i1 false)
  %271 = getelementptr inbounds %struct.textureReference, ptr %21, i32 0, i32 0
  %272 = call i64 @llvm.nvvm.texsurf.handle.internal.p1(ptr addrspace(1) @tex)
  store i64 %272, ptr %87, align 4
  %273 = load i32, ptr %39, align 4
  %274 = load i32, ptr %53, align 4
  %275 = add nsw i32 %273, %274
  %276 = add nsw i32 %275, 1
  %277 = load %struct.textureReference, ptr %271, align 8
  %278 = load i64, ptr %87, align 4
  %279 = call %struct.HIP_vector_type @_ZL10tex1DfetchI15HIP_vector_typeIfLj4EEL18hipTextureReadMode0EEN13__hip_tex_retIT_XT0_EbE4typeE7textureIS4_Li1EXT0_EEi(%struct.textureReference %277, i32 %276)
  %280 = call %struct.float4 @_ZL10tex1DfetchI6float4EN17__nv_tex_rmet_retIT_E4typeE7textureIS2_Li1EL19cudaTextureReadMode0EEi(%struct.textureReference %277, i32 noundef %276) #7
  %281 = getelementptr inbounds %struct.HIP_vector_type, ptr %23, i32 0, i32 0
  %282 = extractvalue %struct.HIP_vector_type %279, 0
  store %struct.HIP_vector_base %282, ptr %281, align 16
  %283 = getelementptr inbounds %struct.float4, ptr %84, i32 0, i32 0
  %284 = extractvalue %struct.HIP_vector_type %279, 0
  store float %284, ptr %281, align 16
  %285 = getelementptr inbounds %struct.float4, ptr %84, i32 0, i32 1
  %286 = extractvalue %struct.HIP_vector_type %279, 1
  store float %286, ptr %285, align 4
  %287 = getelementptr inbounds %struct.float4, ptr %84, i32 0, i32 2
  %288 = extractvalue %struct.HIP_vector_type %279, 2
  store float %288, ptr %287, align 8
  %289 = getelementptr inbounds %struct.float4, ptr %84, i32 0, i32 3
  %290 = extractvalue %struct.HIP_vector_type %279, 3
  store float %290, ptr %289, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %93, ptr align 16 %58, i64 16, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %95, ptr align 16 %62, i64 16, i1 false)
  %291 = call %struct.float4 @_Z9getLowest6float4S_(ptr noundef byval(%struct.float4) align 16 %93, ptr noundef byval(%struct.float4) align 16 %95) #7
  %292 = getelementptr inbounds %struct.float4, ptr %90, i32 0, i32 0
  %293 = extractvalue %struct.float4 %291, 0
  store float %293, ptr %292, align 16
  %294 = getelementptr inbounds %struct.float4, ptr %90, i32 0, i32 1
  %295 = extractvalue %struct.float4 %291, 1
  store float %295, ptr %294, align 4
  %296 = getelementptr inbounds %struct.float4, ptr %90, i32 0, i32 2
  %297 = extractvalue %struct.float4 %291, 2
  store float %297, ptr %296, align 8
  %298 = getelementptr inbounds %struct.float4, ptr %90, i32 0, i32 3
  %299 = extractvalue %struct.float4 %291, 3
  store float %299, ptr %298, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %101, ptr align 16 %58, i64 16, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %103, ptr align 16 %62, i64 16, i1 false)
  %300 = call %struct.float4 @_Z10getHighest6float4S_(ptr noundef byval(%struct.float4) align 16 %101, ptr noundef byval(%struct.float4) align 16 %103) #7
  %301 = getelementptr inbounds %struct.float4, ptr %98, i32 0, i32 0
  %302 = extractvalue %struct.float4 %300, 0
  store float %302, ptr %301, align 16
  %303 = getelementptr inbounds %struct.float4, ptr %98, i32 0, i32 1
  %304 = extractvalue %struct.float4 %300, 1
  store float %304, ptr %303, align 4
  %305 = getelementptr inbounds %struct.float4, ptr %98, i32 0, i32 2
  %306 = extractvalue %struct.float4 %300, 2
  store float %306, ptr %305, align 8
  %307 = getelementptr inbounds %struct.float4, ptr %98, i32 0, i32 3
  %308 = extractvalue %struct.float4 %300, 3
  store float %308, ptr %307, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %109, ptr align 16 %90, i64 16, i1 false)
  %309 = call %struct.float4 @_Z8sortElem6float4(ptr noundef byval(%struct.float4) align 16 %109) #7
  %310 = getelementptr inbounds %struct.float4, ptr %106, i32 0, i32 0
  %311 = extractvalue %struct.float4 %309, 0
  store float %311, ptr %310, align 16
  %312 = getelementptr inbounds %struct.float4, ptr %106, i32 0, i32 1
  %313 = extractvalue %struct.float4 %309, 1
  store float %313, ptr %312, align 4
  %314 = getelementptr inbounds %struct.float4, ptr %106, i32 0, i32 2
  %315 = extractvalue %struct.float4 %309, 2
  store float %315, ptr %314, align 8
  %316 = getelementptr inbounds %struct.float4, ptr %106, i32 0, i32 3
  %317 = extractvalue %struct.float4 %309, 3
  store float %317, ptr %316, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %58, ptr align 16 %106, i64 16, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %115, ptr align 16 %98, i64 16, i1 false)
  %318 = call %struct.float4 @_Z8sortElem6float4(ptr noundef byval(%struct.float4) align 16 %115) #7
  %319 = getelementptr inbounds %struct.float4, ptr %112, i32 0, i32 0
  %320 = extractvalue %struct.float4 %318, 0
  store float %320, ptr %319, align 16
  %321 = getelementptr inbounds %struct.float4, ptr %112, i32 0, i32 1
  %322 = extractvalue %struct.float4 %318, 1
  store float %322, ptr %321, align 4
  %323 = getelementptr inbounds %struct.float4, ptr %112, i32 0, i32 2
  %324 = extractvalue %struct.float4 %318, 2
  store float %324, ptr %323, align 8
  %325 = getelementptr inbounds %struct.float4, ptr %112, i32 0, i32 3
  %326 = extractvalue %struct.float4 %318, 3
  store float %326, ptr %325, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %62, ptr align 16 %112, i64 16, i1 false)
  %327 = load ptr, ptr %41, align 8
  %328 = load i32, ptr %55, align 4
  %329 = add nsw i32 %328, 1
  store i32 %329, ptr %55, align 4
  %330 = sext i32 %328 to i64
  %331 = getelementptr inbounds %struct.HIP_vector_type, ptr %327, i64 %330
  %332 = getelementptr inbounds %struct.float4, ptr %327, i64 %330
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %331, ptr align 16 %58, i64 16, i1 false)
  %333 = load i32, ptr %51, align 4
  %334 = add nsw i32 %333, 1
  %335 = load i32, ptr %27, align 4
  %336 = sdiv i32 %335, 2
  %337 = icmp slt i32 %334, %336
  %338 = zext i1 %337 to i8
  store i8 %338, ptr %117, align 1
  %339 = load i32, ptr %53, align 4
  %340 = add nsw i32 %339, 1
  %341 = load i32, ptr %27, align 4
  %342 = sdiv i32 %341, 2
  %343 = icmp slt i32 %340, %342
  br i1 %343, label %344, label %355

344:                                              ; preds = %250
  %345 = load i32, ptr %39, align 4
  %346 = load i32, ptr %53, align 4
  %347 = add nsw i32 %345, %346
  %348 = add nsw i32 %347, 1
  %349 = load i32, ptr %33, align 4
  %350 = add nsw i32 %349, 1
  %351 = sext i32 %350 to i64
  %352 = getelementptr inbounds [1025 x i32], ptr addrspacecast (ptr addrspace(4) @constStartAddr to ptr), i64 0, i64 %351
  %353 = load i32, ptr %352, align 4
  %354 = icmp slt i32 %348, %353
  br label %355

355:                                              ; preds = %344, %250
  %356 = phi i1 [ false, %250 ], [ %354, %344 ]
  %357 = zext i1 %356 to i8
  store i8 %357, ptr %119, align 1
  %358 = load i8, ptr %117, align 1
  %359 = trunc i8 %358 to i1
  br i1 %359, label %360, label %380

360:                                              ; preds = %355
  %361 = load i8, ptr %119, align 1
  %362 = trunc i8 %361 to i1
  br i1 %362, label %363, label %376

363:                                              ; preds = %360
  %364 = getelementptr inbounds %struct.float4, ptr %78, i32 0, i32 0
  %365 = load float, ptr %364, align 16
  %366 = getelementptr inbounds %struct.float4, ptr %84, i32 0, i32 0
  %367 = load float, ptr %366, align 16
  %368 = fcmp contract olt float %365, %367
  br i1 %368, label %369, label %372

369:                                              ; preds = %363
  %370 = load i32, ptr %51, align 4
  %371 = add nsw i32 %370, 1
  store i32 %371, ptr %51, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %58, ptr align 16 %78, i64 16, i1 false)
  br label %375

372:                                              ; preds = %363
  %373 = load i32, ptr %53, align 4
  %374 = add nsw i32 %373, 1
  store i32 %374, ptr %53, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %58, ptr align 16 %84, i64 16, i1 false)
  br label %375

375:                                              ; preds = %372, %369
  br label %379

376:                                              ; preds = %360
  %377 = load i32, ptr %51, align 4
  %378 = add nsw i32 %377, 1
  store i32 %378, ptr %51, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %58, ptr align 16 %78, i64 16, i1 false)
  br label %379

379:                                              ; preds = %376, %375
  br label %388

380:                                              ; preds = %355
  %381 = load i8, ptr %119, align 1
  %382 = trunc i8 %381 to i1
  br i1 %382, label %383, label %386

383:                                              ; preds = %380
  %384 = load i32, ptr %53, align 4
  %385 = add nsw i32 %384, 1
  store i32 %385, ptr %53, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %58, ptr align 16 %84, i64 16, i1 false)
  br label %387

386:                                              ; preds = %380
  br label %389

387:                                              ; preds = %383
  br label %388

388:                                              ; preds = %387, %379
  br label %250, !llvm.loop !14

389:                                              ; preds = %386
  %390 = load ptr, ptr %41, align 8
  %391 = load i32, ptr %55, align 4
  %392 = add nsw i32 %391, 1
  store i32 %392, ptr %55, align 4
  %393 = sext i32 %391 to i64
  %394 = getelementptr inbounds %struct.HIP_vector_type, ptr %390, i64 %393
  %395 = getelementptr inbounds %struct.float4, ptr %390, i64 %393
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %394, ptr align 16 %62, i64 16, i1 false)
  br label %396

396:                                              ; preds = %389, %210, %161, %131
  ret void
}

 out ptr 
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %394, ptr align 16 %62, i64 16, i1 false) I 
heree
llvm.memcpy.p0.p0.i64
 999 
 there 12 
  br label %396 I 
  ret voidFunction: _Z9mergepackPfS_
 I 
 First   %3 = alloca ptr, align 8, addrspace(5) 
  %3 = alloca ptr, align 8, addrspace(5) I 
  %4 = addrspacecast ptr addrspace(5) %3 to ptr I 
  %5 = alloca ptr, align 8, addrspace(5) I 
  %6 = addrspacecast ptr addrspace(5) %5 to ptr I 
  %7 = alloca i32, align 4, addrspace(5) I 
  %8 = addrspacecast ptr addrspace(5) %7 to ptr I 
  %9 = alloca i32, align 4, addrspace(5) I 
  %10 = addrspacecast ptr addrspace(5) %9 to ptr I 
  %11 = addrspacecast ptr addrspace(1) %0 to ptr I 
  store ptr %11, ptr %4, align 8 I 
  %12 = addrspacecast ptr addrspace(1) %1 to ptr I 
  store ptr %12, ptr %6, align 8 I 
  %13 = call noundef i32 @_ZN25__cuda_builtin_blockIdx_t17__fetch_builtin_xEv() #7 I 
heree
_ZN25__cuda_builtin_blockIdx_t17__fetch_builtin_xEv
  %14 = call noundef i32 @_ZN25__cuda_builtin_blockDim_t17__fetch_builtin_xEv() #7 I 
heree
_ZN25__cuda_builtin_blockDim_t17__fetch_builtin_xEv
  %15 = mul i32 %13, %14 I 
  %16 = call noundef i32 @_ZN26__cuda_builtin_threadIdx_t17__fetch_builtin_xEv() #7 I 
heree
_ZN26__cuda_builtin_threadIdx_t17__fetch_builtin_xEv
  %17 = add i32 %15, %16 I 
  store i32 %17, ptr %8, align 4 I 
  %18 = call noundef i32 @_ZN25__cuda_builtin_blockIdx_t17__fetch_builtin_yEv() #7 I 
heree
_ZN25__cuda_builtin_blockIdx_t17__fetch_builtin_yEv
  store i32 %18, ptr %10, align 4 I 
  %19 = load i32, ptr %10, align 4 I 
  %20 = sext i32 %19 to i64 I 
  %21 = getelementptr inbounds [1025 x i32], ptr addrspacecast (ptr addrspace(4) @finalStartAddr to ptr), i64 0, i64 %20 I 
 getelementptr here 
 abc 
  %21 = getelementptr inbounds [1025 x i32], ptr addrspacecast (ptr addrspace(4) @finalStartAddr to ptr), i64 0, i64 %20
 abc 
 out ptr 
  %22 = load i32, ptr %21, align 4 I 
  %23 = load i32, ptr %8, align 4 I 
  %24 = add nsw i32 %22, %23 I 
  %25 = load i32, ptr %10, align 4 I 
  %26 = add nsw i32 %25, 1 I 
  %27 = sext i32 %26 to i64 I 
  %28 = getelementptr inbounds [1025 x i32], ptr addrspacecast (ptr addrspace(4) @finalStartAddr to ptr), i64 0, i64 %27 I 
 getelementptr here 
 abc 
  %28 = getelementptr inbounds [1025 x i32], ptr addrspacecast (ptr addrspace(4) @finalStartAddr to ptr), i64 0, i64 %27
 abc 
 out ptr 
  %29 = load i32, ptr %28, align 4 I 
  %30 = icmp sge i32 %24, %29 I 
  br i1 %30, label %31, label %32 I 
  br label %58 I 
  %33 = load ptr, ptr %4, align 8 I 
  %34 = load i32, ptr %10, align 4 I 
  %35 = sext i32 %34 to i64 I 
  %36 = getelementptr inbounds [1025 x i32], ptr addrspacecast (ptr addrspace(4) @constStartAddr to ptr), i64 0, i64 %35 I 
 getelementptr here 
 abc 
  %36 = getelementptr inbounds [1025 x i32], ptr addrspacecast (ptr addrspace(4) @constStartAddr to ptr), i64 0, i64 %35
 abc 
 out ptr 
  %37 = load i32, ptr %36, align 4 I 
  %38 = mul nsw i32 %37, 4 I 
  %39 = load i32, ptr %10, align 4 I 
  %40 = sext i32 %39 to i64 I 
  %41 = getelementptr inbounds [1024 x i32], ptr addrspacecast (ptr addrspace(4) @nullElems to ptr), i64 0, i64 %40 I 
 getelementptr here 
 abc 
  %41 = getelementptr inbounds [1024 x i32], ptr addrspacecast (ptr addrspace(4) @nullElems to ptr), i64 0, i64 %40
 abc 
 out ptr 
  %42 = load i32, ptr %41, align 4 I 
  %43 = add nsw i32 %38, %42 I 
  %44 = load i32, ptr %8, align 4 I 
  %45 = add nsw i32 %43, %44 I 
  %46 = sext i32 %45 to i64 I 
  %47 = getelementptr inbounds float, ptr %33, i64 %46 I 
 getelementptr here 
 abc 
  %47 = getelementptr inbounds float, ptr %33, i64 %46
 abc 
 out ptr 
  %48 = load float, ptr %47, align 4 I 
  %49 = load ptr, ptr %6, align 8 I 
  %50 = load i32, ptr %10, align 4 I 
  %51 = sext i32 %50 to i64 I 
  %52 = getelementptr inbounds [1025 x i32], ptr addrspacecast (ptr addrspace(4) @finalStartAddr to ptr), i64 0, i64 %51 I 
 getelementptr here 
 abc 
  %52 = getelementptr inbounds [1025 x i32], ptr addrspacecast (ptr addrspace(4) @finalStartAddr to ptr), i64 0, i64 %51
 abc 
 out ptr 
  %53 = load i32, ptr %52, align 4 I 
  %54 = load i32, ptr %8, align 4 I 
  %55 = add nsw i32 %53, %54 I 
  %56 = sext i32 %55 to i64 I 
  %57 = getelementptr inbounds float, ptr %49, i64 %56 I 
 getelementptr here 
 abc 
  %57 = getelementptr inbounds float, ptr %49, i64 %56
 abc 
 out ptr 
  store float %48, ptr %57, align 4 I 
  br label %58 I 
  ret voidChange Atomics
Function: _Z14mergeSortFirstP6float4i
Function: _Z13mergeSortPassP6float4ii
Function: _Z9mergepackPfS_
 I 
; ModuleID = '/nethome/jchen706/coding/code2/amdcuda/benchmarks/rodinia/hybridsort/hip/mergesort_kernel-cuda-nvptx64-nvidia-cuda-sm_35.bc'
source_filename = "mergesort_kernel.cu"
target datalayout = "e-p:64:64-p1:64:64-p2:32:32-p3:32:32-p4:64:64-p5:32:32-p6:32:32-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024-v2048:2048-n32:64-S32-A5-G1-ni:7"
target triple = "amdgcn-amd-amdhsa"

%struct.__cuda_builtin_blockIdx_t = type { i8 }
%struct.__cuda_builtin_blockDim_t = type { i8 }
%struct.__cuda_builtin_threadIdx_t = type { i8 }
%struct.texture = type { %struct.textureReference }
%struct.textureReference = type { i32, i32, i32, [3 x i32], %struct.hipChannelFormatDesc, i32, i32, i32, float, float, float, ptr, i32, i32 }
%struct.hipChannelFormatDesc = type { i32, i32, i32, i32, i32 }
%struct.HIP_vector_type = type { %struct.HIP_vector_base }
%struct.HIP_vector_base = type { %union.anon }
%union.anon = type { <4 x float> }
%struct.anon = type { float, float, float, float }
%struct.float4 = type { float, float, float, float }

$_ZN25__cuda_builtin_blockIdx_t17__fetch_builtin_xEv = comdat any

$_ZN25__cuda_builtin_blockDim_t17__fetch_builtin_xEv = comdat any

$_ZN26__cuda_builtin_threadIdx_t17__fetch_builtin_xEv = comdat any

$_ZN25__cuda_builtin_blockIdx_t17__fetch_builtin_yEv = comdat any

@constStartAddr = addrspace(4) externally_initialized global [1025 x i32] zeroinitializer, align 16
@finalStartAddr = addrspace(4) externally_initialized global [1025 x i32] zeroinitializer, align 16
@nullElems = addrspace(4) externally_initialized global [1024 x i32] zeroinitializer, align 16
@blockIdx = extern_weak addrspace(1) global %struct.__cuda_builtin_blockIdx_t, align 1
@blockDim = extern_weak addrspace(1) global %struct.__cuda_builtin_blockDim_t, align 1
@threadIdx = extern_weak addrspace(1) global %struct.__cuda_builtin_threadIdx_t, align 1
@llvm.compiler.used = appending global [4 x ptr] [ptr addrspacecast (ptr addrspace(1) @tex to ptr), ptr addrspacecast (ptr addrspace(4) @constStartAddr to ptr), ptr addrspacecast (ptr addrspace(4) @finalStartAddr to ptr), ptr addrspacecast (ptr addrspace(4) @nullElems to ptr)], section "llvm.metadata"
@tex = addrspace(1) externally_initialized global %struct.texture undef
@txt = addrspace(1) externally_initialized global %struct.texture undef

define %struct.HIP_vector_type @_Z8sortElem6float4(%struct.HIP_vector_base %0) {
  %2 = alloca %struct.HIP_vector_type, align 16, addrspace(5)
  %3 = addrspacecast ptr addrspace(5) %2 to ptr
  %4 = getelementptr inbounds %struct.HIP_vector_type, ptr %3, i32 0, i32 0
  %5 = getelementptr inbounds %struct.HIP_vector_base, ptr %4, i32 0, i32 0
  %6 = getelementptr inbounds %union.anon, ptr %5, i32 0, i32 0
  %7 = getelementptr inbounds %struct.HIP_vector_base, ptr %6, i32 0, i32 0
  %8 = extractvalue ptr %3, 0
  store %union.anon %8, ptr %7, align 16
  %9 = alloca %struct.HIP_vector_type, align 16, addrspace(5)
  %10 = addrspacecast ptr addrspace(5) %9 to ptr
  %11 = getelementptr inbounds %struct.HIP_vector_base, ptr %3, i32 0, i32 0
  %12 = getelementptr inbounds %struct.anon, ptr %11, i32 0, i32 0
  %13 = load float, ptr %12, align 16
  %14 = getelementptr inbounds %struct.HIP_vector_base, ptr %3, i32 0, i32 0
  %15 = getelementptr inbounds %struct.anon, ptr %14, i32 0, i32 1
  %16 = load float, ptr %15, align 4
  %17 = fcmp contract ogt float %13, %16
  br i1 %17, label %18, label %22

18:                                               ; preds = %1
  %19 = getelementptr inbounds %struct.HIP_vector_base, ptr %3, i32 0, i32 0
  %20 = getelementptr inbounds %struct.anon, ptr %19, i32 0, i32 1
  %21 = load float, ptr %20, align 4
  br label %26

22:                                               ; preds = %1
  %23 = getelementptr inbounds %struct.HIP_vector_base, ptr %3, i32 0, i32 0
  %24 = getelementptr inbounds %struct.anon, ptr %23, i32 0, i32 0
  %25 = load float, ptr %24, align 16
  br label %26

26:                                               ; preds = %22, %18
  %27 = phi contract float [ %21, %18 ], [ %25, %22 ]
  %28 = getelementptr inbounds %struct.HIP_vector_base, ptr %10, i32 0, i32 0
  %29 = getelementptr inbounds %struct.anon, ptr %28, i32 0, i32 0
  store float %27, ptr %29, align 16
  %30 = getelementptr inbounds %struct.HIP_vector_base, ptr %3, i32 0, i32 0
  %31 = getelementptr inbounds %struct.anon, ptr %30, i32 0, i32 1
  %32 = load float, ptr %31, align 4
  %33 = getelementptr inbounds %struct.HIP_vector_base, ptr %3, i32 0, i32 0
  %34 = getelementptr inbounds %struct.anon, ptr %33, i32 0, i32 0
  %35 = load float, ptr %34, align 16
  %36 = fcmp contract ogt float %32, %35
  br i1 %36, label %37, label %41

37:                                               ; preds = %26
  %38 = getelementptr inbounds %struct.HIP_vector_base, ptr %3, i32 0, i32 0
  %39 = getelementptr inbounds %struct.anon, ptr %38, i32 0, i32 1
  %40 = load float, ptr %39, align 4
  br label %45

41:                                               ; preds = %26
  %42 = getelementptr inbounds %struct.HIP_vector_base, ptr %3, i32 0, i32 0
  %43 = getelementptr inbounds %struct.anon, ptr %42, i32 0, i32 0
  %44 = load float, ptr %43, align 16
  br label %45

45:                                               ; preds = %41, %37
  %46 = phi contract float [ %40, %37 ], [ %44, %41 ]
  %47 = getelementptr inbounds %struct.HIP_vector_base, ptr %10, i32 0, i32 0
  %48 = getelementptr inbounds %struct.anon, ptr %47, i32 0, i32 1
  store float %46, ptr %48, align 4
  %49 = getelementptr inbounds %struct.HIP_vector_base, ptr %3, i32 0, i32 0
  %50 = getelementptr inbounds %struct.anon, ptr %49, i32 0, i32 2
  %51 = load float, ptr %50, align 8
  %52 = getelementptr inbounds %struct.HIP_vector_base, ptr %3, i32 0, i32 0
  %53 = getelementptr inbounds %struct.anon, ptr %52, i32 0, i32 3
  %54 = load float, ptr %53, align 4
  %55 = fcmp contract ogt float %51, %54
  br i1 %55, label %56, label %60

56:                                               ; preds = %45
  %57 = getelementptr inbounds %struct.HIP_vector_base, ptr %3, i32 0, i32 0
  %58 = getelementptr inbounds %struct.anon, ptr %57, i32 0, i32 3
  %59 = load float, ptr %58, align 4
  br label %64

60:                                               ; preds = %45
  %61 = getelementptr inbounds %struct.HIP_vector_base, ptr %3, i32 0, i32 0
  %62 = getelementptr inbounds %struct.anon, ptr %61, i32 0, i32 2
  %63 = load float, ptr %62, align 8
  br label %64

64:                                               ; preds = %60, %56
  %65 = phi contract float [ %59, %56 ], [ %63, %60 ]
  %66 = getelementptr inbounds %struct.HIP_vector_base, ptr %10, i32 0, i32 0
  %67 = getelementptr inbounds %struct.anon, ptr %66, i32 0, i32 2
  store float %65, ptr %67, align 8
  %68 = getelementptr inbounds %struct.HIP_vector_base, ptr %3, i32 0, i32 0
  %69 = getelementptr inbounds %struct.anon, ptr %68, i32 0, i32 3
  %70 = load float, ptr %69, align 4
  %71 = getelementptr inbounds %struct.HIP_vector_base, ptr %3, i32 0, i32 0
  %72 = getelementptr inbounds %struct.anon, ptr %71, i32 0, i32 2
  %73 = load float, ptr %72, align 8
  %74 = fcmp contract ogt float %70, %73
  br i1 %74, label %75, label %79

75:                                               ; preds = %64
  %76 = getelementptr inbounds %struct.HIP_vector_base, ptr %3, i32 0, i32 0
  %77 = getelementptr inbounds %struct.anon, ptr %76, i32 0, i32 3
  %78 = load float, ptr %77, align 4
  br label %83

79:                                               ; preds = %64
  %80 = getelementptr inbounds %struct.HIP_vector_base, ptr %3, i32 0, i32 0
  %81 = getelementptr inbounds %struct.anon, ptr %80, i32 0, i32 2
  %82 = load float, ptr %81, align 8
  br label %83

83:                                               ; preds = %79, %75
  %84 = phi contract float [ %78, %75 ], [ %82, %79 ]
  %85 = getelementptr inbounds %struct.HIP_vector_base, ptr %10, i32 0, i32 0
  %86 = getelementptr inbounds %struct.anon, ptr %85, i32 0, i32 3
  store float %84, ptr %86, align 4
  %87 = getelementptr inbounds %struct.HIP_vector_base, ptr %10, i32 0, i32 0
  %88 = getelementptr inbounds %struct.anon, ptr %87, i32 0, i32 0
  %89 = load float, ptr %88, align 16
  %90 = getelementptr inbounds %struct.HIP_vector_base, ptr %10, i32 0, i32 0
  %91 = getelementptr inbounds %struct.anon, ptr %90, i32 0, i32 2
  %92 = load float, ptr %91, align 8
  %93 = fcmp contract ogt float %89, %92
  br i1 %93, label %94, label %98

94:                                               ; preds = %83
  %95 = getelementptr inbounds %struct.HIP_vector_base, ptr %10, i32 0, i32 0
  %96 = getelementptr inbounds %struct.anon, ptr %95, i32 0, i32 2
  %97 = load float, ptr %96, align 8
  br label %102

98:                                               ; preds = %83
  %99 = getelementptr inbounds %struct.HIP_vector_base, ptr %10, i32 0, i32 0
  %100 = getelementptr inbounds %struct.anon, ptr %99, i32 0, i32 0
  %101 = load float, ptr %100, align 16
  br label %102

102:                                              ; preds = %98, %94
  %103 = phi contract float [ %97, %94 ], [ %101, %98 ]
  %104 = getelementptr inbounds %struct.HIP_vector_base, ptr %3, i32 0, i32 0
  %105 = getelementptr inbounds %struct.anon, ptr %104, i32 0, i32 0
  store float %103, ptr %105, align 16
  %106 = getelementptr inbounds %struct.HIP_vector_base, ptr %10, i32 0, i32 0
  %107 = getelementptr inbounds %struct.anon, ptr %106, i32 0, i32 1
  %108 = load float, ptr %107, align 4
  %109 = getelementptr inbounds %struct.HIP_vector_base, ptr %10, i32 0, i32 0
  %110 = getelementptr inbounds %struct.anon, ptr %109, i32 0, i32 3
  %111 = load float, ptr %110, align 4
  %112 = fcmp contract ogt float %108, %111
  br i1 %112, label %113, label %117

113:                                              ; preds = %102
  %114 = getelementptr inbounds %struct.HIP_vector_base, ptr %10, i32 0, i32 0
  %115 = getelementptr inbounds %struct.anon, ptr %114, i32 0, i32 3
  %116 = load float, ptr %115, align 4
  br label %121

117:                                              ; preds = %102
  %118 = getelementptr inbounds %struct.HIP_vector_base, ptr %10, i32 0, i32 0
  %119 = getelementptr inbounds %struct.anon, ptr %118, i32 0, i32 1
  %120 = load float, ptr %119, align 4
  br label %121

121:                                              ; preds = %117, %113
  %122 = phi contract float [ %116, %113 ], [ %120, %117 ]
  %123 = getelementptr inbounds %struct.HIP_vector_base, ptr %3, i32 0, i32 0
  %124 = getelementptr inbounds %struct.anon, ptr %123, i32 0, i32 1
  store float %122, ptr %124, align 4
  %125 = getelementptr inbounds %struct.HIP_vector_base, ptr %10, i32 0, i32 0
  %126 = getelementptr inbounds %struct.anon, ptr %125, i32 0, i32 2
  %127 = load float, ptr %126, align 8
  %128 = getelementptr inbounds %struct.HIP_vector_base, ptr %10, i32 0, i32 0
  %129 = getelementptr inbounds %struct.anon, ptr %128, i32 0, i32 0
  %130 = load float, ptr %129, align 16
  %131 = fcmp contract ogt float %127, %130
  br i1 %131, label %132, label %136

132:                                              ; preds = %121
  %133 = getelementptr inbounds %struct.HIP_vector_base, ptr %10, i32 0, i32 0
  %134 = getelementptr inbounds %struct.anon, ptr %133, i32 0, i32 2
  %135 = load float, ptr %134, align 8
  br label %140

136:                                              ; preds = %121
  %137 = getelementptr inbounds %struct.HIP_vector_base, ptr %10, i32 0, i32 0
  %138 = getelementptr inbounds %struct.anon, ptr %137, i32 0, i32 0
  %139 = load float, ptr %138, align 16
  br label %140

140:                                              ; preds = %136, %132
  %141 = phi contract float [ %135, %132 ], [ %139, %136 ]
  %142 = getelementptr inbounds %struct.HIP_vector_base, ptr %3, i32 0, i32 0
  %143 = getelementptr inbounds %struct.anon, ptr %142, i32 0, i32 2
  store float %141, ptr %143, align 8
  %144 = getelementptr inbounds %struct.HIP_vector_base, ptr %10, i32 0, i32 0
  %145 = getelementptr inbounds %struct.anon, ptr %144, i32 0, i32 3
  %146 = load float, ptr %145, align 4
  %147 = getelementptr inbounds %struct.HIP_vector_base, ptr %10, i32 0, i32 0
  %148 = getelementptr inbounds %struct.anon, ptr %147, i32 0, i32 1
  %149 = load float, ptr %148, align 4
  %150 = fcmp contract ogt float %146, %149
  br i1 %150, label %151, label %155

151:                                              ; preds = %140
  %152 = getelementptr inbounds %struct.HIP_vector_base, ptr %10, i32 0, i32 0
  %153 = getelementptr inbounds %struct.anon, ptr %152, i32 0, i32 3
  %154 = load float, ptr %153, align 4
  br label %159

155:                                              ; preds = %140
  %156 = getelementptr inbounds %struct.HIP_vector_base, ptr %10, i32 0, i32 0
  %157 = getelementptr inbounds %struct.anon, ptr %156, i32 0, i32 1
  %158 = load float, ptr %157, align 4
  br label %159

159:                                              ; preds = %155, %151
  %160 = phi contract float [ %154, %151 ], [ %158, %155 ]
  %161 = getelementptr inbounds %struct.HIP_vector_base, ptr %3, i32 0, i32 0
  %162 = getelementptr inbounds %struct.anon, ptr %161, i32 0, i32 3
  store float %160, ptr %162, align 4
  %163 = getelementptr inbounds %struct.HIP_vector_base, ptr %3, i32 0, i32 0
  %164 = getelementptr inbounds %struct.anon, ptr %163, i32 0, i32 0
  %165 = load float, ptr %164, align 16
  %166 = getelementptr inbounds %struct.HIP_vector_base, ptr %10, i32 0, i32 0
  %167 = getelementptr inbounds %struct.anon, ptr %166, i32 0, i32 0
  store float %165, ptr %167, align 16
  %168 = getelementptr inbounds %struct.HIP_vector_base, ptr %3, i32 0, i32 0
  %169 = getelementptr inbounds %struct.anon, ptr %168, i32 0, i32 1
  %170 = load float, ptr %169, align 4
  %171 = getelementptr inbounds %struct.HIP_vector_base, ptr %3, i32 0, i32 0
  %172 = getelementptr inbounds %struct.anon, ptr %171, i32 0, i32 2
  %173 = load float, ptr %172, align 8
  %174 = fcmp contract ogt float %170, %173
  br i1 %174, label %175, label %179

175:                                              ; preds = %159
  %176 = getelementptr inbounds %struct.HIP_vector_base, ptr %3, i32 0, i32 0
  %177 = getelementptr inbounds %struct.anon, ptr %176, i32 0, i32 2
  %178 = load float, ptr %177, align 8
  br label %183

179:                                              ; preds = %159
  %180 = getelementptr inbounds %struct.HIP_vector_base, ptr %3, i32 0, i32 0
  %181 = getelementptr inbounds %struct.anon, ptr %180, i32 0, i32 1
  %182 = load float, ptr %181, align 4
  br label %183

183:                                              ; preds = %179, %175
  %184 = phi contract float [ %178, %175 ], [ %182, %179 ]
  %185 = getelementptr inbounds %struct.HIP_vector_base, ptr %10, i32 0, i32 0
  %186 = getelementptr inbounds %struct.anon, ptr %185, i32 0, i32 1
  store float %184, ptr %186, align 4
  %187 = getelementptr inbounds %struct.HIP_vector_base, ptr %3, i32 0, i32 0
  %188 = getelementptr inbounds %struct.anon, ptr %187, i32 0, i32 2
  %189 = load float, ptr %188, align 8
  %190 = getelementptr inbounds %struct.HIP_vector_base, ptr %3, i32 0, i32 0
  %191 = getelementptr inbounds %struct.anon, ptr %190, i32 0, i32 1
  %192 = load float, ptr %191, align 4
  %193 = fcmp contract ogt float %189, %192
  br i1 %193, label %194, label %198

194:                                              ; preds = %183
  %195 = getelementptr inbounds %struct.HIP_vector_base, ptr %3, i32 0, i32 0
  %196 = getelementptr inbounds %struct.anon, ptr %195, i32 0, i32 2
  %197 = load float, ptr %196, align 8
  br label %202

198:                                              ; preds = %183
  %199 = getelementptr inbounds %struct.HIP_vector_base, ptr %3, i32 0, i32 0
  %200 = getelementptr inbounds %struct.anon, ptr %199, i32 0, i32 1
  %201 = load float, ptr %200, align 4
  br label %202

202:                                              ; preds = %198, %194
  %203 = phi contract float [ %197, %194 ], [ %201, %198 ]
  %204 = getelementptr inbounds %struct.HIP_vector_base, ptr %10, i32 0, i32 0
  %205 = getelementptr inbounds %struct.anon, ptr %204, i32 0, i32 2
  store float %203, ptr %205, align 8
  %206 = getelementptr inbounds %struct.HIP_vector_base, ptr %3, i32 0, i32 0
  %207 = getelementptr inbounds %struct.anon, ptr %206, i32 0, i32 3
  %208 = load float, ptr %207, align 4
  %209 = getelementptr inbounds %struct.HIP_vector_base, ptr %10, i32 0, i32 0
  %210 = getelementptr inbounds %struct.anon, ptr %209, i32 0, i32 3
  store float %208, ptr %210, align 4
  %211 = load %struct.HIP_vector_type, ptr %10, align 16
  ret %struct.HIP_vector_type %211
}

define %struct.HIP_vector_type @_Z9getLowest6float4S_(%struct.HIP_vector_base %0, %struct.HIP_vector_base %1) {
  %3 = alloca %struct.HIP_vector_type, align 16, addrspace(5)
  %4 = addrspacecast ptr addrspace(5) %3 to ptr
  %5 = getelementptr inbounds %struct.HIP_vector_type, ptr %4, i32 0, i32 0
  %6 = getelementptr inbounds %struct.HIP_vector_base, ptr %5, i32 0, i32 0
  %7 = getelementptr inbounds %union.anon, ptr %6, i32 0, i32 0
  %8 = getelementptr inbounds %struct.HIP_vector_base, ptr %7, i32 0, i32 0
  %9 = extractvalue ptr %4, 0
  store %union.anon %9, ptr %8, align 16
  %10 = alloca %struct.HIP_vector_type, align 16, addrspace(5)
  %11 = addrspacecast ptr addrspace(5) %10 to ptr
  %12 = getelementptr inbounds %struct.HIP_vector_type, ptr %11, i32 0, i32 0
  %13 = getelementptr inbounds %struct.HIP_vector_base, ptr %12, i32 0, i32 0
  %14 = getelementptr inbounds %union.anon, ptr %13, i32 0, i32 0
  %15 = getelementptr inbounds %struct.HIP_vector_base, ptr %14, i32 0, i32 0
  %16 = extractvalue ptr %11, 0
  store %union.anon %16, ptr %15, align 16
  %17 = alloca %struct.HIP_vector_type, align 16, addrspace(5)
  %18 = addrspacecast ptr addrspace(5) %17 to ptr
  %19 = getelementptr inbounds %struct.HIP_vector_base, ptr %4, i32 0, i32 0
  %20 = getelementptr inbounds %struct.anon, ptr %19, i32 0, i32 0
  %21 = load float, ptr %20, align 16
  %22 = getelementptr inbounds %struct.HIP_vector_base, ptr %11, i32 0, i32 0
  %23 = getelementptr inbounds %struct.anon, ptr %22, i32 0, i32 3
  %24 = load float, ptr %23, align 4
  %25 = fcmp contract olt float %21, %24
  br i1 %25, label %26, label %30

26:                                               ; preds = %2
  %27 = getelementptr inbounds %struct.HIP_vector_base, ptr %4, i32 0, i32 0
  %28 = getelementptr inbounds %struct.anon, ptr %27, i32 0, i32 0
  %29 = load float, ptr %28, align 16
  br label %34

30:                                               ; preds = %2
  %31 = getelementptr inbounds %struct.HIP_vector_base, ptr %11, i32 0, i32 0
  %32 = getelementptr inbounds %struct.anon, ptr %31, i32 0, i32 3
  %33 = load float, ptr %32, align 4
  br label %34

34:                                               ; preds = %30, %26
  %35 = phi contract float [ %29, %26 ], [ %33, %30 ]
  %36 = getelementptr inbounds %struct.HIP_vector_base, ptr %4, i32 0, i32 0
  %37 = getelementptr inbounds %struct.anon, ptr %36, i32 0, i32 0
  store float %35, ptr %37, align 16
  %38 = getelementptr inbounds %struct.HIP_vector_base, ptr %4, i32 0, i32 0
  %39 = getelementptr inbounds %struct.anon, ptr %38, i32 0, i32 1
  %40 = load float, ptr %39, align 4
  %41 = getelementptr inbounds %struct.HIP_vector_base, ptr %11, i32 0, i32 0
  %42 = getelementptr inbounds %struct.anon, ptr %41, i32 0, i32 2
  %43 = load float, ptr %42, align 8
  %44 = fcmp contract olt float %40, %43
  br i1 %44, label %45, label %49

45:                                               ; preds = %34
  %46 = getelementptr inbounds %struct.HIP_vector_base, ptr %4, i32 0, i32 0
  %47 = getelementptr inbounds %struct.anon, ptr %46, i32 0, i32 1
  %48 = load float, ptr %47, align 4
  br label %53

49:                                               ; preds = %34
  %50 = getelementptr inbounds %struct.HIP_vector_base, ptr %11, i32 0, i32 0
  %51 = getelementptr inbounds %struct.anon, ptr %50, i32 0, i32 2
  %52 = load float, ptr %51, align 8
  br label %53

53:                                               ; preds = %49, %45
  %54 = phi contract float [ %48, %45 ], [ %52, %49 ]
  %55 = getelementptr inbounds %struct.HIP_vector_base, ptr %4, i32 0, i32 0
  %56 = getelementptr inbounds %struct.anon, ptr %55, i32 0, i32 1
  store float %54, ptr %56, align 4
  %57 = getelementptr inbounds %struct.HIP_vector_base, ptr %4, i32 0, i32 0
  %58 = getelementptr inbounds %struct.anon, ptr %57, i32 0, i32 2
  %59 = load float, ptr %58, align 8
  %60 = getelementptr inbounds %struct.HIP_vector_base, ptr %11, i32 0, i32 0
  %61 = getelementptr inbounds %struct.anon, ptr %60, i32 0, i32 1
  %62 = load float, ptr %61, align 4
  %63 = fcmp contract olt float %59, %62
  br i1 %63, label %64, label %68

64:                                               ; preds = %53
  %65 = getelementptr inbounds %struct.HIP_vector_base, ptr %4, i32 0, i32 0
  %66 = getelementptr inbounds %struct.anon, ptr %65, i32 0, i32 2
  %67 = load float, ptr %66, align 8
  br label %72

68:                                               ; preds = %53
  %69 = getelementptr inbounds %struct.HIP_vector_base, ptr %11, i32 0, i32 0
  %70 = getelementptr inbounds %struct.anon, ptr %69, i32 0, i32 1
  %71 = load float, ptr %70, align 4
  br label %72

72:                                               ; preds = %68, %64
  %73 = phi contract float [ %67, %64 ], [ %71, %68 ]
  %74 = getelementptr inbounds %struct.HIP_vector_base, ptr %4, i32 0, i32 0
  %75 = getelementptr inbounds %struct.anon, ptr %74, i32 0, i32 2
  store float %73, ptr %75, align 8
  %76 = getelementptr inbounds %struct.HIP_vector_base, ptr %4, i32 0, i32 0
  %77 = getelementptr inbounds %struct.anon, ptr %76, i32 0, i32 3
  %78 = load float, ptr %77, align 4
  %79 = getelementptr inbounds %struct.HIP_vector_base, ptr %11, i32 0, i32 0
  %80 = getelementptr inbounds %struct.anon, ptr %79, i32 0, i32 0
  %81 = load float, ptr %80, align 16
  %82 = fcmp contract olt float %78, %81
  br i1 %82, label %83, label %87

83:                                               ; preds = %72
  %84 = getelementptr inbounds %struct.HIP_vector_base, ptr %4, i32 0, i32 0
  %85 = getelementptr inbounds %struct.anon, ptr %84, i32 0, i32 3
  %86 = load float, ptr %85, align 4
  br label %91

87:                                               ; preds = %72
  %88 = getelementptr inbounds %struct.HIP_vector_base, ptr %11, i32 0, i32 0
  %89 = getelementptr inbounds %struct.anon, ptr %88, i32 0, i32 0
  %90 = load float, ptr %89, align 16
  br label %91

91:                                               ; preds = %87, %83
  %92 = phi contract float [ %86, %83 ], [ %90, %87 ]
  %93 = getelementptr inbounds %struct.HIP_vector_base, ptr %4, i32 0, i32 0
  %94 = getelementptr inbounds %struct.anon, ptr %93, i32 0, i32 3
  store float %92, ptr %94, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %18, ptr align 16 %4, i64 16, i1 false)
  %95 = load %struct.HIP_vector_type, ptr %18, align 16
  ret %struct.HIP_vector_type %95
}

; Function Attrs: argmemonly nocallback nofree nounwind willreturn
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #0

define %struct.HIP_vector_type @_Z10getHighest6float4S_(%struct.HIP_vector_base %0, %struct.HIP_vector_base %1) {
  %3 = alloca %struct.HIP_vector_type, align 16, addrspace(5)
  %4 = addrspacecast ptr addrspace(5) %3 to ptr
  %5 = getelementptr inbounds %struct.HIP_vector_type, ptr %4, i32 0, i32 0
  %6 = getelementptr inbounds %struct.HIP_vector_base, ptr %5, i32 0, i32 0
  %7 = getelementptr inbounds %union.anon, ptr %6, i32 0, i32 0
  %8 = getelementptr inbounds %struct.HIP_vector_base, ptr %7, i32 0, i32 0
  %9 = extractvalue ptr %4, 0
  store %union.anon %9, ptr %8, align 16
  %10 = alloca %struct.HIP_vector_type, align 16, addrspace(5)
  %11 = addrspacecast ptr addrspace(5) %10 to ptr
  %12 = getelementptr inbounds %struct.HIP_vector_type, ptr %11, i32 0, i32 0
  %13 = getelementptr inbounds %struct.HIP_vector_base, ptr %12, i32 0, i32 0
  %14 = getelementptr inbounds %union.anon, ptr %13, i32 0, i32 0
  %15 = getelementptr inbounds %struct.HIP_vector_base, ptr %14, i32 0, i32 0
  %16 = extractvalue ptr %11, 0
  store %union.anon %16, ptr %15, align 16
  %17 = alloca %struct.HIP_vector_type, align 16, addrspace(5)
  %18 = addrspacecast ptr addrspace(5) %17 to ptr
  %19 = getelementptr inbounds %struct.HIP_vector_base, ptr %4, i32 0, i32 0
  %20 = getelementptr inbounds %struct.anon, ptr %19, i32 0, i32 3
  %21 = load float, ptr %20, align 4
  %22 = getelementptr inbounds %struct.HIP_vector_base, ptr %11, i32 0, i32 0
  %23 = getelementptr inbounds %struct.anon, ptr %22, i32 0, i32 0
  %24 = load float, ptr %23, align 16
  %25 = fcmp contract oge float %21, %24
  br i1 %25, label %26, label %30

26:                                               ; preds = %2
  %27 = getelementptr inbounds %struct.HIP_vector_base, ptr %4, i32 0, i32 0
  %28 = getelementptr inbounds %struct.anon, ptr %27, i32 0, i32 3
  %29 = load float, ptr %28, align 4
  br label %34

30:                                               ; preds = %2
  %31 = getelementptr inbounds %struct.HIP_vector_base, ptr %11, i32 0, i32 0
  %32 = getelementptr inbounds %struct.anon, ptr %31, i32 0, i32 0
  %33 = load float, ptr %32, align 16
  br label %34

34:                                               ; preds = %30, %26
  %35 = phi contract float [ %29, %26 ], [ %33, %30 ]
  %36 = getelementptr inbounds %struct.HIP_vector_base, ptr %11, i32 0, i32 0
  %37 = getelementptr inbounds %struct.anon, ptr %36, i32 0, i32 0
  store float %35, ptr %37, align 16
  %38 = getelementptr inbounds %struct.HIP_vector_base, ptr %4, i32 0, i32 0
  %39 = getelementptr inbounds %struct.anon, ptr %38, i32 0, i32 2
  %40 = load float, ptr %39, align 8
  %41 = getelementptr inbounds %struct.HIP_vector_base, ptr %11, i32 0, i32 0
  %42 = getelementptr inbounds %struct.anon, ptr %41, i32 0, i32 1
  %43 = load float, ptr %42, align 4
  %44 = fcmp contract oge float %40, %43
  br i1 %44, label %45, label %49

45:                                               ; preds = %34
  %46 = getelementptr inbounds %struct.HIP_vector_base, ptr %4, i32 0, i32 0
  %47 = getelementptr inbounds %struct.anon, ptr %46, i32 0, i32 2
  %48 = load float, ptr %47, align 8
  br label %53

49:                                               ; preds = %34
  %50 = getelementptr inbounds %struct.HIP_vector_base, ptr %11, i32 0, i32 0
  %51 = getelementptr inbounds %struct.anon, ptr %50, i32 0, i32 1
  %52 = load float, ptr %51, align 4
  br label %53

53:                                               ; preds = %49, %45
  %54 = phi contract float [ %48, %45 ], [ %52, %49 ]
  %55 = getelementptr inbounds %struct.HIP_vector_base, ptr %11, i32 0, i32 0
  %56 = getelementptr inbounds %struct.anon, ptr %55, i32 0, i32 1
  store float %54, ptr %56, align 4
  %57 = getelementptr inbounds %struct.HIP_vector_base, ptr %4, i32 0, i32 0
  %58 = getelementptr inbounds %struct.anon, ptr %57, i32 0, i32 1
  %59 = load float, ptr %58, align 4
  %60 = getelementptr inbounds %struct.HIP_vector_base, ptr %11, i32 0, i32 0
  %61 = getelementptr inbounds %struct.anon, ptr %60, i32 0, i32 2
  %62 = load float, ptr %61, align 8
  %63 = fcmp contract oge float %59, %62
  br i1 %63, label %64, label %68

64:                                               ; preds = %53
  %65 = getelementptr inbounds %struct.HIP_vector_base, ptr %4, i32 0, i32 0
  %66 = getelementptr inbounds %struct.anon, ptr %65, i32 0, i32 1
  %67 = load float, ptr %66, align 4
  br label %72

68:                                               ; preds = %53
  %69 = getelementptr inbounds %struct.HIP_vector_base, ptr %11, i32 0, i32 0
  %70 = getelementptr inbounds %struct.anon, ptr %69, i32 0, i32 2
  %71 = load float, ptr %70, align 8
  br label %72

72:                                               ; preds = %68, %64
  %73 = phi contract float [ %67, %64 ], [ %71, %68 ]
  %74 = getelementptr inbounds %struct.HIP_vector_base, ptr %11, i32 0, i32 0
  %75 = getelementptr inbounds %struct.anon, ptr %74, i32 0, i32 2
  store float %73, ptr %75, align 8
  %76 = getelementptr inbounds %struct.HIP_vector_base, ptr %4, i32 0, i32 0
  %77 = getelementptr inbounds %struct.anon, ptr %76, i32 0, i32 0
  %78 = load float, ptr %77, align 16
  %79 = getelementptr inbounds %struct.HIP_vector_base, ptr %11, i32 0, i32 0
  %80 = getelementptr inbounds %struct.anon, ptr %79, i32 0, i32 3
  %81 = load float, ptr %80, align 4
  %82 = fcmp contract oge float %78, %81
  br i1 %82, label %83, label %87

83:                                               ; preds = %72
  %84 = getelementptr inbounds %struct.HIP_vector_base, ptr %4, i32 0, i32 0
  %85 = getelementptr inbounds %struct.anon, ptr %84, i32 0, i32 0
  %86 = load float, ptr %85, align 16
  br label %91

87:                                               ; preds = %72
  %88 = getelementptr inbounds %struct.HIP_vector_base, ptr %11, i32 0, i32 0
  %89 = getelementptr inbounds %struct.anon, ptr %88, i32 0, i32 3
  %90 = load float, ptr %89, align 4
  br label %91

91:                                               ; preds = %87, %83
  %92 = phi contract float [ %86, %83 ], [ %90, %87 ]
  %93 = getelementptr inbounds %struct.HIP_vector_base, ptr %11, i32 0, i32 0
  %94 = getelementptr inbounds %struct.anon, ptr %93, i32 0, i32 3
  store float %92, ptr %94, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %18, ptr align 16 %11, i64 16, i1 false)
  %95 = load %struct.HIP_vector_type, ptr %18, align 16
  ret %struct.HIP_vector_type %95
}

; Function Attrs: convergent mustprogress noinline norecurse nounwind optnone
define amdgpu_kernel void @_Z14mergeSortFirstP6float4i(ptr addrspace(1) noundef %0, i32 noundef %1) #1 {
  %3 = alloca %struct.texture, align 8, addrspace(5)
  %4 = addrspacecast ptr addrspace(5) %3 to ptr
  %5 = alloca %struct.HIP_vector_type, align 16, addrspace(5)
  %6 = addrspacecast ptr addrspace(5) %5 to ptr
  %7 = alloca ptr, align 8, addrspace(5)
  %8 = addrspacecast ptr addrspace(5) %7 to ptr
  %9 = alloca i32, align 4, addrspace(5)
  %10 = addrspacecast ptr addrspace(5) %9 to ptr
  %11 = alloca i32, align 4, addrspace(5)
  %12 = addrspacecast ptr addrspace(5) %11 to ptr
  %13 = alloca %struct.HIP_vector_type, align 16, addrspace(5)
  %14 = addrspacecast ptr addrspace(5) %13 to ptr
  %15 = alloca i64, align 4, addrspace(5)
  %16 = addrspacecast ptr addrspace(5) %15 to ptr
  %17 = alloca %struct.HIP_vector_type, align 16, addrspace(5)
  %18 = addrspacecast ptr addrspace(5) %17 to ptr
  %19 = alloca %struct.float4, align 16, addrspace(5)
  %20 = addrspacecast ptr addrspace(5) %19 to ptr
  %21 = addrspacecast ptr addrspace(1) %0 to ptr
  store ptr %21, ptr %8, align 8
  store i32 %1, ptr %10, align 4
  %22 = call noundef i32 @_ZN25__cuda_builtin_blockIdx_t17__fetch_builtin_xEv() #7
  store i32 %22, ptr %12, align 4
  %23 = load i32, ptr %12, align 4
  %24 = call noundef i32 @_ZN25__cuda_builtin_blockDim_t17__fetch_builtin_xEv() #7
  %25 = mul i32 %23, %24
  %26 = call noundef i32 @_ZN26__cuda_builtin_threadIdx_t17__fetch_builtin_xEv() #7
  %27 = add i32 %25, %26
  %28 = load i32, ptr %10, align 4
  %29 = sdiv i32 %28, 4
  %30 = icmp ult i32 %27, %29
  br i1 %30, label %31, label %59

31:                                               ; preds = %2
  call void @llvm.memcpy.p0.p0.i64(ptr %4, ptr addrspacecast (ptr addrspace(1) @tex to ptr), i64 88, i1 false)
  %32 = getelementptr inbounds %struct.textureReference, ptr %4, i32 0, i32 0
  %33 = load i32, ptr %12, align 4
  %34 = call noundef i32 @_ZN25__cuda_builtin_blockDim_t17__fetch_builtin_xEv() #7
  %35 = mul i32 %33, %34
  %36 = call noundef i32 @_ZN26__cuda_builtin_threadIdx_t17__fetch_builtin_xEv() #7
  %37 = add i32 %35, %36
  %38 = load %struct.textureReference, ptr %32, align 8
  %39 = call %struct.HIP_vector_type @_ZL10tex1DfetchI15HIP_vector_typeIfLj4EEL18hipTextureReadMode0EEN13__hip_tex_retIT_XT0_EbE4typeE7textureIS4_Li1EXT0_EEi(%struct.textureReference %38, i32 %37)
  %40 = getelementptr inbounds %struct.HIP_vector_type, ptr %6, i32 0, i32 0
  %41 = extractvalue %struct.HIP_vector_type %39, 0
  store %struct.HIP_vector_base %41, ptr %40, align 16
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %20, ptr align 16 %14, i64 16, i1 false)
  %42 = call %struct.float4 @_Z8sortElem6float4(ptr noundef byval(%struct.float4) align 16 %20) #7
  %43 = getelementptr inbounds %struct.float4, ptr %18, i32 0, i32 0
  %44 = extractvalue %struct.float4 %42, 0
  store float %44, ptr %43, align 16
  %45 = getelementptr inbounds %struct.float4, ptr %18, i32 0, i32 1
  %46 = extractvalue %struct.float4 %42, 1
  store float %46, ptr %45, align 4
  %47 = getelementptr inbounds %struct.float4, ptr %18, i32 0, i32 2
  %48 = extractvalue %struct.float4 %42, 2
  store float %48, ptr %47, align 8
  %49 = getelementptr inbounds %struct.float4, ptr %18, i32 0, i32 3
  %50 = extractvalue %struct.float4 %42, 3
  store float %50, ptr %49, align 4
  %51 = load ptr, ptr %8, align 8
  %52 = load i32, ptr %12, align 4
  %53 = call noundef i32 @_ZN25__cuda_builtin_blockDim_t17__fetch_builtin_xEv() #7
  %54 = mul i32 %52, %53
  %55 = call noundef i32 @_ZN26__cuda_builtin_threadIdx_t17__fetch_builtin_xEv() #7
  %56 = add i32 %54, %55
  %57 = zext i32 %56 to i64
  %58 = getelementptr inbounds %struct.HIP_vector_type, ptr %51, i64 %57
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %58, ptr align 16 %18, i64 16, i1 false)
  br label %59

59:                                               ; preds = %31, %2
  ret void
}

; Function Attrs: alwaysinline convergent mustprogress nounwind
define linkonce_odr noundef i32 @_ZN25__cuda_builtin_blockIdx_t17__fetch_builtin_xEv() #2 comdat align 2 {
  %1 = call i32 @llvm.amdgcn.workgroup.id.x()
  ret i32 %1
}

; Function Attrs: alwaysinline convergent mustprogress nounwind
define linkonce_odr noundef i32 @_ZN25__cuda_builtin_blockDim_t17__fetch_builtin_xEv() #2 comdat align 2 {
  %1 = call i32 @cudaamd.nvvm.read.ptx.sreg.ntid.x()
  ret i32 %1
}

; Function Attrs: alwaysinline convergent mustprogress nounwind
define linkonce_odr noundef i32 @_ZN26__cuda_builtin_threadIdx_t17__fetch_builtin_xEv() #2 comdat align 2 {
  %1 = call i32 @llvm.amdgcn.workitem.id.x()
  ret i32 %1
}

; Function Attrs: alwaysinline convergent mustprogress nounwind
define internal %struct.float4 @_ZL10tex1DfetchI6float4EN17__nv_tex_rmet_retIT_E4typeE7textureIS2_Li1EL19cudaTextureReadMode0EEi(i64 %0, i32 noundef %1) #2 {
  %3 = alloca %struct.float4, align 16, addrspace(5)
  %4 = addrspacecast ptr addrspace(5) %3 to ptr
  %5 = alloca i64, align 4, addrspace(5)
  %6 = addrspacecast ptr addrspace(5) %5 to ptr
  %7 = alloca i32, align 4, addrspace(5)
  %8 = addrspacecast ptr addrspace(5) %7 to ptr
  %9 = alloca i64, align 4, addrspace(5)
  %10 = addrspacecast ptr addrspace(5) %9 to ptr
  store i64 %0, ptr %6, align 4
  store i32 %1, ptr %8, align 4
  %11 = load i64, ptr %6, align 4
  store i64 %11, ptr %10, align 4
  %12 = load i32, ptr %8, align 4
  %13 = load i64, ptr %10, align 4
  call void @_ZN12_GLOBAL__N_110__cuda_tex11__tex_fetchINS0_5__TagILi95EEE6float47textureIS4_Li1EL19cudaTextureReadMode0EEJiEEEvPT0_T1_DpT2_(ptr noundef %4, i64 %13, i32 noundef %12) #7
  %14 = load %struct.float4, ptr %4, align 16
  ret %struct.float4 %14
}

; Function Attrs: nounwind readnone
declare i64 @llvm.nvvm.texsurf.handle.internal.p1(ptr addrspace(1)) #3

; Function Attrs: convergent mustprogress noinline norecurse nounwind optnone
define amdgpu_kernel void @_Z13mergeSortPassP6float4ii(ptr addrspace(1) noundef %0, i32 noundef %1, i32 noundef %2) #1 {
  %4 = alloca %struct.texture, align 8, addrspace(5)
  %5 = addrspacecast ptr addrspace(5) %4 to ptr
  %6 = alloca %struct.HIP_vector_type, align 16, addrspace(5)
  %7 = addrspacecast ptr addrspace(5) %6 to ptr
  %8 = alloca %struct.texture, align 8, addrspace(5)
  %9 = addrspacecast ptr addrspace(5) %8 to ptr
  %10 = alloca %struct.HIP_vector_type, align 16, addrspace(5)
  %11 = addrspacecast ptr addrspace(5) %10 to ptr
  %12 = alloca %struct.texture, align 8, addrspace(5)
  %13 = addrspacecast ptr addrspace(5) %12 to ptr
  %14 = alloca %struct.HIP_vector_type, align 16, addrspace(5)
  %15 = addrspacecast ptr addrspace(5) %14 to ptr
  %16 = alloca %struct.texture, align 8, addrspace(5)
  %17 = addrspacecast ptr addrspace(5) %16 to ptr
  %18 = alloca %struct.HIP_vector_type, align 16, addrspace(5)
  %19 = addrspacecast ptr addrspace(5) %18 to ptr
  %20 = alloca %struct.texture, align 8, addrspace(5)
  %21 = addrspacecast ptr addrspace(5) %20 to ptr
  %22 = alloca %struct.HIP_vector_type, align 16, addrspace(5)
  %23 = addrspacecast ptr addrspace(5) %22 to ptr
  %24 = alloca ptr, align 8, addrspace(5)
  %25 = addrspacecast ptr addrspace(5) %24 to ptr
  %26 = alloca i32, align 4, addrspace(5)
  %27 = addrspacecast ptr addrspace(5) %26 to ptr
  %28 = alloca i32, align 4, addrspace(5)
  %29 = addrspacecast ptr addrspace(5) %28 to ptr
  %30 = alloca i32, align 4, addrspace(5)
  %31 = addrspacecast ptr addrspace(5) %30 to ptr
  %32 = alloca i32, align 4, addrspace(5)
  %33 = addrspacecast ptr addrspace(5) %32 to ptr
  %34 = alloca i32, align 4, addrspace(5)
  %35 = addrspacecast ptr addrspace(5) %34 to ptr
  %36 = alloca i32, align 4, addrspace(5)
  %37 = addrspacecast ptr addrspace(5) %36 to ptr
  %38 = alloca i32, align 4, addrspace(5)
  %39 = addrspacecast ptr addrspace(5) %38 to ptr
  %40 = alloca ptr, align 8, addrspace(5)
  %41 = addrspacecast ptr addrspace(5) %40 to ptr
  %42 = alloca i32, align 4, addrspace(5)
  %43 = addrspacecast ptr addrspace(5) %42 to ptr
  %44 = alloca %struct.HIP_vector_type, align 16, addrspace(5)
  %45 = addrspacecast ptr addrspace(5) %44 to ptr
  %46 = alloca i64, align 4, addrspace(5)
  %47 = addrspacecast ptr addrspace(5) %46 to ptr
  %48 = alloca i32, align 4, addrspace(5)
  %49 = addrspacecast ptr addrspace(5) %48 to ptr
  %50 = alloca i32, align 4, addrspace(5)
  %51 = addrspacecast ptr addrspace(5) %50 to ptr
  %52 = alloca i32, align 4, addrspace(5)
  %53 = addrspacecast ptr addrspace(5) %52 to ptr
  %54 = alloca %struct.HIP_vector_type, align 16, addrspace(5)
  %55 = addrspacecast ptr addrspace(5) %54 to ptr
  %56 = alloca %struct.HIP_vector_type, align 16, addrspace(5)
  %57 = addrspacecast ptr addrspace(5) %56 to ptr
  %58 = alloca %struct.HIP_vector_type, align 16, addrspace(5)
  %59 = addrspacecast ptr addrspace(5) %58 to ptr
  %60 = alloca i64, align 4, addrspace(5)
  %61 = addrspacecast ptr addrspace(5) %60 to ptr
  %62 = alloca %struct.HIP_vector_type, align 16, addrspace(5)
  %63 = addrspacecast ptr addrspace(5) %62 to ptr
  %64 = alloca i64, align 4, addrspace(5)
  %65 = addrspacecast ptr addrspace(5) %64 to ptr
  %66 = alloca %struct.HIP_vector_type, align 16, addrspace(5)
  %67 = addrspacecast ptr addrspace(5) %66 to ptr
  %68 = alloca i64, align 4, addrspace(5)
  %69 = addrspacecast ptr addrspace(5) %68 to ptr
  %70 = alloca %struct.HIP_vector_type, align 16, addrspace(5)
  %71 = addrspacecast ptr addrspace(5) %70 to ptr
  %72 = alloca i64, align 4, addrspace(5)
  %73 = addrspacecast ptr addrspace(5) %72 to ptr
  %74 = alloca %struct.HIP_vector_type, align 16, addrspace(5)
  %75 = addrspacecast ptr addrspace(5) %74 to ptr
  %76 = alloca %struct.float4, align 16, addrspace(5)
  %77 = addrspacecast ptr addrspace(5) %76 to ptr
  %78 = alloca %struct.float4, align 16, addrspace(5)
  %79 = addrspacecast ptr addrspace(5) %78 to ptr
  %80 = alloca %struct.HIP_vector_type, align 16, addrspace(5)
  %81 = addrspacecast ptr addrspace(5) %80 to ptr
  %82 = alloca %struct.float4, align 16, addrspace(5)
  %83 = addrspacecast ptr addrspace(5) %82 to ptr
  %84 = alloca %struct.float4, align 16, addrspace(5)
  %85 = addrspacecast ptr addrspace(5) %84 to ptr
  %86 = alloca %struct.HIP_vector_type, align 16, addrspace(5)
  %87 = addrspacecast ptr addrspace(5) %86 to ptr
  %88 = alloca %struct.float4, align 16, addrspace(5)
  %89 = addrspacecast ptr addrspace(5) %88 to ptr
  %90 = alloca %struct.HIP_vector_type, align 16, addrspace(5)
  %91 = addrspacecast ptr addrspace(5) %90 to ptr
  %92 = alloca %struct.float4, align 16, addrspace(5)
  %93 = addrspacecast ptr addrspace(5) %92 to ptr
  %94 = alloca i8, align 1, addrspace(5)
  %95 = addrspacecast ptr addrspace(5) %94 to ptr
  %96 = alloca i8, align 1, addrspace(5)
  %97 = addrspacecast ptr addrspace(5) %96 to ptr
  %98 = addrspacecast ptr addrspace(1) %0 to ptr
  store ptr %98, ptr %25, align 8
  store i32 %1, ptr %27, align 4
  store i32 %2, ptr %29, align 4
  %99 = call noundef i32 @_ZN25__cuda_builtin_blockIdx_t17__fetch_builtin_xEv() #7
  %100 = call noundef i32 @_ZN25__cuda_builtin_blockDim_t17__fetch_builtin_xEv() #7
  %101 = mul i32 %99, %100
  %102 = call noundef i32 @_ZN26__cuda_builtin_threadIdx_t17__fetch_builtin_xEv() #7
  %103 = add i32 %101, %102
  store i32 %103, ptr %31, align 4
  %104 = load i32, ptr %31, align 4
  %105 = load i32, ptr %29, align 4
  %106 = sdiv i32 %104, %105
  store i32 %106, ptr %33, align 4
  %107 = load i32, ptr %33, align 4
  %108 = icmp sge i32 %107, 1024
  br i1 %108, label %109, label %110

109:                                              ; preds = %3
  br label %316

110:                                              ; preds = %3
  %111 = load i32, ptr %31, align 4
  %112 = load i32, ptr %33, align 4
  %113 = load i32, ptr %29, align 4
  %114 = mul nsw i32 %112, %113
  %115 = sub nsw i32 %111, %114
  store i32 %115, ptr %35, align 4
  %116 = load i32, ptr %33, align 4
  %117 = sext i32 %116 to i64
  %118 = getelementptr inbounds [1025 x i32], ptr addrspacecast (ptr addrspace(4) @constStartAddr to ptr), i64 0, i64 %117
  %119 = load i32, ptr %118, align 4
  %120 = load i32, ptr %35, align 4
  %121 = load i32, ptr %27, align 4
  %122 = mul nsw i32 %120, %121
  %123 = add nsw i32 %119, %122
  store i32 %123, ptr %37, align 4
  %124 = load i32, ptr %37, align 4
  %125 = load i32, ptr %27, align 4
  %126 = sdiv i32 %125, 2
  %127 = add nsw i32 %124, %126
  store i32 %127, ptr %39, align 4
  %128 = load ptr, ptr %25, align 8
  %129 = load i32, ptr %37, align 4
  %130 = sext i32 %129 to i64
  %131 = getelementptr inbounds %struct.float4, ptr %128, i64 %130
  store ptr %131, ptr %41, align 8
  %132 = load i32, ptr %37, align 4
  %133 = load i32, ptr %33, align 4
  %134 = add nsw i32 %133, 1
  %135 = sext i32 %134 to i64
  %136 = getelementptr inbounds [1025 x i32], ptr addrspacecast (ptr addrspace(4) @constStartAddr to ptr), i64 0, i64 %135
  %137 = load i32, ptr %136, align 4
  %138 = icmp sge i32 %132, %137
  br i1 %138, label %139, label %140

139:                                              ; preds = %110
  br label %316

140:                                              ; preds = %110
  %141 = load i32, ptr %39, align 4
  %142 = load i32, ptr %33, align 4
  %143 = add nsw i32 %142, 1
  %144 = sext i32 %143 to i64
  %145 = getelementptr inbounds [1025 x i32], ptr addrspacecast (ptr addrspace(4) @constStartAddr to ptr), i64 0, i64 %144
  %146 = load i32, ptr %145, align 4
  %147 = icmp sge i32 %141, %146
  br i1 %147, label %148, label %177

148:                                              ; preds = %140
  store i32 0, ptr %43, align 4
  br label %149

149:                                              ; preds = %173, %148
  %150 = load i32, ptr %43, align 4
  %151 = load i32, ptr %33, align 4
  %152 = add nsw i32 %151, 1
  %153 = sext i32 %152 to i64
  %154 = getelementptr inbounds [1025 x i32], ptr addrspacecast (ptr addrspace(4) @constStartAddr to ptr), i64 0, i64 %153
  %155 = load i32, ptr %154, align 4
  %156 = load i32, ptr %37, align 4
  %157 = sub nsw i32 %155, %156
  %158 = icmp slt i32 %150, %157
  br i1 %158, label %159, label %176

159:                                              ; preds = %149
  call void @llvm.memcpy.p0.p0.i64(ptr %5, ptr addrspacecast (ptr addrspace(1) @tex to ptr), i64 88, i1 false)
  %160 = getelementptr inbounds %struct.textureReference, ptr %5, i32 0, i32 0
  %161 = load i32, ptr %37, align 4
  %162 = load i32, ptr %43, align 4
  %163 = add nsw i32 %161, %162
  %164 = load %struct.textureReference, ptr %160, align 8
  %165 = call %struct.HIP_vector_type @_ZL10tex1DfetchI15HIP_vector_typeIfLj4EEL18hipTextureReadMode0EEN13__hip_tex_retIT_XT0_EbE4typeE7textureIS4_Li1EXT0_EEi(%struct.textureReference %164, i32 %163)
  %166 = getelementptr inbounds %struct.HIP_vector_type, ptr %7, i32 0, i32 0
  %167 = extractvalue %struct.HIP_vector_type %165, 0
  store %struct.HIP_vector_base %167, ptr %166, align 16
  %168 = load ptr, ptr %41, align 8
  %169 = load i32, ptr %43, align 4
  %170 = sext i32 %169 to i64
  %171 = getelementptr inbounds %struct.HIP_vector_type, ptr %168, i64 %170
  %172 = call dereferenceable(16) ptr @_ZN15HIP_vector_typeIfLj4EEaSERKS0_(ptr dereferenceable(16) %171, ptr dereferenceable(16) %7)
  br label %173

173:                                              ; preds = %159
  %174 = load i32, ptr %43, align 4
  %175 = add nsw i32 %174, 1
  store i32 %175, ptr %43, align 4
  br label %149, !llvm.loop !12

176:                                              ; preds = %149
  br label %316

177:                                              ; preds = %140
  store i32 0, ptr %49, align 4
  store i32 0, ptr %51, align 4
  store i32 0, ptr %53, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr %9, ptr addrspacecast (ptr addrspace(1) @tex to ptr), i64 88, i1 false)
  %178 = getelementptr inbounds %struct.textureReference, ptr %9, i32 0, i32 0
  %179 = load i32, ptr %37, align 4
  %180 = load i32, ptr %49, align 4
  %181 = add nsw i32 %179, %180
  %182 = load %struct.textureReference, ptr %178, align 8
  %183 = call %struct.HIP_vector_type @_ZL10tex1DfetchI15HIP_vector_typeIfLj4EEL18hipTextureReadMode0EEN13__hip_tex_retIT_XT0_EbE4typeE7textureIS4_Li1EXT0_EEi(%struct.textureReference %182, i32 %181)
  %184 = getelementptr inbounds %struct.HIP_vector_type, ptr %11, i32 0, i32 0
  %185 = extractvalue %struct.HIP_vector_type %183, 0
  store %struct.HIP_vector_base %185, ptr %184, align 16
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %55, ptr align 16 %59, i64 16, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr %13, ptr addrspacecast (ptr addrspace(1) @tex to ptr), i64 88, i1 false)
  %186 = getelementptr inbounds %struct.textureReference, ptr %13, i32 0, i32 0
  %187 = load i32, ptr %39, align 4
  %188 = load i32, ptr %51, align 4
  %189 = add nsw i32 %187, %188
  %190 = load %struct.textureReference, ptr %186, align 8
  %191 = call %struct.HIP_vector_type @_ZL10tex1DfetchI15HIP_vector_typeIfLj4EEL18hipTextureReadMode0EEN13__hip_tex_retIT_XT0_EbE4typeE7textureIS4_Li1EXT0_EEi(%struct.textureReference %190, i32 %189)
  %192 = getelementptr inbounds %struct.HIP_vector_type, ptr %15, i32 0, i32 0
  %193 = extractvalue %struct.HIP_vector_type %191, 0
  store %struct.HIP_vector_base %193, ptr %192, align 16
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %57, ptr align 16 %63, i64 16, i1 false)
  br label %194

194:                                              ; preds = %177, %309
  call void @llvm.memcpy.p0.p0.i64(ptr %17, ptr addrspacecast (ptr addrspace(1) @tex to ptr), i64 88, i1 false)
  %195 = getelementptr inbounds %struct.textureReference, ptr %17, i32 0, i32 0
  %196 = load i32, ptr %37, align 4
  %197 = load i32, ptr %49, align 4
  %198 = add nsw i32 %196, %197
  %199 = add nsw i32 %198, 1
  %200 = load %struct.textureReference, ptr %195, align 8
  %201 = call %struct.HIP_vector_type @_ZL10tex1DfetchI15HIP_vector_typeIfLj4EEL18hipTextureReadMode0EEN13__hip_tex_retIT_XT0_EbE4typeE7textureIS4_Li1EXT0_EEi(%struct.textureReference %200, i32 %199)
  %202 = getelementptr inbounds %struct.HIP_vector_type, ptr %19, i32 0, i32 0
  %203 = extractvalue %struct.HIP_vector_type %201, 0
  store %struct.HIP_vector_base %203, ptr %202, align 16
  call void @llvm.memcpy.p0.p0.i64(ptr %21, ptr addrspacecast (ptr addrspace(1) @tex to ptr), i64 88, i1 false)
  %204 = getelementptr inbounds %struct.textureReference, ptr %21, i32 0, i32 0
  %205 = load i32, ptr %39, align 4
  %206 = load i32, ptr %51, align 4
  %207 = add nsw i32 %205, %206
  %208 = add nsw i32 %207, 1
  %209 = load %struct.textureReference, ptr %204, align 8
  %210 = call %struct.HIP_vector_type @_ZL10tex1DfetchI15HIP_vector_typeIfLj4EEL18hipTextureReadMode0EEN13__hip_tex_retIT_XT0_EbE4typeE7textureIS4_Li1EXT0_EEi(%struct.textureReference %209, i32 %208)
  %211 = getelementptr inbounds %struct.HIP_vector_type, ptr %23, i32 0, i32 0
  %212 = extractvalue %struct.HIP_vector_type %210, 0
  store %struct.HIP_vector_base %212, ptr %211, align 16
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %77, ptr align 16 %55, i64 16, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %79, ptr align 16 %57, i64 16, i1 false)
  %213 = call %struct.float4 @_Z9getLowest6float4S_(ptr noundef byval(%struct.float4) align 16 %77, ptr noundef byval(%struct.float4) align 16 %79) #7
  %214 = getelementptr inbounds %struct.float4, ptr %75, i32 0, i32 0
  %215 = extractvalue %struct.float4 %213, 0
  store float %215, ptr %214, align 16
  %216 = getelementptr inbounds %struct.float4, ptr %75, i32 0, i32 1
  %217 = extractvalue %struct.float4 %213, 1
  store float %217, ptr %216, align 4
  %218 = getelementptr inbounds %struct.float4, ptr %75, i32 0, i32 2
  %219 = extractvalue %struct.float4 %213, 2
  store float %219, ptr %218, align 8
  %220 = getelementptr inbounds %struct.float4, ptr %75, i32 0, i32 3
  %221 = extractvalue %struct.float4 %213, 3
  store float %221, ptr %220, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %83, ptr align 16 %55, i64 16, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %85, ptr align 16 %57, i64 16, i1 false)
  %222 = call %struct.float4 @_Z10getHighest6float4S_(ptr noundef byval(%struct.float4) align 16 %83, ptr noundef byval(%struct.float4) align 16 %85) #7
  %223 = getelementptr inbounds %struct.float4, ptr %81, i32 0, i32 0
  %224 = extractvalue %struct.float4 %222, 0
  store float %224, ptr %223, align 16
  %225 = getelementptr inbounds %struct.float4, ptr %81, i32 0, i32 1
  %226 = extractvalue %struct.float4 %222, 1
  store float %226, ptr %225, align 4
  %227 = getelementptr inbounds %struct.float4, ptr %81, i32 0, i32 2
  %228 = extractvalue %struct.float4 %222, 2
  store float %228, ptr %227, align 8
  %229 = getelementptr inbounds %struct.float4, ptr %81, i32 0, i32 3
  %230 = extractvalue %struct.float4 %222, 3
  store float %230, ptr %229, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %89, ptr align 16 %75, i64 16, i1 false)
  %231 = call %struct.float4 @_Z8sortElem6float4(ptr noundef byval(%struct.float4) align 16 %89) #7
  %232 = getelementptr inbounds %struct.float4, ptr %87, i32 0, i32 0
  %233 = extractvalue %struct.float4 %231, 0
  store float %233, ptr %232, align 16
  %234 = getelementptr inbounds %struct.float4, ptr %87, i32 0, i32 1
  %235 = extractvalue %struct.float4 %231, 1
  store float %235, ptr %234, align 4
  %236 = getelementptr inbounds %struct.float4, ptr %87, i32 0, i32 2
  %237 = extractvalue %struct.float4 %231, 2
  store float %237, ptr %236, align 8
  %238 = getelementptr inbounds %struct.float4, ptr %87, i32 0, i32 3
  %239 = extractvalue %struct.float4 %231, 3
  store float %239, ptr %238, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %55, ptr align 16 %87, i64 16, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %93, ptr align 16 %81, i64 16, i1 false)
  %240 = call %struct.float4 @_Z8sortElem6float4(ptr noundef byval(%struct.float4) align 16 %93) #7
  %241 = getelementptr inbounds %struct.float4, ptr %91, i32 0, i32 0
  %242 = extractvalue %struct.float4 %240, 0
  store float %242, ptr %241, align 16
  %243 = getelementptr inbounds %struct.float4, ptr %91, i32 0, i32 1
  %244 = extractvalue %struct.float4 %240, 1
  store float %244, ptr %243, align 4
  %245 = getelementptr inbounds %struct.float4, ptr %91, i32 0, i32 2
  %246 = extractvalue %struct.float4 %240, 2
  store float %246, ptr %245, align 8
  %247 = getelementptr inbounds %struct.float4, ptr %91, i32 0, i32 3
  %248 = extractvalue %struct.float4 %240, 3
  store float %248, ptr %247, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %57, ptr align 16 %91, i64 16, i1 false)
  %249 = load ptr, ptr %41, align 8
  %250 = load i32, ptr %53, align 4
  %251 = add nsw i32 %250, 1
  store i32 %251, ptr %53, align 4
  %252 = sext i32 %250 to i64
  %253 = getelementptr inbounds %struct.HIP_vector_type, ptr %249, i64 %252
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %253, ptr align 16 %55, i64 16, i1 false)
  %254 = load i32, ptr %49, align 4
  %255 = add nsw i32 %254, 1
  %256 = load i32, ptr %27, align 4
  %257 = sdiv i32 %256, 2
  %258 = icmp slt i32 %255, %257
  %259 = zext i1 %258 to i8
  store i8 %259, ptr %95, align 1
  %260 = load i32, ptr %51, align 4
  %261 = add nsw i32 %260, 1
  %262 = load i32, ptr %27, align 4
  %263 = sdiv i32 %262, 2
  %264 = icmp slt i32 %261, %263
  br i1 %264, label %265, label %276

265:                                              ; preds = %194
  %266 = load i32, ptr %39, align 4
  %267 = load i32, ptr %51, align 4
  %268 = add nsw i32 %266, %267
  %269 = add nsw i32 %268, 1
  %270 = load i32, ptr %33, align 4
  %271 = add nsw i32 %270, 1
  %272 = sext i32 %271 to i64
  %273 = getelementptr inbounds [1025 x i32], ptr addrspacecast (ptr addrspace(4) @constStartAddr to ptr), i64 0, i64 %272
  %274 = load i32, ptr %273, align 4
  %275 = icmp slt i32 %269, %274
  br label %276

276:                                              ; preds = %265, %194
  %277 = phi i1 [ false, %194 ], [ %275, %265 ]
  %278 = zext i1 %277 to i8
  store i8 %278, ptr %97, align 1
  %279 = load i8, ptr %95, align 1
  %280 = trunc i8 %279 to i1
  br i1 %280, label %281, label %301

281:                                              ; preds = %276
  %282 = load i8, ptr %97, align 1
  %283 = trunc i8 %282 to i1
  br i1 %283, label %284, label %297

284:                                              ; preds = %281
  %285 = getelementptr inbounds %struct.float4, ptr %67, i32 0, i32 0
  %286 = load float, ptr %285, align 16
  %287 = getelementptr inbounds %struct.float4, ptr %71, i32 0, i32 0
  %288 = load float, ptr %287, align 16
  %289 = fcmp contract olt float %286, %288
  br i1 %289, label %290, label %293

290:                                              ; preds = %284
  %291 = load i32, ptr %49, align 4
  %292 = add nsw i32 %291, 1
  store i32 %292, ptr %49, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %55, ptr align 16 %67, i64 16, i1 false)
  br label %296

293:                                              ; preds = %284
  %294 = load i32, ptr %51, align 4
  %295 = add nsw i32 %294, 1
  store i32 %295, ptr %51, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %55, ptr align 16 %71, i64 16, i1 false)
  br label %296

296:                                              ; preds = %293, %290
  br label %300

297:                                              ; preds = %281
  %298 = load i32, ptr %49, align 4
  %299 = add nsw i32 %298, 1
  store i32 %299, ptr %49, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %55, ptr align 16 %67, i64 16, i1 false)
  br label %300

300:                                              ; preds = %297, %296
  br label %309

301:                                              ; preds = %276
  %302 = load i8, ptr %97, align 1
  %303 = trunc i8 %302 to i1
  br i1 %303, label %304, label %307

304:                                              ; preds = %301
  %305 = load i32, ptr %51, align 4
  %306 = add nsw i32 %305, 1
  store i32 %306, ptr %51, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %55, ptr align 16 %71, i64 16, i1 false)
  br label %308

307:                                              ; preds = %301
  br label %310

308:                                              ; preds = %304
  br label %309

309:                                              ; preds = %308, %300
  br label %194, !llvm.loop !14

310:                                              ; preds = %307
  %311 = load ptr, ptr %41, align 8
  %312 = load i32, ptr %53, align 4
  %313 = add nsw i32 %312, 1
  store i32 %313, ptr %53, align 4
  %314 = sext i32 %312 to i64
  %315 = getelementptr inbounds %struct.HIP_vector_type, ptr %311, i64 %314
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %315, ptr align 16 %57, i64 16, i1 false)
  br label %316

316:                                              ; preds = %310, %176, %139, %109
  ret void
}

; Function Attrs: convergent mustprogress noinline norecurse nounwind optnone
define amdgpu_kernel void @_Z9mergepackPfS_(ptr addrspace(1) noundef %0, ptr addrspace(1) noundef %1) #1 {
  %3 = alloca ptr, align 8, addrspace(5)
  %4 = addrspacecast ptr addrspace(5) %3 to ptr
  %5 = alloca ptr, align 8, addrspace(5)
  %6 = addrspacecast ptr addrspace(5) %5 to ptr
  %7 = alloca i32, align 4, addrspace(5)
  %8 = addrspacecast ptr addrspace(5) %7 to ptr
  %9 = alloca i32, align 4, addrspace(5)
  %10 = addrspacecast ptr addrspace(5) %9 to ptr
  %11 = addrspacecast ptr addrspace(1) %0 to ptr
  store ptr %11, ptr %4, align 8
  %12 = addrspacecast ptr addrspace(1) %1 to ptr
  store ptr %12, ptr %6, align 8
  %13 = call noundef i32 @_ZN25__cuda_builtin_blockIdx_t17__fetch_builtin_xEv() #7
  %14 = call noundef i32 @_ZN25__cuda_builtin_blockDim_t17__fetch_builtin_xEv() #7
  %15 = mul i32 %13, %14
  %16 = call noundef i32 @_ZN26__cuda_builtin_threadIdx_t17__fetch_builtin_xEv() #7
  %17 = add i32 %15, %16
  store i32 %17, ptr %8, align 4
  %18 = call noundef i32 @_ZN25__cuda_builtin_blockIdx_t17__fetch_builtin_yEv() #7
  store i32 %18, ptr %10, align 4
  %19 = load i32, ptr %10, align 4
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds [1025 x i32], ptr addrspacecast (ptr addrspace(4) @finalStartAddr to ptr), i64 0, i64 %20
  %22 = load i32, ptr %21, align 4
  %23 = load i32, ptr %8, align 4
  %24 = add nsw i32 %22, %23
  %25 = load i32, ptr %10, align 4
  %26 = add nsw i32 %25, 1
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds [1025 x i32], ptr addrspacecast (ptr addrspace(4) @finalStartAddr to ptr), i64 0, i64 %27
  %29 = load i32, ptr %28, align 4
  %30 = icmp sge i32 %24, %29
  br i1 %30, label %31, label %32

31:                                               ; preds = %2
  br label %58

32:                                               ; preds = %2
  %33 = load ptr, ptr %4, align 8
  %34 = load i32, ptr %10, align 4
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds [1025 x i32], ptr addrspacecast (ptr addrspace(4) @constStartAddr to ptr), i64 0, i64 %35
  %37 = load i32, ptr %36, align 4
  %38 = mul nsw i32 %37, 4
  %39 = load i32, ptr %10, align 4
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds [1024 x i32], ptr addrspacecast (ptr addrspace(4) @nullElems to ptr), i64 0, i64 %40
  %42 = load i32, ptr %41, align 4
  %43 = add nsw i32 %38, %42
  %44 = load i32, ptr %8, align 4
  %45 = add nsw i32 %43, %44
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds float, ptr %33, i64 %46
  %48 = load float, ptr %47, align 4
  %49 = load ptr, ptr %6, align 8
  %50 = load i32, ptr %10, align 4
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds [1025 x i32], ptr addrspacecast (ptr addrspace(4) @finalStartAddr to ptr), i64 0, i64 %51
  %53 = load i32, ptr %52, align 4
  %54 = load i32, ptr %8, align 4
  %55 = add nsw i32 %53, %54
  %56 = sext i32 %55 to i64
  %57 = getelementptr inbounds float, ptr %49, i64 %56
  store float %48, ptr %57, align 4
  br label %58

58:                                               ; preds = %32, %31
  ret void
}

; Function Attrs: alwaysinline convergent mustprogress nounwind
define linkonce_odr noundef i32 @_ZN25__cuda_builtin_blockIdx_t17__fetch_builtin_yEv() #2 comdat align 2 {
  %1 = call i32 @llvm.amdgcn.workgroup.id.y()
  ret i32 %1
}

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.nvvm.read.ptx.sreg.ctaid.x() #4

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.nvvm.read.ptx.sreg.ntid.x() #4

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.nvvm.read.ptx.sreg.tid.x() #4

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.nvvm.read.ptx.sreg.ctaid.y() #4

; Function Attrs: convergent mustprogress noinline nounwind optnone
define internal void @_ZN12_GLOBAL__N_110__cuda_tex11__tex_fetchINS0_5__TagILi95EEE6float47textureIS4_Li1EL19cudaTextureReadMode0EEJiEEEvPT0_T1_DpT2_(ptr noundef %0, i64 %1, i32 noundef %2) #5 {
  %4 = alloca ptr, align 8, addrspace(5)
  %5 = addrspacecast ptr addrspace(5) %4 to ptr
  %6 = alloca i64, align 4, addrspace(5)
  %7 = addrspacecast ptr addrspace(5) %6 to ptr
  %8 = alloca i32, align 4, addrspace(5)
  %9 = addrspacecast ptr addrspace(5) %8 to ptr
  %10 = alloca %struct.float4, align 16, addrspace(5)
  %11 = addrspacecast ptr addrspace(5) %10 to ptr
  %12 = alloca %struct.float4, align 16, addrspace(5)
  %13 = addrspacecast ptr addrspace(5) %12 to ptr
  %14 = alloca i64, align 4, addrspace(5)
  %15 = addrspacecast ptr addrspace(5) %14 to ptr
  store ptr %0, ptr %5, align 8
  store i64 %1, ptr %7, align 4
  store i32 %2, ptr %9, align 4
  %16 = load i64, ptr %7, align 4
  store i64 %16, ptr %15, align 4
  %17 = load i64, ptr %15, align 4
  %18 = call noundef i64 @_ZN12_GLOBAL__N_110__cuda_tex19__tex_handle_to_objI7textureI6float4Li1EL19cudaTextureReadMode0EEEEyT_(i64 %17) #7
  %19 = load i32, ptr %9, align 4
  %20 = call %struct.float4 @_ZN12_GLOBAL__N_110__cuda_tex14__tex_fetch_v4INS0_5__TagILi95EEEE5__runI6float4EET_yi(i64 noundef %18, i32 noundef %19) #7
  %21 = getelementptr inbounds %struct.float4, ptr %13, i32 0, i32 0
  %22 = extractvalue %struct.float4 %20, 0
  store float %22, ptr %21, align 16
  %23 = getelementptr inbounds %struct.float4, ptr %13, i32 0, i32 1
  %24 = extractvalue %struct.float4 %20, 1
  store float %24, ptr %23, align 4
  %25 = getelementptr inbounds %struct.float4, ptr %13, i32 0, i32 2
  %26 = extractvalue %struct.float4 %20, 2
  store float %26, ptr %25, align 8
  %27 = getelementptr inbounds %struct.float4, ptr %13, i32 0, i32 3
  %28 = extractvalue %struct.float4 %20, 3
  store float %28, ptr %27, align 4
  %29 = call %struct.float4 @_ZN12_GLOBAL__N_110__cuda_tex9__convertI6float4S2_E5__runILi4EEES2_S2_(ptr noundef byval(%struct.float4) align 16 %13) #7
  %30 = getelementptr inbounds %struct.float4, ptr %11, i32 0, i32 0
  %31 = extractvalue %struct.float4 %29, 0
  store float %31, ptr %30, align 16
  %32 = getelementptr inbounds %struct.float4, ptr %11, i32 0, i32 1
  %33 = extractvalue %struct.float4 %29, 1
  store float %33, ptr %32, align 4
  %34 = getelementptr inbounds %struct.float4, ptr %11, i32 0, i32 2
  %35 = extractvalue %struct.float4 %29, 2
  store float %35, ptr %34, align 8
  %36 = getelementptr inbounds %struct.float4, ptr %11, i32 0, i32 3
  %37 = extractvalue %struct.float4 %29, 3
  store float %37, ptr %36, align 4
  %38 = load ptr, ptr %5, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %38, ptr align 16 %11, i64 16, i1 false)
  ret void
}

; Function Attrs: convergent mustprogress noinline nounwind optnone
define internal %struct.float4 @_ZN12_GLOBAL__N_110__cuda_tex9__convertI6float4S2_E5__runILi4EEES2_S2_(ptr noundef byval(%struct.float4) align 16 %0) #5 align 2 {
  %2 = alloca %struct.float4, align 16, addrspace(5)
  %3 = addrspacecast ptr addrspace(5) %2 to ptr
  %4 = getelementptr inbounds %struct.float4, ptr %3, i32 0, i32 0
  %5 = getelementptr inbounds %struct.float4, ptr %0, i32 0, i32 0
  %6 = load float, ptr %5, align 16
  store float %6, ptr %4, align 16
  %7 = getelementptr inbounds %struct.float4, ptr %3, i32 0, i32 1
  %8 = getelementptr inbounds %struct.float4, ptr %0, i32 0, i32 1
  %9 = load float, ptr %8, align 4
  store float %9, ptr %7, align 4
  %10 = getelementptr inbounds %struct.float4, ptr %3, i32 0, i32 2
  %11 = getelementptr inbounds %struct.float4, ptr %0, i32 0, i32 2
  %12 = load float, ptr %11, align 8
  store float %12, ptr %10, align 8
  %13 = getelementptr inbounds %struct.float4, ptr %3, i32 0, i32 3
  %14 = getelementptr inbounds %struct.float4, ptr %0, i32 0, i32 3
  %15 = load float, ptr %14, align 4
  store float %15, ptr %13, align 4
  %16 = load %struct.float4, ptr %3, align 16
  ret %struct.float4 %16
}

; Function Attrs: convergent mustprogress noinline nounwind optnone
define internal %struct.float4 @_ZN12_GLOBAL__N_110__cuda_tex14__tex_fetch_v4INS0_5__TagILi95EEEE5__runI6float4EET_yi(i64 noundef %0, i32 noundef %1) #5 align 2 {
  %3 = alloca %struct.float4, align 16, addrspace(5)
  %4 = addrspacecast ptr addrspace(5) %3 to ptr
  %5 = alloca i64, align 8, addrspace(5)
  %6 = addrspacecast ptr addrspace(5) %5 to ptr
  %7 = alloca i32, align 4, addrspace(5)
  %8 = addrspacecast ptr addrspace(5) %7 to ptr
  store i64 %0, ptr %6, align 8
  store i32 %1, ptr %8, align 4
  %9 = getelementptr inbounds %struct.float4, ptr %4, i32 0, i32 0
  %10 = getelementptr inbounds %struct.float4, ptr %4, i32 0, i32 1
  %11 = getelementptr inbounds %struct.float4, ptr %4, i32 0, i32 2
  %12 = getelementptr inbounds %struct.float4, ptr %4, i32 0, i32 3
  %13 = load i64, ptr %6, align 8
  %14 = load i32, ptr %8, align 4
  %15 = call { float, float, float, float } asm "tex.1d.v4.f32.s32\09{$0, $1, $2, $3}, [$4, {$5}];", "=f,=f,=f,=f,l,r"(i64 %13, i32 %14) #8, !srcloc !15
  %16 = extractvalue { float, float, float, float } %15, 0
  %17 = extractvalue { float, float, float, float } %15, 1
  %18 = extractvalue { float, float, float, float } %15, 2
  %19 = extractvalue { float, float, float, float } %15, 3
  store float %16, ptr %9, align 16
  store float %17, ptr %10, align 4
  store float %18, ptr %11, align 8
  store float %19, ptr %12, align 4
  %20 = load %struct.float4, ptr %4, align 16
  ret %struct.float4 %20
}

; Function Attrs: convergent mustprogress noinline nounwind optnone
define internal noundef i64 @_ZN12_GLOBAL__N_110__cuda_tex19__tex_handle_to_objI7textureI6float4Li1EL19cudaTextureReadMode0EEEEyT_(i64 %0) #5 {
  %2 = alloca i64, align 4, addrspace(5)
  %3 = addrspacecast ptr addrspace(5) %2 to ptr
  %4 = alloca i64, align 8, addrspace(5)
  %5 = addrspacecast ptr addrspace(5) %4 to ptr
  store i64 %0, ptr %3, align 4
  %6 = load i64, ptr %3, align 4
  %7 = call i64 asm "mov.b64 $0, $1; ", "=l,l"(i64 %6) #8, !srcloc !16
  store i64 %7, ptr %5, align 8
  %8 = load i64, ptr %5, align 8
  ret i64 %8
}

; Function Attrs: nounwind readnone speculatable willreturn
declare i32 @llvm.amdgcn.workgroup.id.x() #6

declare i32 @cudaamd.nvvm.read.ptx.sreg.ntid.x()

; Function Attrs: nounwind readnone speculatable willreturn
declare i32 @llvm.amdgcn.workitem.id.x() #6

; Function Attrs: nounwind readnone speculatable willreturn
declare i32 @llvm.amdgcn.workgroup.id.y() #6

declare %struct.HIP_vector_type @_ZL10tex1DfetchI15HIP_vector_typeIfLj4EEL18hipTextureReadMode0EEN13__hip_tex_retIT_XT0_EbE4typeE7textureIS4_Li1EXT0_EEi(%struct.textureReference, i32)

declare dereferenceable(16) ptr @_ZN15HIP_vector_typeIfLj4EEaSERKS0_(ptr dereferenceable(16), ptr dereferenceable(16))

declare i32 @_Z9atomicAddPjj(ptr, i32)

declare i32 @_Z9atomicAddPii(ptr, i32)

declare i64 @_Z9atomicAddPyy(ptr, i64)

declare float @_Z9atomicAddPff(ptr, float)

declare i32 @_Z8atomicOrPii(ptr, i32)

declare i32 @_Z8atomicOrPjj(ptr, i32)

declare i64 @_Z8atomicOrPyy(ptr, i64)

declare i32 @_Z9atomicAndPii(ptr, i32)

declare i32 @_Z9atomicAndPjj(ptr, i32)

declare i64 @_Z9atomicAndPyy(ptr, i64)

declare i32 @_Z10atomicExchPii(ptr, i32)

declare i32 @_Z10atomicExchPjj(ptr, i32)

declare i64 @_Z10atomicExchPyy(ptr, i64)

declare float @_Z10atomicExchPff(ptr, float)

declare i32 @_Z9atomicDecPjj(ptr, i32)

declare i32 @_Z9atomicIncPjj(ptr, i32)

declare i32 @_Z9atomicMaxPii(ptr, i32)

declare i32 @_Z9atomicMaxPjj(ptr, i32)

declare i64 @_Z9atomicMaxPyy(ptr, i64)

declare i32 @_Z9atomicMinPii(ptr, i32)

declare i32 @_Z9atomicMinPjj(ptr, i32)

declare i64 @_Z9atomicMinPyy(ptr, i64)

declare i32 @_Z9atomicSubPii(ptr, i32)

declare i32 @_Z9atomicSubPjj(ptr, i32)

declare i32 @_Z9atomicXorPii(ptr, i32)

declare i32 @_Z9atomicXorPjj(ptr, i32)

declare i64 @_Z9atomicXorPyy(ptr, i64)

declare i32 @_Z9atomicCASPiii(ptr, i32, i32)

declare i32 @_Z9atomicCASPjjj(ptr, i32, i32)

declare i64 @_Z9atomicCASPyyy(ptr, i64, i64)

attributes #0 = { argmemonly nocallback nofree nounwind willreturn }
attributes #1 = { convergent mustprogress noinline norecurse nounwind optnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" }
attributes #2 = { alwaysinline convergent mustprogress nounwind "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" }
attributes #3 = { nounwind readnone }
attributes #4 = { nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #5 = { convergent mustprogress noinline nounwind optnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" }
attributes #6 = { nounwind readnone speculatable willreturn }
attributes #7 = { convergent nounwind }
attributes #8 = { convergent nounwind readnone }

!llvm.module.flags = !{!0, !1, !2, !3, !4}
!nvvm.annotations = !{!5, !6, !7, !8, !9}
!llvm.ident = !{!10, !11}

!0 = !{i32 2, !"SDK Version", [2 x i32] [i32 11, i32 5]}
!1 = !{i32 1, !"wchar_size", i32 4}
!2 = !{i32 4, !"nvvm-reflect-ftz", i32 0}
!3 = !{i32 7, !"PIC Level", i32 2}
!4 = !{i32 7, !"frame-pointer", i32 2}
!5 = !{ptr addrspace(1) @tex, !"texture", i32 1}
!6 = !{ptr addrspace(1) @txt, !"texture", i32 1}
!7 = !{ptr @_Z14mergeSortFirstP6float4i, !"kernel", i32 1}
!8 = !{ptr @_Z13mergeSortPassP6float4ii, !"kernel", i32 1}
!9 = !{ptr @_Z9mergepackPfS_, !"kernel", i32 1}
!10 = !{!"clang version 16.0.0 (https://github.com/llvm/llvm-project 809855b56f06dd7182685f88fbbc64111df9339a)"}
!11 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!12 = distinct !{!12, !13}
!13 = !{!"llvm.loop.mustprogress"}
!14 = distinct !{!14, !13}
!15 = !{i64 672300}
!16 = !{i64 738119}


Program exited with code: 0
===================================================

===================================================
Running command: /nethome/jchen706/prefix/opt/llvm/bin/llvm-link -o mergesort_kernel-cuda.translated.linked.bc /nethome/jchen706/coding/code2/amdcuda/benchmarks/rodinia/hybridsort/hip/mergesort_kernel-cuda-nvptx64-nvidia-cuda-sm_35.bc.translated_test.bc /nethome/jchen706/coding/code2/amdcuda/bitcode/cudaamd-gridblock-size.ll /nethome/jchen706/coding/code2/amdcuda/bitcode/cudaamd-math.ll /nethome/jchen706/coding/code2/amdcuda/bitcode/cuda2gcn.ll /nethome/jchen706/coding/code2/amdcuda/bitcode/atomic.ll /nethome/jchen706/coding/code2/amdcuda/bitcode/textureInt2DReadMode.ll /nethome/jchen706/coding/code2/amdcuda/bitcode/textureFloat1DReadMode.ll /nethome/jchen706/coding/code2/amdcuda/bitcode/textureFloat4_1DReadMode.ll /nethome/jchen706/coding/code2/amdcuda/build/cupbop-amd-bitcode.bc /nethome/jchen706/prefix/opt/amdgcn/bitcode/opencl.bc /nethome/jchen706/prefix/opt/amdgcn/bitcode/ockl.bc /nethome/jchen706/prefix/opt/amdgcn/bitcode/ocml.bc /nethome/jchen706/prefix/opt/amdgcn/bitcode/oclc_abi_version_400.bc /nethome/jchen706/prefix/opt/amdgcn/bitcode/oclc_finite_only_off.bc /nethome/jchen706/prefix/opt/amdgcn/bitcode/oclc_unsafe_math_on.bc /nethome/jchen706/prefix/opt/amdgcn/bitcode/oclc_daz_opt_on.bc /nethome/jchen706/prefix/opt/amdgcn/bitcode/oclc_correctly_rounded_sqrt_on.bc /nethome/jchen706/prefix/opt/amdgcn/bitcode/oclc_isa_version_90a.bc /nethome/jchen706/prefix/opt/amdgcn/bitcode/oclc_wavefrontsize64_on.bc
Working directory: /nethome/jchen706/coding/code2/amdcuda/benchmarks/rodinia/hybridsort/hip


Program exited with code: 1
===================================================

===================================================
Changing directory to: /nethome/jchen706/coding/code2/amdcuda/benchmarks/rodinia/hybridsort/hip
Working directory: /nethome/jchen706/coding/code2/amdcuda/benchmarks/rodinia/hybridsort/hip
===================================================

===================================================
Running command: /nethome/jchen706/prefix/opt/llvm/bin/clang++ mergesort_kernel.cu -c -O0 --cuda-path=/nethome/jchen706/cuda-11.5 --cuda-gpu-arch=sm_35 -L/nethome/jchen706/cuda-11.5/lib64 -lcudart_static -ldl -lrt -pthread -save-temps -fPIC
Working directory: /nethome/jchen706/coding/code2/amdcuda/benchmarks/rodinia/hybridsort/hip


Program exited with code: 0
===================================================

===================================================
Gathering bitcode libraries
* Built-in Bitcode hip.bc at /nethome/jchen706/prefix/opt/amdgcn/bitcode/hip.bc
* Built-in Bitcode ocml.bc at /nethome/jchen706/prefix/opt/amdgcn/bitcode/ocml.bc
* Built-in Bitcode ockl.bc at /nethome/jchen706/prefix/opt/amdgcn/bitcode/ockl.bc
* Built-in Bitcode oclc_daz_opt_off.bc at /nethome/jchen706/prefix/opt/amdgcn/bitcode/oclc_daz_opt_off.bc
* Built-in Bitcode oclc_unsafe_math_off.bc at /nethome/jchen706/prefix/opt/amdgcn/bitcode/oclc_unsafe_math_off.bc
* Built-in Bitcode oclc_finite_only_off.bc at /nethome/jchen706/prefix/opt/amdgcn/bitcode/oclc_finite_only_off.bc
* Built-in Bitcode oclc_correctly_rounded_sqrt_on.bc at /nethome/jchen706/prefix/opt/amdgcn/bitcode/oclc_correctly_rounded_sqrt_on.bc
* Built-in Bitcode oclc_wavefrontsize64_on.bc at /nethome/jchen706/prefix/opt/amdgcn/bitcode/oclc_wavefrontsize64_on.bc
* Built-in Bitcode oclc_isa_version_90a.bc at /nethome/jchen706/prefix/opt/amdgcn/bitcode/oclc_isa_version_90a.bc
* Built-in Bitcode oclc_abi_version_400.bc at /nethome/jchen706/prefix/opt/amdgcn/bitcode/oclc_abi_version_400.bc
* Linked Bitcode cudaamd-gridblock-size.ll at /nethome/jchen706/coding/code2/amdcuda/bitcode/cudaamd-gridblock-size.ll
* Linked Bitcode cudaamd-math.ll at /nethome/jchen706/coding/code2/amdcuda/bitcode/cudaamd-math.ll
* Linked Bitcode cuda2gcn.ll at /nethome/jchen706/coding/code2/amdcuda/bitcode/cuda2gcn.ll
* Linked Bitcode atomic.ll at /nethome/jchen706/coding/code2/amdcuda/bitcode/atomic.ll
* Linked Bitcode textureInt2DReadMode.ll at /nethome/jchen706/coding/code2/amdcuda/bitcode/textureInt2DReadMode.ll
* Linked Bitcode textureFloat1DReadMode.ll at /nethome/jchen706/coding/code2/amdcuda/bitcode/textureFloat1DReadMode.ll
* Linked Bitcode textureFloat4_1DReadMode.ll at /nethome/jchen706/coding/code2/amdcuda/bitcode/textureFloat4_1DReadMode.ll
* Linked Bitcode cupbop-amd-bitcode.bc at /nethome/jchen706/coding/code2/amdcuda/build/cupbop-amd-bitcode.bc
* Linked Bitcode opencl.bc at /nethome/jchen706/prefix/opt/amdgcn/bitcode/opencl.bc
* Linked Bitcode ockl.bc at /nethome/jchen706/prefix/opt/amdgcn/bitcode/ockl.bc
* Linked Bitcode ocml.bc at /nethome/jchen706/prefix/opt/amdgcn/bitcode/ocml.bc
* Linked Bitcode oclc_abi_version_400.bc at /nethome/jchen706/prefix/opt/amdgcn/bitcode/oclc_abi_version_400.bc
* Linked Bitcode oclc_finite_only_off.bc at /nethome/jchen706/prefix/opt/amdgcn/bitcode/oclc_finite_only_off.bc
* Linked Bitcode oclc_unsafe_math_on.bc at /nethome/jchen706/prefix/opt/amdgcn/bitcode/oclc_unsafe_math_on.bc
* Linked Bitcode oclc_daz_opt_on.bc at /nethome/jchen706/prefix/opt/amdgcn/bitcode/oclc_daz_opt_on.bc
* Linked Bitcode oclc_correctly_rounded_sqrt_on.bc at /nethome/jchen706/prefix/opt/amdgcn/bitcode/oclc_correctly_rounded_sqrt_on.bc
* Linked Bitcode oclc_isa_version_90a.bc at /nethome/jchen706/prefix/opt/amdgcn/bitcode/oclc_isa_version_90a.bc
* Linked Bitcode oclc_wavefrontsize64_on.bc at /nethome/jchen706/prefix/opt/amdgcn/bitcode/oclc_wavefrontsize64_on.bc
===================================================

===================================================
Locating compiled IRs
Found host IR at /nethome/jchen706/coding/code2/amdcuda/benchmarks/rodinia/hybridsort/hip/mergesort_kernel-host-x86_64-unknown-linux-gnu.bc
[*] Found device IR at /nethome/jchen706/coding/code2/amdcuda/benchmarks/rodinia/hybridsort/hip/mergesort_kernel-cuda-nvptx64-nvidia-cuda-sm_35.bc
===================================================

===================================================
Running command: /nethome/jchen706/coding/code2/amdcuda/build/compilation/kernelTranslator /nethome/jchen706/coding/code2/amdcuda/benchmarks/rodinia/hybridsort/hip/mergesort_kernel-cuda-nvptx64-nvidia-cuda-sm_35.bc
Working directory: /nethome/jchen706/coding/code2/amdcuda/benchmarks/rodinia/hybridsort/hip

Called replace_intrinsics on _Z8sortElem6float4
Running vprintf pass on function _Z8sortElem6float4
math fn pass
Called replace_intrinsics on _Z9getLowest6float4S_
Running vprintf pass on function _Z9getLowest6float4S_
Called function: llvm.memcpy.p0.p0.i64
math fn pass
Called replace_intrinsics on _Z10getHighest6float4S_
Running vprintf pass on function _Z10getHighest6float4S_
Called function: llvm.memcpy.p0.p0.i64
math fn pass
Identified a new cuda kernel _Z14mergeSortFirstP6float4i
Called replace_intrinsics on _Z14mergeSortFirstP6float4i
Running vprintf pass on function _Z14mergeSortFirstP6float4i
Called function: _ZN25__cuda_builtin_blockIdx_t17__fetch_builtin_xEv
Called function: _ZN25__cuda_builtin_blockDim_t17__fetch_builtin_xEv
Called function: _ZN26__cuda_builtin_threadIdx_t17__fetch_builtin_xEv
Called function: llvm.nvvm.texsurf.handle.internal.p1
Called function: _ZN25__cuda_builtin_blockDim_t17__fetch_builtin_xEv
Called function: _ZN26__cuda_builtin_threadIdx_t17__fetch_builtin_xEv
Called function: _ZL10tex1DfetchI6float4EN17__nv_tex_rmet_retIT_E4typeE7textureIS2_Li1EL19cudaTextureReadMode0EEi
Called function: llvm.memcpy.p0.p0.i64
Called function: _Z8sortElem6float4
Called function: _ZN25__cuda_builtin_blockDim_t17__fetch_builtin_xEv
Called function: _ZN26__cuda_builtin_threadIdx_t17__fetch_builtin_xEv
Called function: llvm.memcpy.p0.p0.i64
math fn pass
Called replace_intrinsics on _ZN25__cuda_builtin_blockIdx_t17__fetch_builtin_xEv
Found new intrinsics to replace...
Running vprintf pass on function _ZN25__cuda_builtin_blockIdx_t17__fetch_builtin_xEv
Called function: llvm.amdgcn.workgroup.id.x
math fn pass
Called replace_intrinsics on _ZN25__cuda_builtin_blockDim_t17__fetch_builtin_xEv
Found new intrinsics to replace...
Running vprintf pass on function _ZN25__cuda_builtin_blockDim_t17__fetch_builtin_xEv
Called function: cudaamd.nvvm.read.ptx.sreg.ntid.x
math fn pass
Called replace_intrinsics on _ZN26__cuda_builtin_threadIdx_t17__fetch_builtin_xEv
Found new intrinsics to replace...
Running vprintf pass on function _ZN26__cuda_builtin_threadIdx_t17__fetch_builtin_xEv
Called function: llvm.amdgcn.workitem.id.x
math fn pass
Called replace_intrinsics on _ZL10tex1DfetchI6float4EN17__nv_tex_rmet_retIT_E4typeE7textureIS2_Li1EL19cudaTextureReadMode0EEi
Running vprintf pass on function _ZL10tex1DfetchI6float4EN17__nv_tex_rmet_retIT_E4typeE7textureIS2_Li1EL19cudaTextureReadMode0EEi
Called function: _ZN12_GLOBAL__N_110__cuda_tex11__tex_fetchINS0_5__TagILi95EEE6float47textureIS4_Li1EL19cudaTextureReadMode0EEJiEEEvPT0_T1_DpT2_
math fn pass
Identified a new cuda kernel _Z13mergeSortPassP6float4ii
Called replace_intrinsics on _Z13mergeSortPassP6float4ii
Running vprintf pass on function _Z13mergeSortPassP6float4ii
Called function: _ZN25__cuda_builtin_blockIdx_t17__fetch_builtin_xEv
Called function: _ZN25__cuda_builtin_blockDim_t17__fetch_builtin_xEv
Called function: _ZN26__cuda_builtin_threadIdx_t17__fetch_builtin_xEv
Called function: llvm.nvvm.texsurf.handle.internal.p1
Called function: _ZL10tex1DfetchI6float4EN17__nv_tex_rmet_retIT_E4typeE7textureIS2_Li1EL19cudaTextureReadMode0EEi
Called function: llvm.memcpy.p0.p0.i64
Called function: llvm.nvvm.texsurf.handle.internal.p1
Called function: _ZL10tex1DfetchI6float4EN17__nv_tex_rmet_retIT_E4typeE7textureIS2_Li1EL19cudaTextureReadMode0EEi
Called function: llvm.memcpy.p0.p0.i64
Called function: llvm.nvvm.texsurf.handle.internal.p1
Called function: _ZL10tex1DfetchI6float4EN17__nv_tex_rmet_retIT_E4typeE7textureIS2_Li1EL19cudaTextureReadMode0EEi
Called function: llvm.memcpy.p0.p0.i64
Called function: llvm.nvvm.texsurf.handle.internal.p1
Called function: _ZL10tex1DfetchI6float4EN17__nv_tex_rmet_retIT_E4typeE7textureIS2_Li1EL19cudaTextureReadMode0EEi
Called function: llvm.nvvm.texsurf.handle.internal.p1
Called function: _ZL10tex1DfetchI6float4EN17__nv_tex_rmet_retIT_E4typeE7textureIS2_Li1EL19cudaTextureReadMode0EEi
Called function: llvm.memcpy.p0.p0.i64
Called function: llvm.memcpy.p0.p0.i64
Called function: _Z9getLowest6float4S_
Called function: llvm.memcpy.p0.p0.i64
Called function: llvm.memcpy.p0.p0.i64
Called function: _Z10getHighest6float4S_
Called function: llvm.memcpy.p0.p0.i64
Called function: _Z8sortElem6float4
Called function: llvm.memcpy.p0.p0.i64
Called function: llvm.memcpy.p0.p0.i64
Called function: _Z8sortElem6float4
Called function: llvm.memcpy.p0.p0.i64
Called function: llvm.memcpy.p0.p0.i64
Called function: llvm.memcpy.p0.p0.i64
Called function: llvm.memcpy.p0.p0.i64
Called function: llvm.memcpy.p0.p0.i64
Called function: llvm.memcpy.p0.p0.i64
Called function: llvm.memcpy.p0.p0.i64
math fn pass
Identified a new cuda kernel _Z9mergepackPfS_
Called replace_intrinsics on _Z9mergepackPfS_
Running vprintf pass on function _Z9mergepackPfS_
Called function: _ZN25__cuda_builtin_blockIdx_t17__fetch_builtin_xEv
Called function: _ZN25__cuda_builtin_blockDim_t17__fetch_builtin_xEv
Called function: _ZN26__cuda_builtin_threadIdx_t17__fetch_builtin_xEv
Called function: _ZN25__cuda_builtin_blockIdx_t17__fetch_builtin_yEv
math fn pass
Called replace_intrinsics on _ZN25__cuda_builtin_blockIdx_t17__fetch_builtin_yEv
Found new intrinsics to replace...
Running vprintf pass on function _ZN25__cuda_builtin_blockIdx_t17__fetch_builtin_yEv
Called function: llvm.amdgcn.workgroup.id.y
math fn pass
Called replace_intrinsics on _ZN12_GLOBAL__N_110__cuda_tex11__tex_fetchINS0_5__TagILi95EEE6float47textureIS4_Li1EL19cudaTextureReadMode0EEJiEEEvPT0_T1_DpT2_
Running vprintf pass on function _ZN12_GLOBAL__N_110__cuda_tex11__tex_fetchINS0_5__TagILi95EEE6float47textureIS4_Li1EL19cudaTextureReadMode0EEJiEEEvPT0_T1_DpT2_
Called function: _ZN12_GLOBAL__N_110__cuda_tex19__tex_handle_to_objI7textureI6float4Li1EL19cudaTextureReadMode0EEEEyT_
Called function: _ZN12_GLOBAL__N_110__cuda_tex14__tex_fetch_v4INS0_5__TagILi95EEEE5__runI6float4EET_yi
Called function: _ZN12_GLOBAL__N_110__cuda_tex9__convertI6float4S2_E5__runILi4EEES2_S2_
Called function: llvm.memcpy.p0.p0.i64
math fn pass
Called replace_intrinsics on _ZN12_GLOBAL__N_110__cuda_tex9__convertI6float4S2_E5__runILi4EEES2_S2_
Running vprintf pass on function _ZN12_GLOBAL__N_110__cuda_tex9__convertI6float4S2_E5__runILi4EEES2_S2_
math fn pass
Called replace_intrinsics on _ZN12_GLOBAL__N_110__cuda_tex14__tex_fetch_v4INS0_5__TagILi95EEEE5__runI6float4EET_yi
Running vprintf pass on function _ZN12_GLOBAL__N_110__cuda_tex14__tex_fetch_v4INS0_5__TagILi95EEEE5__runI6float4EET_yi
math fn pass
Called replace_intrinsics on _ZN12_GLOBAL__N_110__cuda_tex19__tex_handle_to_objI7textureI6float4Li1EL19cudaTextureReadMode0EEEEyT_
Running vprintf pass on function _ZN12_GLOBAL__N_110__cuda_tex19__tex_handle_to_objI7textureI6float4Li1EL19cudaTextureReadMode0EEEEyT_
math fn pass
Running Shared Memory Process on Module 
Constant Memory Variable: constStartAddr
Constant Memory Variable: finalStartAddr
Constant Memory Variable: nullElems
Process Device Side Vector Function Type _Z8sortElem6float4
Process Device Side Vector Function Type _Z9getLowest6float4S_
Process Device Side Vector Function Type _Z10getHighest6float4S_
  %4 = getelementptr inbounds %struct.HIP_vector_type, ptr %3, i32 0, i32 0
  %5 = getelementptr inbounds %struct.HIP_vector_base, ptr %4, i32 0, i32 0
  %6 = getelementptr inbounds %union.anon, ptr %5, i32 0, i32 0
  %7 = getelementptr inbounds %struct.HIP_vector_base, ptr %6, i32 0, i32 0
  %13 = getelementptr inbounds %struct.float4, ptr %3, i32 0, i32 0
  %17 = getelementptr inbounds %struct.float4, ptr %3, i32 0, i32 1
  %23 = getelementptr inbounds %struct.float4, ptr %3, i32 0, i32 1
  %28 = getelementptr inbounds %struct.float4, ptr %3, i32 0, i32 0
  %34 = getelementptr inbounds %struct.float4, ptr %11, i32 0, i32 0
  %37 = getelementptr inbounds %struct.float4, ptr %3, i32 0, i32 1
  %41 = getelementptr inbounds %struct.float4, ptr %3, i32 0, i32 0
  %47 = getelementptr inbounds %struct.float4, ptr %3, i32 0, i32 1
  %52 = getelementptr inbounds %struct.float4, ptr %3, i32 0, i32 0
  %58 = getelementptr inbounds %struct.float4, ptr %11, i32 0, i32 1
  %61 = getelementptr inbounds %struct.float4, ptr %3, i32 0, i32 2
  %65 = getelementptr inbounds %struct.float4, ptr %3, i32 0, i32 3
  %71 = getelementptr inbounds %struct.float4, ptr %3, i32 0, i32 3
  %76 = getelementptr inbounds %struct.float4, ptr %3, i32 0, i32 2
  %82 = getelementptr inbounds %struct.float4, ptr %11, i32 0, i32 2
  %85 = getelementptr inbounds %struct.float4, ptr %3, i32 0, i32 3
  %89 = getelementptr inbounds %struct.float4, ptr %3, i32 0, i32 2
  %95 = getelementptr inbounds %struct.float4, ptr %3, i32 0, i32 3
  %100 = getelementptr inbounds %struct.float4, ptr %3, i32 0, i32 2
  %106 = getelementptr inbounds %struct.float4, ptr %11, i32 0, i32 3
  %109 = getelementptr inbounds %struct.float4, ptr %11, i32 0, i32 0
  %113 = getelementptr inbounds %struct.float4, ptr %11, i32 0, i32 2
  %119 = getelementptr inbounds %struct.float4, ptr %11, i32 0, i32 2
  %124 = getelementptr inbounds %struct.float4, ptr %11, i32 0, i32 0
  %130 = getelementptr inbounds %struct.float4, ptr %3, i32 0, i32 0
  %133 = getelementptr inbounds %struct.float4, ptr %11, i32 0, i32 1
  %137 = getelementptr inbounds %struct.float4, ptr %11, i32 0, i32 3
  %143 = getelementptr inbounds %struct.float4, ptr %11, i32 0, i32 3
  %148 = getelementptr inbounds %struct.float4, ptr %11, i32 0, i32 1
  %154 = getelementptr inbounds %struct.float4, ptr %3, i32 0, i32 1
  %157 = getelementptr inbounds %struct.float4, ptr %11, i32 0, i32 2
  %161 = getelementptr inbounds %struct.float4, ptr %11, i32 0, i32 0
  %167 = getelementptr inbounds %struct.float4, ptr %11, i32 0, i32 2
  %172 = getelementptr inbounds %struct.float4, ptr %11, i32 0, i32 0
  %178 = getelementptr inbounds %struct.float4, ptr %3, i32 0, i32 2
  %181 = getelementptr inbounds %struct.float4, ptr %11, i32 0, i32 3
  %185 = getelementptr inbounds %struct.float4, ptr %11, i32 0, i32 1
  %191 = getelementptr inbounds %struct.float4, ptr %11, i32 0, i32 3
  %196 = getelementptr inbounds %struct.float4, ptr %11, i32 0, i32 1
  %202 = getelementptr inbounds %struct.float4, ptr %3, i32 0, i32 3
  %205 = getelementptr inbounds %struct.float4, ptr %3, i32 0, i32 0
  %209 = getelementptr inbounds %struct.float4, ptr %11, i32 0, i32 0
  %212 = getelementptr inbounds %struct.float4, ptr %3, i32 0, i32 1
  %216 = getelementptr inbounds %struct.float4, ptr %3, i32 0, i32 2
  %222 = getelementptr inbounds %struct.float4, ptr %3, i32 0, i32 2
  %227 = getelementptr inbounds %struct.float4, ptr %3, i32 0, i32 1
  %233 = getelementptr inbounds %struct.float4, ptr %11, i32 0, i32 1
  %236 = getelementptr inbounds %struct.float4, ptr %3, i32 0, i32 2
  %240 = getelementptr inbounds %struct.float4, ptr %3, i32 0, i32 1
  %246 = getelementptr inbounds %struct.float4, ptr %3, i32 0, i32 2
  %251 = getelementptr inbounds %struct.float4, ptr %3, i32 0, i32 1
  %257 = getelementptr inbounds %struct.float4, ptr %11, i32 0, i32 2
  %260 = getelementptr inbounds %struct.float4, ptr %3, i32 0, i32 3
  %264 = getelementptr inbounds %struct.float4, ptr %11, i32 0, i32 3
  %5 = getelementptr inbounds %struct.HIP_vector_type, ptr %4, i32 0, i32 0
  %6 = getelementptr inbounds %struct.HIP_vector_base, ptr %5, i32 0, i32 0
  %7 = getelementptr inbounds %union.anon, ptr %6, i32 0, i32 0
  %8 = getelementptr inbounds %struct.HIP_vector_base, ptr %7, i32 0, i32 0
  %12 = getelementptr inbounds %struct.HIP_vector_type, ptr %11, i32 0, i32 0
  %13 = getelementptr inbounds %struct.HIP_vector_base, ptr %12, i32 0, i32 0
  %14 = getelementptr inbounds %union.anon, ptr %13, i32 0, i32 0
  %15 = getelementptr inbounds %struct.HIP_vector_base, ptr %14, i32 0, i32 0
  %21 = getelementptr inbounds %struct.float4, ptr %4, i32 0, i32 0
  %25 = getelementptr inbounds %struct.float4, ptr %11, i32 0, i32 3
  %31 = getelementptr inbounds %struct.float4, ptr %4, i32 0, i32 0
  %36 = getelementptr inbounds %struct.float4, ptr %11, i32 0, i32 3
  %42 = getelementptr inbounds %struct.float4, ptr %4, i32 0, i32 0
  %45 = getelementptr inbounds %struct.float4, ptr %4, i32 0, i32 1
  %49 = getelementptr inbounds %struct.float4, ptr %11, i32 0, i32 2
  %55 = getelementptr inbounds %struct.float4, ptr %4, i32 0, i32 1
  %60 = getelementptr inbounds %struct.float4, ptr %11, i32 0, i32 2
  %66 = getelementptr inbounds %struct.float4, ptr %4, i32 0, i32 1
  %69 = getelementptr inbounds %struct.float4, ptr %4, i32 0, i32 2
  %73 = getelementptr inbounds %struct.float4, ptr %11, i32 0, i32 1
  %79 = getelementptr inbounds %struct.float4, ptr %4, i32 0, i32 2
  %84 = getelementptr inbounds %struct.float4, ptr %11, i32 0, i32 1
  %90 = getelementptr inbounds %struct.float4, ptr %4, i32 0, i32 2
  %93 = getelementptr inbounds %struct.float4, ptr %4, i32 0, i32 3
  %97 = getelementptr inbounds %struct.float4, ptr %11, i32 0, i32 0
  %103 = getelementptr inbounds %struct.float4, ptr %4, i32 0, i32 3
  %108 = getelementptr inbounds %struct.float4, ptr %11, i32 0, i32 0
  %114 = getelementptr inbounds %struct.float4, ptr %4, i32 0, i32 3
  %5 = getelementptr inbounds %struct.HIP_vector_type, ptr %4, i32 0, i32 0
  %6 = getelementptr inbounds %struct.HIP_vector_base, ptr %5, i32 0, i32 0
  %7 = getelementptr inbounds %union.anon, ptr %6, i32 0, i32 0
  %8 = getelementptr inbounds %struct.HIP_vector_base, ptr %7, i32 0, i32 0
  %12 = getelementptr inbounds %struct.HIP_vector_type, ptr %11, i32 0, i32 0
  %13 = getelementptr inbounds %struct.HIP_vector_base, ptr %12, i32 0, i32 0
  %14 = getelementptr inbounds %union.anon, ptr %13, i32 0, i32 0
  %15 = getelementptr inbounds %struct.HIP_vector_base, ptr %14, i32 0, i32 0
  %21 = getelementptr inbounds %struct.float4, ptr %4, i32 0, i32 3
  %25 = getelementptr inbounds %struct.float4, ptr %11, i32 0, i32 0
  %31 = getelementptr inbounds %struct.float4, ptr %4, i32 0, i32 3
  %36 = getelementptr inbounds %struct.float4, ptr %11, i32 0, i32 0
  %42 = getelementptr inbounds %struct.float4, ptr %11, i32 0, i32 0
  %45 = getelementptr inbounds %struct.float4, ptr %4, i32 0, i32 2
  %49 = getelementptr inbounds %struct.float4, ptr %11, i32 0, i32 1
  %55 = getelementptr inbounds %struct.float4, ptr %4, i32 0, i32 2
  %60 = getelementptr inbounds %struct.float4, ptr %11, i32 0, i32 1
  %66 = getelementptr inbounds %struct.float4, ptr %11, i32 0, i32 1
  %69 = getelementptr inbounds %struct.float4, ptr %4, i32 0, i32 1
  %73 = getelementptr inbounds %struct.float4, ptr %11, i32 0, i32 2
  %79 = getelementptr inbounds %struct.float4, ptr %4, i32 0, i32 1
  %84 = getelementptr inbounds %struct.float4, ptr %11, i32 0, i32 2
  %90 = getelementptr inbounds %struct.float4, ptr %11, i32 0, i32 2
  %93 = getelementptr inbounds %struct.float4, ptr %4, i32 0, i32 0
  %97 = getelementptr inbounds %struct.float4, ptr %11, i32 0, i32 3
  %103 = getelementptr inbounds %struct.float4, ptr %4, i32 0, i32 0
  %108 = getelementptr inbounds %struct.float4, ptr %11, i32 0, i32 3
  %114 = getelementptr inbounds %struct.float4, ptr %11, i32 0, i32 3tex
txt
Function: _Z14mergeSortFirstP6float4i

 First   %3 = alloca ptr, align 8, addrspace(5) 
  %3 = alloca ptr, align 8, addrspace(5) I 
  %4 = addrspacecast ptr addrspace(5) %3 to ptr I 
  %5 = alloca i32, align 4, addrspace(5) I 
  %6 = addrspacecast ptr addrspace(5) %5 to ptr I 
  %7 = alloca i32, align 4, addrspace(5) I 
  %8 = addrspacecast ptr addrspace(5) %7 to ptr I 
  %9 = alloca %struct.float4, align 16, addrspace(5) I 
  %10 = addrspacecast ptr addrspace(5) %9 to ptr I 
  %11 = alloca i64, align 4, addrspace(5) I 
  %12 = addrspacecast ptr addrspace(5) %11 to ptr I 
  %13 = alloca %struct.float4, align 16, addrspace(5) I 
  %14 = addrspacecast ptr addrspace(5) %13 to ptr I 
  %15 = alloca %struct.float4, align 16, addrspace(5) I 
  %16 = addrspacecast ptr addrspace(5) %15 to ptr I 
  %17 = addrspacecast ptr addrspace(1) %0 to ptr I 
  store ptr %17, ptr %4, align 8 I 
  store i32 %1, ptr %6, align 4 I 
  %18 = call noundef i32 @_ZN25__cuda_builtin_blockIdx_t17__fetch_builtin_xEv() #7 I 
heree
_ZN25__cuda_builtin_blockIdx_t17__fetch_builtin_xEv
  store i32 %18, ptr %8, align 4 I 
  %19 = load i32, ptr %8, align 4 I 
  %20 = call noundef i32 @_ZN25__cuda_builtin_blockDim_t17__fetch_builtin_xEv() #7 I 
heree
_ZN25__cuda_builtin_blockDim_t17__fetch_builtin_xEv
  %21 = mul i32 %19, %20 I 
  %22 = call noundef i32 @_ZN26__cuda_builtin_threadIdx_t17__fetch_builtin_xEv() #7 I 
heree
_ZN26__cuda_builtin_threadIdx_t17__fetch_builtin_xEv
  %23 = add i32 %21, %22 I 
  %24 = load i32, ptr %6, align 4 I 
  %25 = sdiv i32 %24, 4 I 
  %26 = icmp ult i32 %23, %25 I 
  br i1 %26, label %27, label %61 I 
  %28 = call i64 @llvm.nvvm.texsurf.handle.internal.p1(ptr addrspace(1) @tex) I 
heree
llvm.nvvm.texsurf.handle.internal.p1
 1 
@tex = addrspace(1) externally_initialized global %struct.texture undef
 foound 
  store i64 %31, ptr %14, align 4 I 
  %32 = load i32, ptr %10, align 4 I 
  %33 = call noundef i32 @_ZN25__cuda_builtin_blockDim_t17__fetch_builtin_xEv() #7 I 
heree
_ZN25__cuda_builtin_blockDim_t17__fetch_builtin_xEv
  %34 = mul i32 %32, %33 I 
  %35 = call noundef i32 @_ZN26__cuda_builtin_threadIdx_t17__fetch_builtin_xEv() #7 I 
heree
_ZN26__cuda_builtin_threadIdx_t17__fetch_builtin_xEv
  %36 = add i32 %34, %35 I 
  %37 = load i64, ptr %14, align 4 I 
  %38 = call %struct.float4 @_ZL10tex1DfetchI6float4EN17__nv_tex_rmet_retIT_E4typeE7textureIS2_Li1EL19cudaTextureReadMode0EEi(i64 %37, i32 noundef %36) #7 I 
heree
_ZL10tex1DfetchI6float4EN17__nv_tex_rmet_retIT_E4typeE7textureIS2_Li1EL19cudaTextureReadMode0EEi
 fetch here 
  %38 = call %struct.float4 @_ZL10tex1DfetchI6float4EN17__nv_tex_rmet_retIT_E4typeE7textureIS2_Li1EL19cudaTextureReadMode0EEi(i64 %37, i32 noundef %36) #7
%struct.float4 = type { float, float, float, float }
  %37 = load %struct.textureReference, ptr %30, align 8 
0x267c3a0
  %45 = extractvalue %struct.HIP_vector_type %41, 0
  %45 = getelementptr inbounds %struct.float4, ptr %14, i32 0, i32 0 need remove 
  %46 = extractvalue %struct.HIP_vector_type %41, 0 need remove 
  store float %46, ptr %43, align 16 need remove 
  %47 = getelementptr inbounds %struct.float4, ptr %14, i32 0, i32 1 need remove 
  %48 = extractvalue %struct.HIP_vector_type %41, 1 need remove 
  store float %48, ptr %47, align 4 need remove 
  %49 = getelementptr inbounds %struct.float4, ptr %14, i32 0, i32 2 need remove 
  %50 = extractvalue %struct.HIP_vector_type %41, 2 need remove 
  store float %50, ptr %49, align 8 need remove 
  %51 = getelementptr inbounds %struct.float4, ptr %14, i32 0, i32 3 need remove 
  %52 = extractvalue %struct.HIP_vector_type %41, 3 need remove 
  store float %52, ptr %51, align 4 need remove 
; Function Attrs: convergent mustprogress noinline norecurse nounwind optnone
define amdgpu_kernel void @_Z14mergeSortFirstP6float4i(ptr addrspace(1) noundef %0, i32 noundef %1) #1 {
  %3 = alloca %struct.texture, align 8, addrspace(5)
  %4 = addrspacecast ptr addrspace(5) %3 to ptr
  %5 = alloca %struct.HIP_vector_type, align 16, addrspace(5)
  %6 = addrspacecast ptr addrspace(5) %5 to ptr
  %7 = alloca ptr, align 8, addrspace(5)
  %8 = addrspacecast ptr addrspace(5) %7 to ptr
  %9 = alloca i32, align 4, addrspace(5)
  %10 = addrspacecast ptr addrspace(5) %9 to ptr
  %11 = alloca i32, align 4, addrspace(5)
  %12 = addrspacecast ptr addrspace(5) %11 to ptr
  %13 = alloca %struct.float4, align 16, addrspace(5)
  %14 = addrspacecast ptr addrspace(5) %13 to ptr
  %15 = alloca i64, align 4, addrspace(5)
  %16 = addrspacecast ptr addrspace(5) %15 to ptr
  %17 = alloca %struct.float4, align 16, addrspace(5)
  %18 = addrspacecast ptr addrspace(5) %17 to ptr
  %19 = alloca %struct.float4, align 16, addrspace(5)
  %20 = addrspacecast ptr addrspace(5) %19 to ptr
  %21 = addrspacecast ptr addrspace(1) %0 to ptr
  store ptr %21, ptr %8, align 8
  store i32 %1, ptr %10, align 4
  %22 = call noundef i32 @_ZN25__cuda_builtin_blockIdx_t17__fetch_builtin_xEv() #7
  store i32 %22, ptr %12, align 4
  %23 = load i32, ptr %12, align 4
  %24 = call noundef i32 @_ZN25__cuda_builtin_blockDim_t17__fetch_builtin_xEv() #7
  %25 = mul i32 %23, %24
  %26 = call noundef i32 @_ZN26__cuda_builtin_threadIdx_t17__fetch_builtin_xEv() #7
  %27 = add i32 %25, %26
  %28 = load i32, ptr %10, align 4
  %29 = sdiv i32 %28, 4
  %30 = icmp ult i32 %27, %29
  br i1 %30, label %31, label %70

31:                                               ; preds = %2
  call void @llvm.memcpy.p0.p0.i64(ptr %4, ptr addrspacecast (ptr addrspace(1) @tex to ptr), i64 88, i1 false)
  %32 = getelementptr inbounds %struct.textureReference, ptr %4, i32 0, i32 0
  %33 = call i64 @llvm.nvvm.texsurf.handle.internal.p1(ptr addrspace(1) @tex)
  store i64 %33, ptr %16, align 4
  %34 = load i32, ptr %12, align 4
  %35 = call noundef i32 @_ZN25__cuda_builtin_blockDim_t17__fetch_builtin_xEv() #7
  %36 = mul i32 %34, %35
  %37 = call noundef i32 @_ZN26__cuda_builtin_threadIdx_t17__fetch_builtin_xEv() #7
  %38 = add i32 %36, %37
  %39 = load %struct.textureReference, ptr %32, align 8
  %40 = load i64, ptr %16, align 4
  %41 = call %struct.HIP_vector_type @_ZL10tex1DfetchI15HIP_vector_typeIfLj4EEL18hipTextureReadMode0EEN13__hip_tex_retIT_XT0_EbE4typeE7textureIS4_Li1EXT0_EEi(%struct.textureReference %39, i32 %38)
  %42 = call %struct.float4 @_ZL10tex1DfetchI6float4EN17__nv_tex_rmet_retIT_E4typeE7textureIS2_Li1EL19cudaTextureReadMode0EEi(%struct.textureReference %39, i32 noundef %38) #7
  %43 = getelementptr inbounds %struct.HIP_vector_type, ptr %6, i32 0, i32 0
  %44 = extractvalue %struct.HIP_vector_type %41, 0
  store %struct.HIP_vector_base %44, ptr %43, align 16
  %45 = getelementptr inbounds %struct.float4, ptr %14, i32 0, i32 0
  %46 = extractvalue %struct.HIP_vector_type %41, 0
  store float %46, ptr %43, align 16
  %47 = getelementptr inbounds %struct.float4, ptr %14, i32 0, i32 1
  %48 = extractvalue %struct.HIP_vector_type %41, 1
  store float %48, ptr %47, align 4
  %49 = getelementptr inbounds %struct.float4, ptr %14, i32 0, i32 2
  %50 = extractvalue %struct.HIP_vector_type %41, 2
  store float %50, ptr %49, align 8
  %51 = getelementptr inbounds %struct.float4, ptr %14, i32 0, i32 3
  %52 = extractvalue %struct.HIP_vector_type %41, 3
  store float %52, ptr %51, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %20, ptr align 16 %14, i64 16, i1 false)
  %53 = call %struct.float4 @_Z8sortElem6float4(ptr noundef byval(%struct.float4) align 16 %20) #7
  %54 = getelementptr inbounds %struct.float4, ptr %18, i32 0, i32 0
  %55 = extractvalue %struct.float4 %53, 0
  store float %55, ptr %54, align 16
  %56 = getelementptr inbounds %struct.float4, ptr %18, i32 0, i32 1
  %57 = extractvalue %struct.float4 %53, 1
  store float %57, ptr %56, align 4
  %58 = getelementptr inbounds %struct.float4, ptr %18, i32 0, i32 2
  %59 = extractvalue %struct.float4 %53, 2
  store float %59, ptr %58, align 8
  %60 = getelementptr inbounds %struct.float4, ptr %18, i32 0, i32 3
  %61 = extractvalue %struct.float4 %53, 3
  store float %61, ptr %60, align 4
  %62 = load ptr, ptr %8, align 8
  %63 = load i32, ptr %12, align 4
  %64 = call noundef i32 @_ZN25__cuda_builtin_blockDim_t17__fetch_builtin_xEv() #7
  %65 = mul i32 %63, %64
  %66 = call noundef i32 @_ZN26__cuda_builtin_threadIdx_t17__fetch_builtin_xEv() #7
  %67 = add i32 %65, %66
  %68 = zext i32 %67 to i64
  %69 = getelementptr inbounds %struct.float4, ptr %62, i64 %68
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %69, ptr align 16 %18, i64 16, i1 false)
  br label %70

70:                                               ; preds = %31, %2
  ret void
}

 finish two 
  %43 = getelementptr inbounds %struct.HIP_vector_type, ptr %6, i32 0, i32 0 I 
 getelementptr here 
 abc 
  %43 = getelementptr inbounds %struct.HIP_vector_type, ptr %6, i32 0, i32 0
 abc 
 out ptr 
  %44 = extractvalue %struct.HIP_vector_type %41, 0 I 
  store %struct.HIP_vector_base %44, ptr %43, align 16 I 
  %45 = getelementptr inbounds %struct.float4, ptr %14, i32 0, i32 0 I 
 getelementptr here 
  %46 = extractvalue %struct.HIP_vector_type %41, 0 I 
  store float %46, ptr %43, align 16 I 
  %47 = getelementptr inbounds %struct.float4, ptr %14, i32 0, i32 1 I 
 getelementptr here 
  %48 = extractvalue %struct.HIP_vector_type %41, 1 I 
  store float %48, ptr %47, align 4 I 
  %49 = getelementptr inbounds %struct.float4, ptr %14, i32 0, i32 2 I 
 getelementptr here 
  %50 = extractvalue %struct.HIP_vector_type %41, 2 I 
  store float %50, ptr %49, align 8 I 
  %51 = getelementptr inbounds %struct.float4, ptr %14, i32 0, i32 3 I 
 getelementptr here 
  %52 = extractvalue %struct.HIP_vector_type %41, 3 I 
  store float %52, ptr %51, align 4 I 
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %20, ptr align 16 %14, i64 16, i1 false) I 
heree
llvm.memcpy.p0.p0.i64
 999 
 there 12 
  %55 = call %struct.float4 @_Z8sortElem6float4(ptr noundef byval(%struct.float4) align 16 %22) #7 I 
heree
 some type of call 

Program exited with code: 1
===================================================

